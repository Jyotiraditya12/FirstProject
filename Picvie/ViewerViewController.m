     //
//  ViewerViewController.m
//  Picvie
//
//  Created by Jyotiraditya Dhalmahapatra on 25/01/13.
//  Copyright (c) 2013 Pronto. All rights reserved.
//

#import "ViewerViewController.h"
#import <MobileCoreServices/MobileCoreServices.h>
#import <Social/Social.h>
#import <Accounts/ACAccountType.h>
#import <Accounts/ACAccountCredential.h>
#import <AssetsLibrary/AssetsLibrary.h>
#import <ImageIO/CGImageProperties.h>
static int  currentPage;
static int previousPage;
static int counter;
static int k;
static int l;
static int imageSwitcher,showStart;
bool imageAssetsAvailable;
BOOL videoAssetsAvailable;

testClasViewController *test;
viewerLayOutOne *oneView;
viewerLayOutTwo *twoView;
viewerLayOutThree *threeView;
viewerLayOutFour *fourView;
viewerLayOutNine *nineView;
ViewerViewController *view;
oneLayOut *one;
threeLayOut *three;
twoLayOut *two;
fourLayOut *four;
nineLayOut *nine;
XMLParser *xmlParser;
Album	*currentAlbum;
typedef void (^ALAssetsLibraryAssetForURLResultBlock)(ALAsset *asset);
typedef void (^ALAssetsLibraryAccessFailureBlock)(NSError *error);

@interface ViewerViewController ()

@end

@implementation ViewerViewController
@synthesize scrollView, startStopButtonIsActive, databasePath, albumDB,status, slideMenuView, accountStore, facebookAccount;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self)
    {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
	// Do any additional setup after loading the view, typically from a nib.
     loadingAlertView = [[UIAlertView alloc] initWithTitle:@"Please Wait"
                                           message:@"Loading Your Albums in a moment"
                                          delegate:self
                                 cancelButtonTitle:nil
                                 otherButtonTitles:nil];
    
    spinners = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
    spinners.center = CGPointMake(139.5, 85.5);
    [spinners setUserInteractionEnabled:YES];
    [loadingAlertView addSubview:spinners];
    [spinners startAnimating];
    [loadingAlertView show];
    [[UIApplication sharedApplication] setStatusBarHidden:YES withAnimation:UIStatusBarAnimationFade];
    [[UINavigationBar appearance] setTintColor:[UIColor blackColor]];
    showStart = 1;
    [self builderButton];
    [self cameraButton];
    [self helpButton];
   // check = 0;
    //Set header runtime
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            UIImageView *logoImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 32, 40, 40)];
            UIImage *logo = [UIImage imageNamed:@"PicvieLogo1.png"];
            logo = [ViewerViewController imageWithImage:logo scaledToWidth:logoImage.frame.size.width];
            [logoImage setImage:logo];
            [self.view addSubview:logoImage];
            self->topNavigationBar.topItem.title = @"Picvie Album";
        }
        else
        {
            UIImageView *logoImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 32, 40, 40)];
            UIImage *logo = [UIImage imageNamed:@"PicvieLogo1.png"];
            logo = [ViewerViewController imageWithImage:logo scaledToWidth:logoImage.frame.size.width];
            [logoImage setImage:logo];
            [self.view addSubview:logoImage];
            self->topNavigationBar.topItem.title = @"Picvie Album";
        }
    }
    else
    {
        UIImageView *logoImage = [[UIImageView alloc]initWithFrame:CGRectMake(0, 44, 65, 65)];
        UIImage *logo = [UIImage imageNamed:@"PicvieLogo1.png"];
        logo = [ViewerViewController imageWithImage:logo scaledToWidth:logoImage.frame.size.width];
        [logoImage setImage:logo];
        [self.view addSubview:logoImage];
        self->topNavigationBar.topItem.title = @"Picvie Album";
                
    }
    //creating DataBase------
    NSString *docsDir;
    NSArray *dirPaths;
    // Get the documents directory
    dirPaths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    docsDir = dirPaths[0];
    //--------------------- Build the path to the database file--------------------------//
    databasePath = [[NSString alloc] initWithString: [docsDir stringByAppendingPathComponent:@"album.db"]];
    
    NSFileManager *filemgr = [NSFileManager defaultManager];
    
    if ([filemgr fileExistsAtPath: databasePath ] == YES)
    {
        const char *dbpath = [databasePath UTF8String];
        
        if (sqlite3_open(dbpath, & albumDB) == SQLITE_OK)
        {
                        
            char *errMsg;
            const char *sql_stmt = "CREATE TABLE IF NOT EXISTS ALBUM (ALBUMNAME TEXT, PASSCODE TEXT)";
            
            if (sqlite3_exec(albumDB, sql_stmt, NULL, NULL, &errMsg) != SQLITE_OK)
            {
                status.text = @"Failed to create table";
            }
            const char *sql_stmt1 = "CREATE TABLE IF NOT EXISTS TUTORIAL (DONOTSHOW TEXT)";
            
            if (sqlite3_exec(albumDB, sql_stmt1, NULL, NULL, &errMsg) != SQLITE_OK)
            {
                status.text = @"Failed to create table";
            }
            sqlite3_close(albumDB);
        }
        else
        {
            status.text = @"Failed to open/create database";
        }
    }
        dispatch_async(dispatch_get_main_queue(), ^{
            [self displayDirectory];
        });
}

//Initaily Display All Album
- (void) displayDirectory
{
    viewer.enabled = NO;
    settings.enabled = YES;
        if (!assetsLibrary)
        {
            assetsLibrary = [[ALAssetsLibrary alloc] init];
        }
        if (!groups)
        {
            groups = [[NSMutableArray alloc] init];
        }
        else
        {
            [groups removeAllObjects];
            //groups = NULL;
        }
        ALAssetsLibraryGroupsEnumerationResultsBlock listGroupBlock = ^(ALAssetsGroup *group, BOOL *stop)
        {
            if(group != NULL)
            {
                [groups addObject:group];
            }
            else
            {
                if(backToAlbum)
                {
                    [self updateUI];
                    backToAlbum = FALSE;
                }
                else
                {
                    [self separateImages];
                    [self separateVideos];
                    [self createYearBook];
                    [self updateUI];
                }
            }
        };
        
        ALAssetsLibraryAccessFailureBlock failureBlock = ^(NSError *error)
        {
            NSString *errorMessage = nil;
            switch ([error code])
            {
                case ALAssetsLibraryAccessUserDeniedError:
                case ALAssetsLibraryAccessGloballyDeniedError:
                    errorMessage = @"The user has declined access to it.";
                    break;
                default:
                    errorMessage = @"Reason unknown.";
                    break;
            }
        };
        [assetsLibrary enumerateGroupsWithTypes:ALAssetsGroupAll usingBlock:listGroupBlock failureBlock:failureBlock];
}

//Defalut Image
-(void)defaultImage
{

    if([themeName isEqualToString:@"iOS Theme"])
    {
        imagePath = [UIImage imageNamed:@"bg_iOS Theme_theme.png"];
        
        
    }
    if([themeName isEqualToString:@"Colors"])
    {
        imagePath = [UIImage imageNamed:@"bg_Colors_ipad_theme.png"];
        
    }
    if([themeName isEqualToString:@"Party Theme"])
    {
        imagePath = [UIImage imageNamed:@"bg_Party Theme_ipad_theme.png"];
        
    }
    
    if([themeName isEqualToString:@"Glass"])
    {
        imagePath = [UIImage imageNamed:@"bg_Glass_ipad_theme.png"];
        
    }
    
    if([themeName isEqualToString:@"BirthDay"])
    {
        imagePath = [UIImage imageNamed:@"bg_BirthDay_ipad_theme.png"];
        
    }
    
    if([themeName isEqualToString:@"Win8 Blue"])
    {
        imagePath = [UIImage imageNamed:@"bg_Win8 Blue_ipad_theme.png"];
        
    }
    if([themeName isEqualToString:@"Win8 Pink"])
    {
        imagePath = [UIImage imageNamed:@"bg_Win8 Pink_ipad_theme.png"];
        
        
    }
    
    if([themeName isEqualToString:@"Indian Wedding"])
    {
        imagePath = [UIImage imageNamed:@"bg_Indian Wedding_ipad_theme.png"];
        
    }
    
    if([themeName isEqualToString:@"Generic Wedding"])
    {
        imagePath = [UIImage imageNamed:@"bg_Generic Wedding_ipad_theme.png"];
        
    }
    if([themeName isEqualToString:@"Desert"])
    {
        imagePath = [UIImage imageNamed:@"bg_Desert_ipad_theme.png"];
        
    }
    if([themeName isEqualToString:@"Black and White"])
    {
        imagePath = [UIImage imageNamed:@"bg_Black and White_ipad_theme.png"];
        
    }

}

//Setting All Album Button
-(void)updateUI
{
    if([imageAssets count] <= 0 && [videoAssets count]<= 0 )
    {
        [loadingAlertView dismissWithClickedButtonIndex:1 animated:YES];
        noImagesView = [[UIAlertView alloc] initWithTitle:@"No Images" message:@"No Images or videos found on your device" delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil ];
        [noImagesView show];
        noimagesandvideos = TRUE;
        
        imageURL = NULL;
        dateArray = NULL;
        imageAssets = NULL;
        //groups = NULL;
        videoAssets = NULL;
        
    }
    else
    {
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            firstButtonArray = [[NSMutableArray alloc]init];
            secondButtonArray = [[NSMutableArray alloc]init];
        }
        else
        {
            firstButtonArray = [[NSMutableArray alloc]init];
            secondButtonArray = [[NSMutableArray alloc]init];
        }
    }
    else
    {
        firstButtonArray = [[NSMutableArray alloc]init];
        secondButtonArray = [[NSMutableArray alloc]init];
        thirdButtonArray = [[NSMutableArray alloc]init];
    }
    finalArray = [[NSMutableArray alloc]init];
    databaseArray = [[NSMutableArray alloc]init];
    [self checkingDatabase];
    NSArray *homeDomains = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [homeDomains objectAtIndex:0];
    NSArray *contents = [[NSArray alloc]init];
    NSArray *YBContents = [[NSArray alloc]init];
    NSArray *userContents = [[NSArray alloc]init];
    NSFileManager *fileManager = [NSFileManager defaultManager];
    __block NSMutableArray *xmlPaths;
    xmlPaths = [[NSMutableArray alloc] init];
    if ([fileManager fileExistsAtPath:documentsDirectory])
    {
        BOOL isDir = NO;
        [fileManager fileExistsAtPath:documentsDirectory isDirectory:(&isDir)];
        if (isDir == YES)
        {
            contents = [fileManager contentsOfDirectoryAtPath:documentsDirectory error:nil];
            contents = [contents sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)];
            YBContents = [fileManager contentsOfDirectoryAtPath:checkYB error:nil];
            YBContents = [YBContents sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)];
            defaultUserContents = [documentsDirectory stringByAppendingString:@"/User"];
            userContents = [fileManager contentsOfDirectoryAtPath:defaultUserContents error:nil];
            userContents = [userContents sortedArrayUsingSelector:@selector(localizedCaseInsensitiveCompare:)];
            int count = [contents count];
            int count1 = [YBContents count];
            int count2 = [userContents count];
            int show = 0;
            int show1 = 0;
            int value;
            NSString *loadImage;
            documentsDirectory = [documentsDirectory stringByAppendingString:@"/"];
            
            //------------------------------For iPhone-----------------------------------//
            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
            {
                //for iPhone5
                if([[UIScreen mainScreen]bounds].size.height == 568)
                {
                    m = 10, n = 7;
                    p = 10, q = 7;
                    for (int i=0;i<count;i++)
                    {
                        NSString * checking = [contents objectAtIndex:i];
                        if( [checking isEqualToString:@".DS_Store"] )
                            continue;
                        if( [checking isEqualToString:@"album.db"] )
                            continue;
                        NSString *details = [contents objectAtIndex:i];
                        NSString *deletePath ;
                        if([details isEqualToString:@"User"])
                        {
                            
                            if(show1<count2)
                            {
                                for(int j=l; j<count2;j++)
                                {
                                    
                                    finalPath = [defaultUserContents stringByAppendingString:@"/"];
                                    finalPath = [finalPath stringByAppendingString:userContents[j]];
                                    [finalArray addObject:userContents[j]];
                                    l++;
                                    i = i-1;
                                    show1 = show1 +1;
                                    NSError *error;
                                    if ([[fileManager contentsOfDirectoryAtPath:finalPath error:&error] count]==0)
                                    {
                                        // check if number of files == 0 ==> empty directory
                                        if (!error)
                                        {
                                            // check if error set (fullPath is not a directory and we should leave it alone)
                                            [fileManager removeItemAtPath:finalPath error:nil];
                                            continue;
                                        }
                                        
                                    }
                                    deletePath = [NSString stringWithString:finalPath];
                                    finalPath = [finalPath stringByAppendingString:@"/Pronto.xml"];
                                    xmlParser = [[XMLParser alloc] loadXML:finalPath];
                                    themeName = [NSString stringWithString:((Album *) xmlParser->albumname[0])->themeName];
                                    [xmlPaths addObject:finalPath];
                                    @try
                                    {
                                        loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[0];
                                    }
                                    @catch (NSException *exception)
                                    {
                                        [fileManager removeItemAtPath:deletePath error:nil];
                                        deletePath = NULL;
                                        continue;
                                    }
                                    @finally
                                    {
                                        status.text = @"sucess";
                                    }
                                    value = ((Album*) [xmlParser->albumname objectAtIndex:0])->totalPages;
                                    loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                                    break;
                                }
                                
                            }
                            else
                            {
                                i = i+1;
                            }
                            
                        }
                        details =[contents objectAtIndex:i];
                        if([details isEqualToString:@"AutoGenerated"])
                        {
                            if(show < count1)
                            {
                                for(int j=k; j<count1;j++)
                                {
                                    finalPath = [checkYB stringByAppendingString:@"/"];
                                    finalPath = [finalPath stringByAppendingString:YBContents[j]];
                                    [finalArray addObject:YBContents[j]];
                                    k++;
                                    i = i-1;
                                    show= show + 1;
                                    NSError *error;
                                    if ([[fileManager contentsOfDirectoryAtPath:finalPath error:&error] count]==0)
                                    {
                                        // check if number of files == 0 ==> empty directory
                                        if (!error)
                                        {
                                            // check if error set (fullPath is not a directory and we should leave it alone)
                                            [fileManager removeItemAtPath:finalPath error:nil];
                                            continue;
                                        }
                                        
                                    }
                                    deletePath = [NSString stringWithString:finalPath];
                                    finalPath = [finalPath stringByAppendingString:@"/Pronto.xml"];
                                    xmlParser = [[XMLParser alloc] loadXML:finalPath];
                                    [xmlPaths addObject:finalPath];
                                    @try
                                    {
                                        loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[0];
                                    }
                                    @catch (NSException *exception)
                                    {
                                        [fileManager removeItemAtPath:deletePath error:nil];
                                        deletePath = NULL;
                                        continue;
                                    }
                                    @finally
                                    {
                                        status.text = @"sucess";
                                    }
                                    value = ((Album*) [xmlParser->albumname objectAtIndex:0])->totalPages;
                                    loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                                    break;
                                }
                                
                            }
                            else
                            {
                                i = i+1;
                            }
                        }
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                            }
                            if (iref)
                            {
                                //---------------------For Checking More Than One Album-------------------
                                if(counter<[finalArray count])
                                {
                                    if(counter%2 ==0)
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        albumButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        albumButton.frame = CGRectMake(m, n, 120,120 );
                                        albumImage = [ViewerViewController imageWithImage:albumImage scaledToWidth:albumButton.frame.size.width];
                                        [albumButton setTag:counter];
                                        [albumButton setTitle:[xmlPaths objectAtIndex:counter] forState:UIControlStateNormal];
                                        [albumButton setTintColor:[UIColor blackColor]];
                                        [firstButtonArray addObject:albumButton];
                                        [albumButton addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [albumButton setImage:albumImage forState:UIControlStateNormal];
                                        albumButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                        
                                        //long Press method
                                        longPressGesture = [[UILongPressGestureRecognizer alloc]
                                                            initWithTarget:self
                                                            action:@selector(longPress:)];
                                        longPressGesture.minimumPressDuration = 0.5;
                                        longPressGesture.numberOfTouchesRequired = 1;
                                        longPressGesture.delegate = self;
                                        Press = TRUE;
                                        [albumButton addGestureRecognizer:longPressGesture];
                                        slideMenuView = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(40.0f, 32.0f,[self.view bounds].size.width-40.0f, 140.0f) backgroundColor:[UIColor blackColor]  buttons:firstButtonArray];
                                        [self.view addSubview:slideMenuView];
                                        //----------------putting image for Videos Album---------------//
                                        if([loadImage hasSuffix:@"MOV"])
                                        {
                                            CGRect passcodeImageFrame = CGRectMake( 40, 40, 30,30 );
                                            UIImage *lockImage =[UIImage imageNamed:@"videoIcon.png"];
                                            UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                            [passcodeImage setImage:lockImage];
                                            [albumButton addSubview: passcodeImage];
                                        }
                                        //-------------------------------------------------------------------
                                        CGRect albumNameLabelFrame = CGRectMake( 0, 0, 120.0,15.0 );
                                        UILabel* label = [[UILabel alloc] initWithFrame: albumNameLabelFrame];
                                        [label setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        label.textAlignment = NSTextAlignmentCenter;
                                        [label setText:[finalArray objectAtIndex:counter]];
                                        [label setTextColor: [UIColor blackColor]];
                                        [albumButton addSubview: label];
                                        
                                        //for Number of Pages in Album
                                        CGRect albumPageLabelFrame = CGRectMake(0, 108.0, 120.0,12.0);
                                        UILabel *pageLabel = [[UILabel alloc] initWithFrame: albumPageLabelFrame];
                                        UIImageView *labelImage =[[UIImageView alloc]initWithFrame:CGRectMake(90, 0, 12, 12)];
                                        [labelImage setImage:[UIImage imageNamed:@"pageImage.png"]];
                                        [pageLabel setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        [pageLabel setText:[NSString stringWithFormat:@"%d",value]];
                                        pageLabel.textAlignment = NSTextAlignmentRight;
                                        [pageLabel setTextColor: [UIColor blackColor]];
                                        [pageLabel addSubview:labelImage];
                                        [albumButton addSubview: pageLabel];
                                        
                                        for(int j = 0;j<[databaseArray count];j++)
                                        {
                                            if([[finalArray objectAtIndex:counter] isEqualToString:databaseArray[j]])
                                            {
                                                CGRect passcodeImageFrame = CGRectMake( 0, 108, 10.0,10.0 );
                                                UIImage *lockImage =[UIImage imageNamed:@"lock.png"];
                                                UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                                [passcodeImage setImage:lockImage];
                                                [albumButton addSubview: passcodeImage];
                                            }
                                        }
                                        counter = counter + 1;
                                    }
                                    
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        albumButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        albumButton.frame = CGRectMake(p , q , 120.0,120.0 );
                                        albumImage = [ViewerViewController imageWithImage:albumImage scaledToWidth:albumButton.frame.size.width];
                                        [albumButton setTag:counter];
                                        [albumButton setTitle:[xmlPaths objectAtIndex:counter] forState:UIControlStateNormal];
                                        [secondButtonArray addObject:albumButton];
                                        [albumButton addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [albumButton setImage:albumImage forState:UIControlStateNormal];
                                        albumButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                        
                                        //lomg Press method
                                        longPressGesture = [[UILongPressGestureRecognizer alloc]
                                                            initWithTarget:self
                                                            action:@selector(longPress:)];
                                        longPressGesture.minimumPressDuration = 0.5;
                                        longPressGesture.numberOfTouchesRequired = 1;
                                        longPressGesture.delegate = self;
                                        Press = TRUE;
                                        [albumButton addGestureRecognizer:longPressGesture];
                                        slideMenuView1 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(40.0f, 175.0f, [self.view bounds].size.width-40.0f,  145.0f) backgroundColor:[UIColor blackColor]  buttons:secondButtonArray];
                                        [self.view addSubview:slideMenuView1];
                                        //----------------putting image for Video Album---------------//
                                        if([loadImage hasSuffix:@"MOV"])
                                        {
                                            CGRect passcodeImageFrame = CGRectMake( 40, 40, 30,30 );
                                            UIImage *lockImage =[UIImage imageNamed:@"videoIcon.png"];
                                            UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                            [passcodeImage setImage:lockImage];
                                            [albumButton addSubview: passcodeImage];
                                        }
                                        //-------------------------------------------------------------------
                                        CGRect albumNameLabelFrame = CGRectMake( 0, 0, 120.0,15.0 );
                                        UILabel* label = [[UILabel alloc] initWithFrame: albumNameLabelFrame];
                                        [label setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        label.textAlignment = NSTextAlignmentCenter;
                                        [label setText:[finalArray objectAtIndex:counter]];
                                        [label setTextColor: [UIColor blackColor]];
                                        [albumButton addSubview: label];
                                        
                                        //for Number of Pages in Album
                                        CGRect albumPageLabelFrame = CGRectMake(0, 108.0, 120.0,12.0);
                                        UILabel *pageLabel = [[UILabel alloc] initWithFrame: albumPageLabelFrame];
                                        UIImageView *labelImage =[[UIImageView alloc]initWithFrame:CGRectMake(90, 0, 12, 12)];
                                        [labelImage setImage:[UIImage imageNamed:@"pageImage.png"]];
                                        [pageLabel setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        pageLabel.textAlignment = NSTextAlignmentRight;
                                        [pageLabel setText:[NSString stringWithFormat:@"%d",value]];
                                        [pageLabel setTextColor: [UIColor blackColor]];
                                        [pageLabel addSubview:labelImage];
                                        [albumButton addSubview: pageLabel];
                                        
                                        for(int j = 0;j<[databaseArray count];j++)
                                        {
                                            if([[finalArray objectAtIndex:counter] isEqualToString:databaseArray[j]])
                                            {
                                                CGRect passcodeImageFrame = CGRectMake( 0, 108, 10.0,10.0 );
                                                UIImage *lockImage =[UIImage imageNamed:@"lock.png"];
                                                UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                                [passcodeImage setImage:lockImage];
                                                [albumButton addSubview: passcodeImage];
                                            }
                                        }
                                        
                                        counter = counter + 1;
                                    }
                                }
                            }
                            
                            if(([finalArray count] == counter )|| ([finalArray count] == 0))
                                        Finishes = TRUE;
                                    if(Finishes)
                                    {
                                        if([databaseArray count]==0)
                                            databaseArray = NULL;
                                        //For Line
                                        lineView = [[UIView alloc]initWithFrame:CGRectMake(40, 171, [self.view bounds].size.width-40.0f, 1)];
                                        [lineView setBackgroundColor:[UIColor whiteColor]];
                                        [self.view addSubview:lineView];
                                        
                                        //For Top ScrollView Left Side
                                        if(slideMenuView)
                                        {
                                            UIImage *indicatorImage = [UIImage imageNamed:@"left_end.png"];
                                            indicationImageView = [[UIImageView alloc]init];
                                            indicationImageView.frame = CGRectMake(0, n, 10, 122);
                                            [indicationImageView setImage:indicatorImage];
                                            [slideMenuView->menuScrollView addSubview:indicationImageView];
                                            
                                            //For Top ScrollView Right SIde
                                            UIImage *rightIndicatorImage = [UIImage imageNamed:@"right_end.png"];
                                            rightIndicatorImageView = [[UIImageView alloc]init];
                                            rightIndicatorImageView.frame = CGRectMake(([firstButtonArray count]*120)+((([firstButtonArray count])-1)*20)+20, n,10 , 122);
                                            [rightIndicatorImageView setImage:rightIndicatorImage];
                                            [slideMenuView->menuScrollView addSubview:rightIndicatorImageView];
                                        }
                                        
                                        //For DownScrollView
                                        if(slideMenuView1)
                                        {
                                            UIImage *indicatorImage1 = [UIImage imageNamed:@"left_end.png"];
                                            indicationImageView1 = [[UIImageView alloc]init];
                                            indicationImageView1.frame = CGRectMake(0, q, 10, 122);
                                            [indicationImageView1 setImage:indicatorImage1];
                                            [slideMenuView1->menuScrollView addSubview:indicationImageView1];
                                            
                                            //For Top ScrollView Right SIde
                                            UIImage *secondRowrightIndicatorImage = [UIImage imageNamed:@"right_end.png"];
                                            secondRowrightIndicatorImageView = [[UIImageView alloc]init];
                                            secondRowrightIndicatorImageView.frame = CGRectMake(([secondButtonArray count]*120)+((([secondButtonArray count])-1)*20)+20, q,10 , 122);
                                            [secondRowrightIndicatorImageView setImage:secondRowrightIndicatorImage];
                                            [slideMenuView1->menuScrollView addSubview:secondRowrightIndicatorImageView];
                                        }
                                        //DisMiss the AlertView
                                        [loadingAlertView dismissWithClickedButtonIndex:1 animated:YES];
                                        loadingAlertView = nil;
                                        spinners = nil;
                                        indicationImageView = nil;
                                        indicationImageView1 = nil;
                                        rightIndicatorImageView = nil;
                                        secondRowrightIndicatorImageView = nil;
                                        Finishes = FALSE;
                                        counter = 0;
                                        firstButtonArray = NULL;
                                        secondButtonArray = NULL;
                                        k = 0, l= 0;
                                        if(showStart == 1)
                                        {
                                            [self callFaqMethod];
                                            showStart = showStart + 1;
                                        }
                                        if(!imageAssetsAvailable && !videoAssetsAvailable)
                                        {
                                            noImagesView = [[UIAlertView alloc] initWithTitle:@"No Images" message:@"No Images or videos found on your device" delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil ];
                                            [noImagesView show];
                                            noimagesandvideos = TRUE;
                                            
                                            imageURL = NULL;
                                            dateArray = NULL;
                                            imageAssets = NULL;
                                            groups = NULL;
                                            
                                        }
                                }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        
                        if(loadImage && [loadImage length])
                            
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                    }
                }
                //-------------------------for upto iPhone4 & iPod4-------------------------------------//
                else
                {
                    m = 10, n = 7;
                    p = 10, q = 7;
                    for (int i=0;i<count;i++)
                    {
                        NSString * checking = [contents objectAtIndex:i];
                        if( [checking isEqualToString:@".DS_Store"] )
                            continue;
                        if( [checking isEqualToString:@"album.db"] )
                            continue;
                        NSString *details = [contents objectAtIndex:i];
                        NSString *deletePath ;
                        if([details isEqualToString:@"User"])
                        {
                            if(show1<count2)
                            {
                                for(int j=l; j<count2;j++)
                                {
                                    
                                    finalPath = [defaultUserContents stringByAppendingString:@"/"];
                                    finalPath = [finalPath stringByAppendingString:userContents[j]];
                                    [finalArray addObject:userContents[j]];
                                    l++;
                                    i = i-1;
                                    show1 = show1 +1;
                                    NSError *error;
                                    if ([[fileManager contentsOfDirectoryAtPath:finalPath error:&error] count]==0)
                                    {
                                        // check if number of files == 0 ==> empty directory
                                        if (!error)
                                        {
                                            // check if error set (fullPath is not a directory and we should leave it alone)
                                            [fileManager removeItemAtPath:finalPath error:nil];
                                            continue;
                                        }
                                        
                                    }
                                    deletePath = [NSString stringWithString:finalPath];
                                    finalPath = [finalPath stringByAppendingString:@"/Pronto.xml"];
                                    xmlParser = [[XMLParser alloc] loadXML:finalPath];
                                    themeName = [NSString stringWithString:((Album *) xmlParser->albumname[0])->themeName];
                                    [xmlPaths addObject:finalPath];
                                    @try
                                    {
                                        loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[0];
                                    }
                                    @catch (NSException *exception)
                                    {
                                        [fileManager removeItemAtPath:deletePath error:nil];
                                        deletePath = NULL;
                                        continue;
                                    }
                                    @finally
                                    {
                                        status.text = @"sucess";
                                    }
                                    value = ((Album*) [xmlParser->albumname objectAtIndex:0])->totalPages;
                                    loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                                    break;
                                }
                                
                            }
                            else
                            {
                                i = i+1;
                            }
                            
                        }
                        details =[contents objectAtIndex:i];
                        if([details isEqualToString:@"YEARBOOKS"])
                        {
                            if(show < count1)
                            {
                                for(int j=k; j<count1;j++)
                                {
                                    finalPath = [checkYB stringByAppendingString:@"/"];
                                    finalPath = [finalPath stringByAppendingString:YBContents[j]];
                                    [finalArray addObject:YBContents[j]];
                                    k++;
                                    i = i-1;
                                    show= show + 1;
                                    NSError *error;
                                    if ([[fileManager contentsOfDirectoryAtPath:finalPath error:&error] count]==0)
                                    {
                                        // check if number of files == 0 ==> empty directory
                                        if (!error)
                                        {
                                            // check if error set (fullPath is not a directory and we should leave it alone)
                                            [fileManager removeItemAtPath:finalPath error:nil];
                                            continue;
                                        }
                                        
                                    }
                                    deletePath = [NSString stringWithString:finalPath];
                                    finalPath = [finalPath stringByAppendingString:@"/Pronto.xml"];
                                    xmlParser = [[XMLParser alloc] loadXML:finalPath];
                                    [xmlPaths addObject:finalPath];
                                    @try
                                    {
                                        loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[0];
                                    }
                                    @catch (NSException *exception)
                                    {
                                        [fileManager removeItemAtPath:deletePath error:nil];
                                        deletePath = NULL;
                                        continue;
                                    }
                                    @finally
                                    {
                                        status.text = @"sucess";
                                    }
                                    value = ((Album*) [xmlParser->albumname objectAtIndex:0])->totalPages;
                                    loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                                    break;
                                }
                                
                            }
                            else
                            {
                                i = i+1;
                            }
                        }
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                            }

                            if (iref)
                            {
                                //---------------------For Checking More Than One Album-------------------
                                if(counter<[finalArray count])
                                {
                                    if(counter%2 ==0)
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        albumButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        albumButton.frame = CGRectMake(m, n, 120,120 );
                                        albumImage = [ViewerViewController imageWithImage:albumImage scaledToWidth:albumButton.frame.size.width];
                                        [albumButton setTag:counter];
                                        [albumButton setTitle:[xmlPaths objectAtIndex:counter] forState:UIControlStateNormal];
                                        [albumButton setTintColor:[UIColor blackColor]];
                                        [firstButtonArray addObject:albumButton];
                                        [albumButton addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [albumButton setImage:albumImage forState:UIControlStateNormal];
                                        albumButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                        
                                        //long Press method
                                        longPressGesture = [[UILongPressGestureRecognizer alloc]
                                                            initWithTarget:self
                                                            action:@selector(longPress:)];
                                        longPressGesture.minimumPressDuration = 0.5;
                                        longPressGesture.numberOfTouchesRequired = 1;
                                        longPressGesture.delegate = self;
                                        Press = TRUE;
                                        [albumButton addGestureRecognizer:longPressGesture];
                                        slideMenuView = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(40.0f, 32.0f,[self.view bounds].size.width-40.0f, 140.0f) backgroundColor:[UIColor blackColor]  buttons:firstButtonArray];
                                        [self.view addSubview:slideMenuView];
                                        //----------------putting image for Videos Album---------------//
                                        if([loadImage hasSuffix:@"MOV"])
                                        {
                                            CGRect passcodeImageFrame = CGRectMake( 40, 40, 30,30 );
                                            UIImage *lockImage =[UIImage imageNamed:@"videoIcon.png"];
                                            UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                            [passcodeImage setImage:lockImage];
                                            [albumButton addSubview: passcodeImage];
                                        }
                                        //-------------------------------------------------------------------
                                        CGRect albumNameLabelFrame = CGRectMake( 0, 0, 120.0,15.0 );
                                        UILabel* label = [[UILabel alloc] initWithFrame: albumNameLabelFrame];
                                        [label setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        label.textAlignment = NSTextAlignmentCenter;
                                        [label setText:[finalArray objectAtIndex:counter]];
                                        [label setTextColor: [UIColor blackColor]];
                                        [albumButton addSubview: label];
                                        
                                        //for Number of Pages in Album
                                        CGRect albumPageLabelFrame = CGRectMake(0, 108.0, 120.0,12.0);
                                        UILabel *pageLabel = [[UILabel alloc] initWithFrame: albumPageLabelFrame];
                                        UIImageView *labelImage =[[UIImageView alloc]initWithFrame:CGRectMake(90, 0, 12, 12)];
                                        [labelImage setImage:[UIImage imageNamed:@"pageImage.png"]];
                                        [pageLabel setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        [pageLabel setText:[NSString stringWithFormat:@"%d",value]];
                                        pageLabel.textAlignment = NSTextAlignmentRight;
                                        [pageLabel setTextColor: [UIColor blackColor]];
                                        [pageLabel addSubview:labelImage];
                                        [albumButton addSubview: pageLabel];
                                        
                                        for(int j = 0;j<[databaseArray count];j++)
                                        {
                                            if([[finalArray objectAtIndex:counter] isEqualToString:databaseArray[j]])
                                            {
                                                CGRect passcodeImageFrame = CGRectMake( 0, 108, 10.0,10.0 );
                                                UIImage *lockImage =[UIImage imageNamed:@"lock.png"];
                                                UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                                [passcodeImage setImage:lockImage];
                                                [albumButton addSubview: passcodeImage];
                                            }
                                        }
                                        counter = counter + 1;
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        albumButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        albumButton.frame = CGRectMake(p , q , 120.0,120.0 );
                                        albumImage = [ViewerViewController imageWithImage:albumImage scaledToWidth:albumButton.frame.size.width];
                                        [albumButton setTag:counter];
                                        [albumButton setTitle:[xmlPaths objectAtIndex:counter] forState:UIControlStateNormal];
                                        [secondButtonArray addObject:albumButton];
                                        [albumButton addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [albumButton setImage:albumImage forState:UIControlStateNormal];
                                        albumButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                        
                                        //lomg Press method
                                        longPressGesture = [[UILongPressGestureRecognizer alloc]
                                                            initWithTarget:self
                                                            action:@selector(longPress:)];
                                        longPressGesture.minimumPressDuration = 0.5;
                                        longPressGesture.numberOfTouchesRequired = 1;
                                        longPressGesture.delegate = self;
                                        Press = TRUE;
                                        [albumButton addGestureRecognizer:longPressGesture];
                                        slideMenuView1 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(40.0f, 175.0f, [self.view bounds].size.width-40.0f,  145.0f) backgroundColor:[UIColor blackColor]  buttons:secondButtonArray];
                                        [self.view addSubview:slideMenuView1];
                                        //----------------putting image for Video Album---------------//
                                        if([loadImage hasSuffix:@"MOV"])
                                        {
                                            CGRect passcodeImageFrame = CGRectMake( 40, 40, 30,30 );
                                            UIImage *lockImage =[UIImage imageNamed:@"videoIcon.png"];
                                            UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                            [passcodeImage setImage:lockImage];
                                            [albumButton addSubview: passcodeImage];
                                        }
                                        //-------------------------------------------------------------------
                                        CGRect albumNameLabelFrame = CGRectMake( 0, 0, 120.0,15.0 );
                                        UILabel* label = [[UILabel alloc] initWithFrame: albumNameLabelFrame];
                                        [label setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        label.textAlignment = NSTextAlignmentCenter;
                                        [label setText:[finalArray objectAtIndex:counter]];
                                        [label setTextColor: [UIColor blackColor]];
                                        [albumButton addSubview: label];
                                        
                                        //for Number of Pages in Album
                                        CGRect albumPageLabelFrame = CGRectMake(0, 108.0, 120.0,12.0);
                                        UILabel *pageLabel = [[UILabel alloc] initWithFrame: albumPageLabelFrame];
                                          UIImageView *labelImage =[[UIImageView alloc]initWithFrame:CGRectMake(90, 0, 12, 12)];
                                        [labelImage setImage:[UIImage imageNamed:@"pageImage.png"]];
                                        [pageLabel setFont:[UIFont fontWithName:@"Helvetica-Light" size:11]];
                                        pageLabel.textAlignment = NSTextAlignmentRight;
                                        [pageLabel setText:[NSString stringWithFormat:@"%d",value]];
                                        [pageLabel setTextColor: [UIColor blackColor]];
                                        [pageLabel addSubview:labelImage];
                                        [albumButton addSubview: pageLabel];
                                        
                                        for(int j = 0;j<[databaseArray count];j++)
                                        {
                                            if([[finalArray objectAtIndex:counter] isEqualToString:databaseArray[j]])
                                            {
                                                CGRect passcodeImageFrame = CGRectMake( 0, 108, 10.0,10.0 );
                                                UIImage *lockImage =[UIImage imageNamed:@"lock.png"];
                                                UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                                [passcodeImage setImage:lockImage];
                                                [albumButton addSubview: passcodeImage];
                                            }
                                        }
                                        
                                        counter = counter + 1;
                                    }
                                }
                            }
                            
                            if(([finalArray count] == counter )|| ([finalArray count] == 0))
                                        Finishes = TRUE;
                                    if(Finishes)
                                    {
                                        if([databaseArray count]==0)
                                            databaseArray = NULL;
                                        //For Line
                                        lineView = [[UIView alloc]initWithFrame:CGRectMake(40, 171, [self.view bounds].size.width-40.0f, 1)];
                                        [lineView setBackgroundColor:[UIColor whiteColor]];
                                        [self.view addSubview:lineView];
                                        
                                        if(slideMenuView)
                                        {
                                            //For Top ScrollView Left Side
                                            UIImage *indicatorImage = [UIImage imageNamed:@"left_end.png"];
                                            indicationImageView = [[UIImageView alloc]init];
                                            indicationImageView.frame = CGRectMake(0, n, 10, 122);
                                            [indicationImageView setImage:indicatorImage];
                                            [slideMenuView->menuScrollView addSubview:indicationImageView];
                                            
                                            //For Top ScrollView Right SIde
                                            UIImage *rightIndicatorImage = [UIImage imageNamed:@"right_end.png"];
                                            rightIndicatorImageView = [[UIImageView alloc]init];
                                            rightIndicatorImageView.frame = CGRectMake(([firstButtonArray count]*120)+((([firstButtonArray count])-1)*20)+20, n,10 , 122);
                                            [rightIndicatorImageView setImage:rightIndicatorImage];
                                            [slideMenuView->menuScrollView addSubview:rightIndicatorImageView];
                                        }
                                        
                                        if(slideMenuView1)
                                        {
                                            //For DownScrollView
                                            UIImage *indicatorImage1 = [UIImage imageNamed:@"left_end.png"];
                                            indicationImageView1 = [[UIImageView alloc]init];
                                            indicationImageView1.frame = CGRectMake(0, q, 10, 122);
                                            [indicationImageView1 setImage:indicatorImage1];
                                            [slideMenuView1->menuScrollView addSubview:indicationImageView1];
                                            
                                            //For Top ScrollView Right SIde
                                            UIImage *secondRowrightIndicatorImage = [UIImage imageNamed:@"right_end.png"];
                                            secondRowrightIndicatorImageView = [[UIImageView alloc]init];
                                            secondRowrightIndicatorImageView.frame = CGRectMake(([secondButtonArray count]*120)+((([secondButtonArray count])-1)*20)+20, q,10 , 122);
                                            [secondRowrightIndicatorImageView setImage:secondRowrightIndicatorImage];
                                            [slideMenuView1->menuScrollView addSubview:secondRowrightIndicatorImageView];
                                        }
                                        //DisMiss the AlertView
                                        [loadingAlertView dismissWithClickedButtonIndex:1 animated:YES];
                                        loadingAlertView = nil;
                                        spinners = nil;
                                        indicationImageView = nil;
                                        indicationImageView1 = nil;
                                        rightIndicatorImageView = nil;
                                        secondRowrightIndicatorImageView = nil;
                                        Finishes = FALSE;
                                        firstButtonArray = NULL;
                                        secondButtonArray = NULL;
                                        k = 0, l= 0;
                                        if(showStart == 1)
                                        {
                                            [self callFaqMethod];
                                            showStart = showStart + 1;
                                        }
                                        if(!imageAssetsAvailable && !videoAssetsAvailable)
                                        {
                                            noImagesView = [[UIAlertView alloc] initWithTitle:@"No Images" message:@"No Images or videos found on your device" delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil ];
                                            [noImagesView show];
                                            noimagesandvideos = TRUE;
                                            imageURL = NULL;
                                            dateArray = NULL;
                                            imageAssets = NULL;
                                            //groups = NULL;
                                        }
                                }
                            
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        
                        if(loadImage && [loadImage length])
                            
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                    }
                }
            }
            //--------------------------------------for IPad----------------------------------//
            else
            {
                
                 m = 10, n = 15;
                 p = 10, q = 15;
                s = 10, t = 15;
                for (int i=0;i<count;i++)
                {
                    NSString * checking = [contents objectAtIndex:i];
                    if( [checking isEqualToString:@".DS_Store"] )
                        continue;
                    if( [checking isEqualToString:@"album.db"] )
                        continue;
                    NSString *details = [contents objectAtIndex:i];
                    NSString *deletePath ;
                    if([details isEqualToString:@"User"])
                    {
                        if(show1<count2)
                        {
                            for(int j=l; j<count2;j++)
                            {
                                
                                finalPath = [defaultUserContents stringByAppendingString:@"/"];
                                finalPath = [finalPath stringByAppendingString:userContents[j]];
                                [finalArray addObject:userContents[j]];
                                l++;
                                i = i-1;
                                show1 = show1 +1;
                                NSError *error;
                                if ([[fileManager contentsOfDirectoryAtPath:finalPath error:&error] count]==0)
                                {
                                    // check if number of files == 0 ==> empty directory
                                    if (!error)
                                    {
                                        // check if error set (fullPath is not a directory and we should leave it alone)
                                        [fileManager removeItemAtPath:finalPath error:nil];
                                        continue;
                                    }
                                    
                                }
                                deletePath = [NSString stringWithString:finalPath];
                                finalPath = [finalPath stringByAppendingString:@"/Pronto.xml"];
                                xmlParser = [[XMLParser alloc] loadXML:finalPath];
                                themeName = [NSString stringWithString:((Album *) xmlParser->albumname[0])->themeName];
                                [xmlPaths addObject:finalPath];
                                @try
                                {
                                    loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[0];
                                }
                                @catch (NSException *exception)
                                {
                                    [fileManager removeItemAtPath:deletePath error:nil];
                                    deletePath = NULL;
                                    continue;
                                }
                                @finally
                                {
                                    status.text = @"sucess";
                                }
                                value = ((Album*) [xmlParser->albumname objectAtIndex:0])->totalPages;
                                loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                                break;
                            }
                            
                        }
                        else
                        {
                            i = i+1;
                        }
                        
                    }
                    details =[contents objectAtIndex:i];
                    if([details isEqualToString:@"YEARBOOKS"])
                    {
                        if(show < count1)
                        {
                            for(int j=k; j<count1;j++)
                            {
                                finalPath = [checkYB stringByAppendingString:@"/"];
                                finalPath = [finalPath stringByAppendingString:YBContents[j]];
                                [finalArray addObject:YBContents[j]];
                                k++;
                                i = i-1;
                                show= show + 1;
                                NSError *error;
                                if ([[fileManager contentsOfDirectoryAtPath:finalPath error:&error] count]==0)
                                {
                                    // check if number of files == 0 ==> empty directory
                                    if (!error)
                                    {
                                        // check if error set (fullPath is not a directory and we should leave it alone)
                                        [fileManager removeItemAtPath:finalPath error:nil];
                                        continue;
                                    }
                                    
                                }
                                deletePath = [NSString stringWithString:finalPath];
                                finalPath = [finalPath stringByAppendingString:@"/Pronto.xml"];
                                xmlParser = [[XMLParser alloc] loadXML:finalPath];
                                [xmlPaths addObject:finalPath];
                                @try
                                {
                                    loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[0];
                                }
                                @catch (NSException *exception)
                                {
                                    [fileManager removeItemAtPath:deletePath error:nil];
                                    deletePath = NULL;
                                    continue;
                                }
                                @finally
                                {
                                    status.text = @"sucess";
                                }
                                value = ((Album*) [xmlParser->albumname objectAtIndex:0])->totalPages;
                                loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                                break;
                            }
                            
                        }
                        else
                        {
                            i = i+1;
                        }
                    }
                    ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                    {
                        if(myasset == NULL)
                        {
                            [self defaultImage];
                        }
                        CGImageRef iref;
                        if(myasset == NULL)
                            iref = [imagePath CGImage];
                        else
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            iref = [rep fullScreenImage];
                        }
                        if (iref)
                        {
                            if(counter<[finalArray count])
                            {
                                if(counter%3 == 0)
                                 {
                                     albumImage = [UIImage imageWithCGImage:iref];
                                     albumButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];                                     
                                     albumButton.frame = CGRectMake(m, n, 200,200 );
                                
                                     albumImage = [ViewerViewController imageWithImage:albumImage scaledToWidth:albumButton.frame.size.width];
                                     [albumButton setTag:counter];
                                     [albumButton setTitle:[xmlPaths objectAtIndex:counter] forState:UIControlStateNormal];
                                     [albumButton setBackgroundColor:[UIColor clearColor]];
                                     [firstButtonArray addObject:albumButton];
                                     [albumButton addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
                                     [albumButton setImage:albumImage forState:UIControlStateNormal];
                                     albumButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                     
                                     //lomg Press method
                                     longPressGesture = [[UILongPressGestureRecognizer alloc]
                                                         initWithTarget:self
                                                         action:@selector(longPress:)];
                                     longPressGesture.minimumPressDuration = 0.5;
                                     longPressGesture.numberOfTouchesRequired = 1;
                                     longPressGesture.delegate = self;
                                     Press = TRUE;
                                     [albumButton addGestureRecognizer:longPressGesture];
                                     slideMenuView = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(70.0f, 44.0f, [self.view bounds].size.width-70.0f,  240.0f) backgroundColor:[UIColor blackColor]  buttons:firstButtonArray];
                                     [self.view addSubview:slideMenuView];
                                     
                                     //----------------putting image for Video Album---------------//
                                     if([loadImage hasSuffix:@"MOV"])
                                     {
                                         CGRect passcodeImageFrame = CGRectMake( 70, 70, 60,60 );
                                         UIImage *lockImage =[UIImage imageNamed:@"videoIcon.png"];
                                         UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                         [passcodeImage setImage:lockImage];
                                         [albumButton addSubview: passcodeImage];
                                     }
                                     //-----------------------------------------------------------------------
                                     CGRect albumNameLabelFrame = CGRectMake( 10, 0, 180.0,20.0 );
                                     
                                     UILabel* label = [[UILabel alloc] initWithFrame: albumNameLabelFrame];
                                     [label setFont:[UIFont fontWithName:@"Helvetica-Light" size:18]];
                                     label.textAlignment = NSTextAlignmentCenter;
                                     [label setText:[finalArray objectAtIndex:counter]];
                                     [label setTextColor: [UIColor blackColor]];
                                     [albumButton addSubview: label];
                                     
                                     //for Number of Pages in Album
                                     CGRect albumPageLabelFrame = CGRectMake(10, 180.0, 180.0,20.0);
                                     UILabel *pageLabel = [[UILabel alloc] initWithFrame: albumPageLabelFrame];
                                     [pageLabel setFont:[UIFont fontWithName:@"Helvetica-Light" size:18]];
                                     UIImageView *labelImage =[[UIImageView alloc]initWithFrame:CGRectMake(130, 0, 20, 20)];
                                     [labelImage setImage:[UIImage imageNamed:@"pageImage.png"]];
                                     [pageLabel setText:[NSString stringWithFormat:@"%d",value]];
                                     pageLabel.textAlignment = NSTextAlignmentRight;
                                     [pageLabel setTextColor: [UIColor blackColor]];
                                     [pageLabel addSubview:labelImage];
                                    [albumButton addSubview: pageLabel];

                                         for(int j = 0;j<[databaseArray count];j++)
                                         {
                                             if([[finalArray objectAtIndex:counter ] isEqualToString:databaseArray[j]])
                                             {
                                                 CGRect passcodeImageFrame = CGRectMake( 10, 180, 20.0,20.0 );
                                                 UIImage *lockImage =[UIImage imageNamed:@"lock.png"];
                                                 UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                                 [passcodeImage setImage:lockImage];
                                                 [albumButton addSubview: passcodeImage];
                                             }
                                             
                                         }
                                    counter = counter+1;
                                 }
                                else if (counter%3 == 1)
                                {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        albumButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        albumButton.frame = CGRectMake(p, q, 200,200 );
                                        albumImage = [ViewerViewController imageWithImage:albumImage scaledToWidth:albumButton.frame.size.width];
                                        [albumButton setTag:counter];
                                        [albumButton setTitle:[xmlPaths objectAtIndex:counter] forState:UIControlStateNormal];
                                        [secondButtonArray addObject:albumButton];
                                        [albumButton addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [albumButton setImage:albumImage forState:UIControlStateNormal];
                                        albumButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                        
                                        //lomg Press method
                                        longPressGesture = [[UILongPressGestureRecognizer alloc]
                                                            initWithTarget:self
                                                            action:@selector(longPress:)];
                                        longPressGesture.minimumPressDuration = 0.5;
                                        longPressGesture.numberOfTouchesRequired = 1;
                                        longPressGesture.delegate = self;
                                        Press = TRUE;
                                        [albumButton addGestureRecognizer:longPressGesture];
                                        slideMenuView1 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(70.0f, 285.0f, [self.view bounds].size.width-70.0f,  240.0f) backgroundColor:[UIColor blackColor]  buttons:secondButtonArray];
                                        [self.view addSubview:slideMenuView1];
                                        //----------------putting image for Video Album---------------//
                                        if([loadImage hasSuffix:@"MOV"])
                                        {
                                            CGRect passcodeImageFrame = CGRectMake(70, 70, 60,60 );
                                            UIImage *lockImage =[UIImage imageNamed:@"videoIcon.png"];
                                            UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                            [passcodeImage setImage:lockImage];
                                            [albumButton addSubview: passcodeImage];
                                        }
                                        //-----------------------------------------------------------------------
                                        CGRect albumNameLabelFrame = CGRectMake( 10, 0, 180.0,20.0 );
                                        UILabel* label = [[UILabel alloc] initWithFrame: albumNameLabelFrame];
                                        [label setFont:[UIFont fontWithName:@"Helvetica-Light" size:18]];
                                        label.textAlignment = NSTextAlignmentCenter;
                                        [label setText:[finalArray objectAtIndex:counter]];
                                        [label setTextColor: [UIColor blackColor]];
                                        [albumButton addSubview: label];
                                    
                                        //for Number of Pages in Album
                                        CGRect albumPageLabelFrame = CGRectMake(10, 180.0, 180.0,20.0);
                                        UILabel *pageLabel = [[UILabel alloc] initWithFrame: albumPageLabelFrame];
                                       [pageLabel setFont:[UIFont fontWithName:@"Helvetica-Light" size:18]];
                                        UIImageView *labelImage =[[UIImageView alloc]initWithFrame:CGRectMake(130, 0, 20, 20)];
                                        [labelImage setImage:[UIImage imageNamed:@"pageImage.png"]];
                                        [pageLabel setText:[NSString stringWithFormat:@"%d",value]];
                                        pageLabel.textAlignment = NSTextAlignmentRight;
                                        [pageLabel setTextColor: [UIColor blackColor]];
                                        [pageLabel addSubview:labelImage];
                                        [albumButton addSubview: pageLabel];
                                        
                                        for(int j = 0;j<[databaseArray count];j++)
                                        {
                                            if([[finalArray objectAtIndex:counter] isEqualToString:databaseArray[j]])
                                            {
                                                CGRect passcodeImageFrame = CGRectMake( 10, 180, 20.0,20.0 );
                                                UIImage *lockImage =[UIImage imageNamed:@"lock.png"];
                                                UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                                [passcodeImage setImage:lockImage];
                                                [albumButton addSubview: passcodeImage];
                                            }
                                            
                                        }
                                    counter = counter+1;
                                }
                                else
                                {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        albumButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        albumButton.frame = CGRectMake(s, t, 200,200 );
                                        albumImage = [ViewerViewController imageWithImage:albumImage scaledToWidth:albumButton.frame.size.width];
                                        [albumButton setTag:counter];
                                        [albumButton setTitle:[xmlPaths objectAtIndex:counter] forState:UIControlStateNormal];
                                        [thirdButtonArray addObject:albumButton];
                                        [albumButton addTarget:self action:@selector(btnClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [albumButton setImage:albumImage forState:UIControlStateNormal];
                                        albumButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                        
                                        //lomg Press method
                                        longPressGesture = [[UILongPressGestureRecognizer alloc]
                                                            initWithTarget:self
                                                            action:@selector(longPress:)];
                                        longPressGesture.minimumPressDuration = 0.5;
                                        longPressGesture.numberOfTouchesRequired = 1;
                                        longPressGesture.delegate = self;
                                        Press = TRUE;
                                        [albumButton addGestureRecognizer:longPressGesture];
                                        slideMenuView3 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(70.0f, 526.0f, [self.view bounds].size.width-70.0f,  240.0f) backgroundColor:[UIColor blackColor]  buttons:thirdButtonArray];
                                        [self.view addSubview:slideMenuView3];
                                        //----------------putting image for Video Album---------------//
                                        if([loadImage hasSuffix:@"MOV"])
                                        {
                                            CGRect passcodeImageFrame = CGRectMake( 70, 70, 60,60 );
                                            UIImage *lockImage =[UIImage imageNamed:@"videoIcon.png"];
                                            UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                            [passcodeImage setImage:lockImage];
                                            [albumButton addSubview: passcodeImage];
                                        }
                                        //---------------------------------------------------------------//
                                        CGRect albumNameLabelFrame = CGRectMake( 10, 0, 180.0,20.0 );
                                        UILabel* label = [[UILabel alloc] initWithFrame: albumNameLabelFrame];
                                        [label setFont:[UIFont fontWithName:@"Helvetica-Light" size:18]];
                                        label.textAlignment = NSTextAlignmentCenter;
                                        [label setText:[finalArray objectAtIndex:counter]];
                                        [label setTextColor: [UIColor blackColor]];
                                        [albumButton addSubview: label];
                                        
                                        //for Number of Pages in Album
                                        CGRect albumPageLabelFrame = CGRectMake(10, 180.0, 180.0,20.0);
                                        UILabel *pageLabel = [[UILabel alloc] initWithFrame: albumPageLabelFrame];
                                       [pageLabel setFont:[UIFont fontWithName:@"Helvetica-Light" size:18]];
                                        UIImageView *labelImage =[[UIImageView alloc]initWithFrame:CGRectMake(130, 0, 20, 20)];
                                        [labelImage setImage:[UIImage imageNamed:@"pageImage.png"]];
                                        [pageLabel setText:[NSString stringWithFormat:@"%d",value]];
                                        pageLabel.textAlignment = NSTextAlignmentRight;
                                        [pageLabel setTextColor: [UIColor blackColor]];
                                        [pageLabel addSubview:labelImage];
                                        [albumButton addSubview: pageLabel];
                                        
                                        for(int j = 0;j<[databaseArray count];j++)
                                        {
                                            if([[finalArray objectAtIndex:counter ] isEqualToString:databaseArray[j]])
                                            {
                                                CGRect passcodeImageFrame = CGRectMake( 10, 180, 20.0,20.0 );
                                                UIImage *lockImage =[UIImage imageNamed:@"lock.png"];
                                                UIImageView* passcodeImage = [[UIImageView alloc] initWithFrame: passcodeImageFrame];
                                                [passcodeImage setImage:lockImage];
                                                [albumButton addSubview: passcodeImage];
                                            }
                                            
                                        }
                                    counter = counter+1;
                                }

                            }
                        }
                            if(([finalArray count] == counter )|| ([finalArray count] == 0))
                                Finishes = TRUE;
                            if(Finishes)
                            {
                                if([databaseArray count]==0)
                                            databaseArray = NULL;
                                //First Line
                                lineView = [[UIView alloc]initWithFrame:CGRectMake(70, 279, [self.view bounds].size.width-70.0f, 1)];
                                [lineView setBackgroundColor:[UIColor whiteColor]];
                                [self.view addSubview:lineView];
                                //Second Line
                                lineView1 = [[UIView alloc]initWithFrame:CGRectMake(70, 520, [self.view bounds].size.width-70.0f, 1)];
                                [lineView1 setBackgroundColor:[UIColor whiteColor]];
                                [self.view addSubview:lineView1];
                                
                                //For Top ScrollView Left Side
                                if(slideMenuView)
                                {
                                    /*UIImage *indicatorImage = [UIImage imageNamed:@"right_end.png"];
                                    indicationImageView = [[UIImageView alloc]init];
                                    indicationImageView.frame = CGRectMake(0, 6.5, 10, 220);
                                    [indicationImageView setImage:indicatorImage];
                                    [slideMenuView->menuScrollView addSubview:indicationImageView];*/
                                    
                                    //For Top ScrollView Right SIde
                                    UIImage *rightIndicatorImage = [UIImage imageNamed:@"right_end.png"];
                                    rightIndicatorImageView = [[UIImageView alloc]init];
                                    rightIndicatorImageView.frame = CGRectMake(([firstButtonArray count]*200)+((([firstButtonArray count])-1)*30)+30, 6.5, 10 , 220);
                                    [rightIndicatorImageView setImage:rightIndicatorImage];
                                    [slideMenuView->menuScrollView addSubview:rightIndicatorImageView];
                                }
                                
                                //For Middle ScrollView
                                if(slideMenuView1)
                                {
                                    UIImage *indicatorImage1 = [UIImage imageNamed:@"left_end.png"];
                                    indicationImageView1 = [[UIImageView alloc]init];
                                    indicationImageView1.frame = CGRectMake(0, 6.5, 10, 220);
                                    [indicationImageView1 setImage:indicatorImage1];
                                    [slideMenuView1->menuScrollView addSubview:indicationImageView1];
                                    
                                    //For Middle ScrollView Right SIde
                                    UIImage *secondRowrightIndicatorImage = [UIImage imageNamed:@"right_end.png"];
                                    secondRowrightIndicatorImageView = [[UIImageView alloc]init];
                                    secondRowrightIndicatorImageView.frame = CGRectMake(([secondButtonArray count]*200)+((([secondButtonArray count])-1)*30)+30, 6.5, 10 , 220);
                                    [secondRowrightIndicatorImageView setImage:secondRowrightIndicatorImage];
                                    [slideMenuView1->menuScrollView addSubview:secondRowrightIndicatorImageView];
                                }
                                
                                //For DownScrollView
                                if(slideMenuView3)
                                {
                                    UIImage *indicatorImage2 = [UIImage imageNamed:@"left_end.png"];
                                    indicationImageView2 = [[UIImageView alloc]init];
                                    indicationImageView2.frame = CGRectMake(0, 6.5, 10, 220);
                                    [indicationImageView2 setImage:indicatorImage2];
                                    [slideMenuView3->menuScrollView addSubview:indicationImageView2];
                                    
                                    //For Down ScrollView Right SIde
                                    UIImage *thirdRowrightIndicatorImage = [UIImage imageNamed:@"right_end.png"];
                                    thirdRowrightIndicatorImageView = [[UIImageView alloc]init];
                                    thirdRowrightIndicatorImageView.frame = CGRectMake(([thirdButtonArray count]*200)+((([thirdButtonArray count])-1)*30)+30, 6.5, 10 , 220);
                                    [thirdRowrightIndicatorImageView setImage:thirdRowrightIndicatorImage];
                                    [slideMenuView3->menuScrollView addSubview:thirdRowrightIndicatorImageView];
                                }
                                //remove AlertView
                                [loadingAlertView dismissWithClickedButtonIndex:1 animated:YES];
                                loadingAlertView = nil;
                                indicationImageView = nil;
                                indicationImageView1 = nil;
                                indicationImageView2 = nil;
                                rightIndicatorImageView = nil;
                                secondRowrightIndicatorImageView = nil;
                                thirdRowrightIndicatorImageView = nil;
                                spinners = nil;
                                Finishes = FALSE;
                                //counter = 0;
                                firstButtonArray = NULL;
                                secondButtonArray = NULL;
                                thirdButtonArray = NULL;
                                k = 0, l= 0;
                                if(showStart == 1)
                                {
                                    [self callFaqMethod];
                                    showStart = showStart + 1;
                                }
                                if(!imageAssetsAvailable && !videoAssetsAvailable)
                                {
                                    noImagesView = [[UIAlertView alloc] initWithTitle:@"No Images" message:@"No Images or videos found on your device" delegate:self cancelButtonTitle:@"Ok" otherButtonTitles:nil, nil ];
                                    [noImagesView show];
                                    noimagesandvideos = TRUE;
                                    imageURL = NULL;
                                    dateArray = NULL;
                                    imageAssets = NULL;
                                    //groups = NULL;
                                }
                            }
                    };
                    
                    ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                    {
                        NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                    };
                    
                    if(loadImage && [loadImage length])
                    {
                        
                        NSURL *asseturl = [NSURL URLWithString:loadImage];
                        [assetsLibrary assetForURL:asseturl
                                       resultBlock:resultblock
                                      failureBlock:failureblock];
                    }
                    
                }
            }
        }
        
        else
        {
            NSLog(@"%@ is not a directory", documentsDirectory);
        }
    }
    
    else
    {
        NSLog(@"%@ does not exist", documentsDirectory);
    }
    }
}

-(void)separateImages
{
    imageAssets = [[NSMutableArray alloc] init];
    dateArray = [[NSMutableArray alloc]init];
    
    for (int i = 0 ; i< [groups count]; i++)
    {
        
        assetsGroup = [groups objectAtIndex:i];
        ALAssetsGroupEnumerationResultsBlock assetsEnumerationBlock = ^(ALAsset *result, NSUInteger index, BOOL *stop)
        {
            if (result)
            {
                date = [result valueForProperty:ALAssetPropertyDate];
                //taking Year From Date to make YearBook
                NSCalendar* calendar = [NSCalendar currentCalendar];
                NSDateComponents* compoNents = [calendar components:NSYearCalendarUnit|NSMonthCalendarUnit|NSDayCalendarUnit fromDate:date];
                year = [compoNents year];
                getYear =  [NSString stringWithFormat:@"%d",year];
                [dateArray addObject:getYear];
                [imageAssets addObject:result];
            }
        };
        
        ALAssetsFilter *onlyPhotosFilter = [ALAssetsFilter allAssets];
        [assetsGroup setAssetsFilter:onlyPhotosFilter];
        [assetsGroup enumerateAssetsUsingBlock:assetsEnumerationBlock];
    }
    if([imageAssets count] <= 0)
        imageAssetsAvailable = false;
    else
        imageAssetsAvailable = true;
}

-(void)separateVideos
{
    videoAssets = [[NSMutableArray alloc] init];
    for (int i = 0 ; i< [groups count]; i++)
    {
        
        assetsGroup = [groups objectAtIndex:i];
        ALAssetsGroupEnumerationResultsBlock assetsEnumerationBlock = ^(ALAsset *result, NSUInteger index, BOOL *stop) {
            
            if (result)
            {
                [videoAssets addObject:result];
                
            }
        };
        
        ALAssetsFilter *onlyPhotosFilter = [ALAssetsFilter allVideos];
        [assetsGroup setAssetsFilter:onlyPhotosFilter];
        [assetsGroup enumerateAssetsUsingBlock:assetsEnumerationBlock];
        
    }
    if([videoAssets count] <= 0)
        videoAssetsAvailable = false;
    else
        videoAssetsAvailable = true;
}
- (void) createYearBook
{
    unEditAlbum = [[NSMutableArray alloc]init];
    [self imageAlbum];
    [self videoAlbum];
}

- (void) getImagesForYear:(NSString *)Thisyear
{
    int count = [dateArray count];
    for(int i=0;i<count;i++)
    {
        
        if([dateArray[i] isEqualToString:Thisyear] )
        {
            
            [imageURL addObject:imageAssets[i]];
        }
    }
}

-(void)imageAlbum
{
    
    NSMutableArray *yearsDone = [[NSMutableArray alloc] init];
    int count = [dateArray count];
    if(count > 0)
        currentYear = [dateArray objectAtIndex:0];
    
    for(int i=0;i<count;i++)
    {
        if(((currentYear != dateArray[i] || i!=0)) || ([dateArray count]== 1))
        {
            currentYear = dateArray[i];
            if([yearsDone containsObject:currentYear])
                continue;
            [yearsDone addObject:currentYear];
            imageURL =[[NSMutableArray alloc]init];
            [self getImagesForYear:currentYear];
            NSString *createAlbum = @"YearBook_";
            NSString *YB = [createAlbum stringByAppendingString:currentYear];
            [unEditAlbum addObject:YB];
            NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
            NSString *documentsDirectory = [paths objectAtIndex:0];
            NSString *autoGeneratedDirectory =@"YEARBOOKS";
            NSString *dataPath = [documentsDirectory stringByAppendingPathComponent:autoGeneratedDirectory];
            checkYB = dataPath;
            dataPath = [dataPath stringByAppendingPathComponent:YB];
            NSFileManager *fileManager = [NSFileManager defaultManager];
            BOOL isDir = YES;
            BOOL isDirExists = [fileManager fileExistsAtPath:dataPath isDirectory:&isDir];
            if (!isDirExists)
            {
                //return;
                [fileManager createDirectoryAtPath:dataPath withIntermediateDirectories:YES attributes:nil error:nil];
            }
            //putting XML File Into The User Created Directory
            yearPath = [dataPath stringByAppendingPathComponent:@"Pronto.xml"];
            NSError *error;
            if (![[NSFileManager defaultManager] fileExistsAtPath:dataPath])
            {
                [[NSFileManager defaultManager] createFileAtPath:dataPath contents:nil attributes:nil];
                
                [yearPath writeToFile:dataPath atomically:YES encoding:NSUTF8StringEncoding error:&error];
                
            }
            // allocate serializer
            XMLWriter* xmlWriter = [[XMLWriter alloc]init];
            [xmlWriter writeStartDocumentWithEncodingAndVersion:@"UTF-8" version:@"1.0"];
            
            // start writing XML elements
            [xmlWriter writeStartElement:@"Album"];
            [xmlWriter writeAttribute:@"name" value:YB];
            NSString *string = [NSString stringWithFormat:@"%d",[imageURL count]];
            [xmlWriter writeAttribute:@"TotalPages" value:string];
            [xmlWriter writeAttribute:@"theme" value:@"iOS Theme"];
            
            for(int j=0; j<[imageURL count] ;j++)
            {
                [xmlWriter writeStartElement:@"page"];
                [xmlWriter writeStartElement:@"LU"];
                finalTemp = @"JPG";
                finalTemp1 = @"PNG";
                if([[imageURL[j] description] rangeOfString:finalTemp].location != NSNotFound)
                    [xmlWriter writeCharacters:@"1"];
                
                else
                {
                    if([[imageURL[j] description] rangeOfString:finalTemp1].location != NSNotFound)
                        [xmlWriter writeCharacters:@"1"];
                    else
                        [xmlWriter writeCharacters:@"12"];
                }
                [xmlWriter writeEndElement];
                [xmlWriter writeStartElement:@"MainImages"];
                xmlString1 = [imageURL[j] description];
                if([xmlString1 hasPrefix:@"A"])
                {
                    xmlString1 = [xmlString1 substringFromIndex:27];
                }
                xmlString1= [xmlString1 stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                [xmlWriter writeCData:xmlString1];
                [xmlWriter writeEndElement:@"MainImages"];
                 NSString *intString = [NSString  stringWithFormat:@"%d",j];
                [xmlWriter writeStartElement:@"CP"];
                [xmlWriter writeCharacters:intString];
                [xmlWriter writeEndElement];
                [xmlWriter writeEndElement];
                
            }
            [xmlWriter writeEndElement:@"Album"];
            // get the resulting XML string
            NSString *xml= [xmlWriter toString];
            NSData *data = [xml dataUsingEncoding:NSUTF8StringEncoding];
            [[NSFileManager defaultManager] createFileAtPath:yearPath contents:data attributes:nil];
        }
        
    }

    
}

-(void)videoAlbum
{
    if([videoAssets count] <= 0)
            return;
    NSString *createVideoAlbum = @"Video Album";
    [unEditAlbum addObject:createVideoAlbum];
    NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [paths objectAtIndex:0];
    NSString *autoGeneratedDirectory =@"YEARBOOKS";
    NSString *dataPath = [documentsDirectory stringByAppendingPathComponent:autoGeneratedDirectory];
    checkYB = dataPath;
    dataPath = [dataPath stringByAppendingPathComponent:createVideoAlbum];
    NSFileManager *fileManager = [NSFileManager defaultManager];
    BOOL isDir = YES;
    BOOL isDirExists = [fileManager fileExistsAtPath:dataPath isDirectory:&isDir];
    
    if (!isDirExists)
    {
        [fileManager createDirectoryAtPath:dataPath withIntermediateDirectories:YES attributes:nil error:nil];
    }
    
    //putting XML File Into The User Created Directory
    yearPath = [dataPath stringByAppendingPathComponent:@"Pronto.xml"];
    
    NSError *error;
    if (![[NSFileManager defaultManager] fileExistsAtPath:dataPath])
    {
        [[NSFileManager defaultManager] createFileAtPath:dataPath contents:nil attributes:nil];
        
        [yearPath writeToFile:dataPath atomically:YES encoding:NSUTF8StringEncoding error:&error];
        
    }
    // allocate serializer
    XMLWriter* xmlWriter = [[XMLWriter alloc]init];
    [xmlWriter writeStartDocumentWithEncodingAndVersion:@"UTF-8" version:@"1.0"];
    
    // start writing XML elements
    [xmlWriter writeStartElement:@"Album"];
    [xmlWriter writeAttribute:@"name" value:createVideoAlbum];
    NSString *string = [NSString stringWithFormat:@"%d",[videoAssets count]];
    [xmlWriter writeAttribute:@"TotalPages" value:string];
    [xmlWriter writeAttribute:@"theme" value:@"iOS Theme"];
    
    for(int j=0; j<[videoAssets count] ;j++)
        
    {
        [xmlWriter writeStartElement:@"page"];
        [xmlWriter writeStartElement:@"LU"];
        [xmlWriter writeCharacters:@"12"];
        [xmlWriter writeEndElement];
        [xmlWriter writeStartElement:@"MainImages"];
        xmlString1 = [videoAssets[j] description];
        if([xmlString1 hasPrefix:@"A"])
        {
            xmlString1 = [xmlString1 substringFromIndex:27];
        }
        xmlString1= [xmlString1 stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
        [xmlWriter writeCData:xmlString1];
        [xmlWriter writeEndElement:@"MainImages"];
        NSString *intString = [NSString  stringWithFormat:@"%d",j];
        [xmlWriter writeStartElement:@"CP"];
        [xmlWriter writeCharacters:intString];
        [xmlWriter writeEndElement];
        [xmlWriter writeEndElement];
        
    }
    [xmlWriter writeEndElement:@"Album"];
    // get the resulting XML string
    NSString *xml= [xmlWriter toString];
    NSData *data = [xml dataUsingEncoding:NSUTF8StringEncoding];
    [[NSFileManager defaultManager] createFileAtPath:yearPath contents:data attributes:nil];
    
}

//For Checking Extraitem Available or Not in Album
- (void) checkNextExtraitem
{
    if([((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->extraImage count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(528.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(440.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920.0, 250.8, 104 , 103.4 );
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920.0, 250.8, 104 , 103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
        }
    }
    
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(528.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(440.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920.0, 250.8, 104 , 103.4);
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920.0, 250.8, 104 , 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
            
        }
        
    }
    if([((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->audios count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(528.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(440.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:audioButton];
            }
            
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                
                [self.view addSubview:audioButton];
            }
        }
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(528.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(440.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }
            
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }
        }
        
    }
    
    
    if([((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->videos count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(528.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];
            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(440.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];
            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];
            }
            
        }
        
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(528.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];
            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(440.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];
            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];
            }
        }
    }
    
    if([((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->webLink count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(528.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];
            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(440.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920, 354.2, 104, 103.4);
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];
            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920, 354.2, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];
            }
            
        }
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(528.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(440.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920, 354.2, 104, 103.4);
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920, 354.2, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
            }
            
        }
    }
    
}

//------------------------------Button Method Starts From here Onwards-----------------------//

- (void)audioButton
{
    // Method for creating button, with background image and other properties
    
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalaudioButton = @"audio_";
            finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
            finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
            UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
            audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            audioButton.frame = CGRectMake(528.0, 32.0, 40.0,41 );
            if([themeName isEqualToString:@"Glass"])
            {
                [audioButton setBackgroundColor:[UIColor blackColor]];
            }
            [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
            [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:audioButton];
        }
        //for upto iPhone4  & iPod4 Touch
        else
        {
            finalaudioButton = @"audio_";
            finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
            finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
            UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
            audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            audioButton.frame = CGRectMake(440.0, 32.0, 40.0,41 );
            if([themeName isEqualToString:@"Glass"])
            {
                [audioButton setBackgroundColor:[UIColor blackColor]];
            }
            [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
            [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:audioButton];
        }
        
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalaudioButton = @"audio_";
            finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
            finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
            UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
            audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            audioButton.frame = CGRectMake(920, 44.0, 104,103.4 );
            [audioButton setImage:audioBtn forState:UIControlStateNormal];
            audioButton.imageView.contentMode = UIViewContentModeScaleToFill;
            [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:audioButton];
        }
        else
        {
            finalaudioButton = @"audio_";
            finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
            finalaudioButton = [finalaudioButton stringByAppendingString:@"_iPad_d.png"];
            UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
            audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            audioButton.frame = CGRectMake(920, 44.0, 104,103.4 );
            if([themeName isEqualToString:@"Glass"])
            {
                [audioButton setBackgroundColor:[UIColor blackColor]];
            }
            [audioButton setImage:audioBtn forState:UIControlStateNormal];
            audioButton.imageView.contentMode = UIViewContentModeScaleToFill;
            [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:audioButton];
        }
    }
   
}

- (void)audioClicked : (id)sender
{
    if(moviePlayerVC)
    {
        if(videoAlbumShowing)
        {
            [moviePlayerVC.moviePlayer pause];
        }
        else
        {
            [moviePlayerVC.moviePlayer pause];
            [moviePlayerVC.moviePlayer.view removeFromSuperview];
             moviePlayerVC = nil;
        }
    }
    if (!audioStop)
    {
        if(currentPage == 0)
            currentPage = currentPage+1;
        switch(((Album *) xmlParser->albumname[currentPage-1])->layOut)
        {
            case 12:
            {
                audiosCount = [((Album *) xmlParser->albumname[currentPage-1])->audios count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(308,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }

                    }
                    else
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(220,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }

                    }
                }
                else
                {
                    if (audiosCount == 1)
                    {
                        NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                        playerItem = [[AVPlayerItem alloc] initWithURL:url];
                        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                        [player play];
                    }
                    else
                    {
                        tableViewAudios = [[NSMutableArray alloc]init];
                        tableViewAudioTitle = [[NSMutableArray alloc]init];
                        audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(700,0,220,20+(60*audiosCount)) style:UITableViewStyleGrouped];
                        audiosTableView.dataSource = self;
                        audiosTableView.delegate = self;
                        audiosTableView.tag =5;
                        audiosTableView.rowHeight = 60.0f;
                        audiosTableView.scrollEnabled = YES;
                        [audiosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:audiosTableView];
                        
                    }
                }
                break;
            }

            case 1:
            {
                audiosCount = [((Album *) xmlParser->albumname[currentPage-1])->audios count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(308,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }
                    }
                    else
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(220,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }
                    }
                }
                else
                {
                    if (audiosCount == 1)
                    {
                        NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                        playerItem = [[AVPlayerItem alloc] initWithURL:url];
                        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                        [player play];
                    }
                    else
                    {
                        tableViewAudios = [[NSMutableArray alloc]init];
                        tableViewAudioTitle = [[NSMutableArray alloc]init];
                        audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(700,0,220,20+(60*audiosCount)) style:UITableViewStyleGrouped];
                        audiosTableView.dataSource = self;
                        audiosTableView.delegate = self;
                        audiosTableView.tag =5;
                        audiosTableView.rowHeight = 60.0f;
                        audiosTableView.scrollEnabled = YES;
                        [audiosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:audiosTableView];
                        
                    }
                }
            break;
            }
                
            case 2:
            {
                audiosCount = [((Album *) xmlParser->albumname[currentPage-1])->audios count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                            
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(308,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }
                    }
                    else
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                            
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(220,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }
                    }
                }
                else
                {
                    if (audiosCount == 1)
                    {
                        NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                        playerItem = [[AVPlayerItem alloc] initWithURL:url];
                        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                        [player play];
                    }
                    else
                    {
                        tableViewAudios = [[NSMutableArray alloc]init];
                        tableViewAudioTitle = [[NSMutableArray alloc]init];
                        audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(700,0,220,20+(60*audiosCount)) style:UITableViewStyleGrouped];
                        audiosTableView.dataSource = self;
                        audiosTableView.delegate = self;
                        audiosTableView.tag =5;
                        audiosTableView.rowHeight = 60.0f;
                        audiosTableView.scrollEnabled = YES;
                        [audiosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:audiosTableView];
                    }
                }
                break;
            }
                
            case 3:
            {
                audiosCount = [((Album *) xmlParser->albumname[currentPage-1])->audios count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(308,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                            
                        }

                    }
                    else
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(220,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                            
                        }

                    }
                }
                else
                {
                    if (audiosCount == 1)
                    {
                        NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                        playerItem = [[AVPlayerItem alloc] initWithURL:url];
                        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                        [player play];
                    }
                    else
                    {
                        tableViewAudios = [[NSMutableArray alloc]init];
                        tableViewAudioTitle = [[NSMutableArray alloc]init];
                        audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(700,0,220,20+(60*audiosCount)) style:UITableViewStyleGrouped];
                        audiosTableView.dataSource = self;
                        audiosTableView.delegate = self;
                        audiosTableView.tag =5;
                        audiosTableView.rowHeight = 60.0f;
                        audiosTableView.scrollEnabled = YES;
                        [audiosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:audiosTableView];
                    }
                }
                break;
            }
                
            case 4:
            {
                audiosCount = [((Album *) xmlParser->albumname[currentPage-1])->audios count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(308,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }

                    }
                    else
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(220,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }

                    }
                }
                else
                {
                    if (audiosCount == 1)
                    {
                        NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                        playerItem = [[AVPlayerItem alloc] initWithURL:url];
                        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                        [player play];
                    }
                    else
                    {
                        tableViewAudios = [[NSMutableArray alloc]init];
                        tableViewAudioTitle = [[NSMutableArray alloc]init];
                        audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(700,0,220,20+(60*audiosCount)) style:UITableViewStyleGrouped];
                        audiosTableView.dataSource = self;
                        audiosTableView.delegate = self;
                        audiosTableView.tag =5;
                        audiosTableView.rowHeight = 60.0f;
                        audiosTableView.scrollEnabled = YES;
                        [audiosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:audiosTableView];
                    }
                }
                break;
            }
                
            case 9:
            {
                audiosCount = [((Album *) xmlParser->albumname[currentPage-1])->audios count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(308,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }

                    }
                    else
                    {
                        if (audiosCount == 1)
                        {
                            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                            playerItem = [[AVPlayerItem alloc] initWithURL:url];
                            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                            [player play];
                        }
                        else
                        {
                            tableViewAudios = [[NSMutableArray alloc]init];
                            tableViewAudioTitle = [[NSMutableArray alloc]init];
                            audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(220,0,220,20+(50*audiosCount)) style:UITableViewStyleGrouped];
                            audiosTableView.dataSource = self;
                            audiosTableView.delegate = self;
                            audiosTableView.tag =5;
                            audiosTableView.rowHeight = 50.0f;
                            audiosTableView.scrollEnabled = YES;
                            [audiosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:audiosTableView];
                        }

                    }
                }
                else
                {
                    if (audiosCount == 1)
                    {
                        
                        NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage-1])->audios[0];
                        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
                        playerItem = [[AVPlayerItem alloc] initWithURL:url];
                        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
                        [player play];
                    }
                    else
                    {
                        tableViewAudios = [[NSMutableArray alloc]init];
                        tableViewAudioTitle = [[NSMutableArray alloc]init];
                        audiosTableView = [[UITableView alloc] initWithFrame:CGRectMake(700,0,220,20+(60*audiosCount)) style:UITableViewStyleGrouped];
                        audiosTableView.dataSource = self;
                        audiosTableView.delegate = self;
                        audiosTableView.tag =5;
                        audiosTableView.rowHeight = 60.0f;
                        audiosTableView.scrollEnabled = YES;
                        [audiosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:audiosTableView];
                    }
                }
                break;
            }
                
            default:
                break;
        }
        audioStop = TRUE;
    }
    else
    {
        [audiosTableView removeFromSuperview];
        [player pause];
        audiosTableView .tag = 0;
        audiosTableView = Nil;
        player = nil;
        playerItem = nil;
        tableViewAudios = NULL;
        tableViewAudioTitle = NULL;
        audioStop = FALSE;
    }
}

- (void)videoButton
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalVideoButton = @"video_";
            finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
            finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
            UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
            videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            videoButton.frame = CGRectMake(528.0, 73, 40.0 , 41 );
            if([themeName isEqualToString:@"Glass"])
            {
                [videoButton setBackgroundColor:[UIColor blackColor]];
            }
            [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
            [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:videoButton];
        }
        //for upto iPhone4 & iPod4
        else
        {
            finalVideoButton = @"video_";
            finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
            finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
            UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
            videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            videoButton.frame = CGRectMake(440.0, 73, 40.0 , 41 );
            if([themeName isEqualToString:@"Glass"])
            {
                [videoButton setBackgroundColor:[UIColor blackColor]];
            }
            [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
            [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:videoButton];
        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalVideoButton = @"video_";
            finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
            finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
            UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
            videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            videoButton.frame = CGRectMake(920, 147.4, 104,103.4 );
            [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
            [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:videoButton];
        }
        else
        {
            finalVideoButton = @"video_";
            finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
            finalVideoButton = [finalVideoButton stringByAppendingString:@"_iPad_d.png"];
            UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
            videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            videoButton.frame = CGRectMake(920, 147.4, 104,103.4 );
            if([themeName isEqualToString:@"Glass"])
            {
                [videoButton setBackgroundColor:[UIColor blackColor]];
            }
            [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
            [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:videoButton];
        }
        
    }
    
}

- (void)videoClicked : (id)sender
{
    if(player)
    {
        [player pause];
        player = nil;
        playerItem = nil;
        tableViewAudios= NULL;
        audioStop = FALSE;
    }
    if(moviePlayerVC)
    {
        [moviePlayerVC.moviePlayer pause];
    
    }
    if (extraVideo)
    {
        if(currentPage == 0)
            currentPage = currentPage+1;
        
        switch(((Album *) xmlParser->albumname[currentPage-1])->layOut)
        {
            case 1:
            {
                videosCount = [((Album *) xmlParser->albumname[currentPage-1])->videos count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (videosCount == 1)
                        {
                            
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                    else
                    {
                        if (videosCount == 1)
                        {
                            
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                }
                else
                {
                    if (videosCount == 1)
                    {
                        
                        loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                        loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        UIGraphicsBeginImageContext(CGSizeMake(1,1));
                        moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                        UIGraphicsEndImageContext();
                        [moviePlayerVC.moviePlayer prepareToPlay];
                        [moviePlayerVC.view setFrame: newView.bounds];
                        [newView addSubview: moviePlayerVC.view];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                        [moviePlayerVC.moviePlayer play];
                        extraVideo = TRUE;
                        
                    }
                    else
                    {
                        tableViewVideos = [[NSMutableArray alloc]init];
                        videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*videosCount)) style:UITableViewStyleGrouped];
                        videosTableView.dataSource = self;
                        videosTableView.delegate = self;
                        videosTableView.tag =4;
                        videosTableView.rowHeight = 60.0f;
                        videosTableView.scrollEnabled = YES;
                        [videosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:videosTableView];
                        extraVideo = FALSE;
                        
                    }
                }
                break;
            }
                
            case 2:
            {
                videosCount = [((Album *) xmlParser->albumname[currentPage-1])->videos count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (videosCount == 1)
                        {
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                    else
                    {
                        if (videosCount == 1)
                        {
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                }
                else
                {
                    if (videosCount == 1)
                    {
                        loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                        loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        UIGraphicsBeginImageContext(CGSizeMake(1,1));
                        moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                        UIGraphicsEndImageContext();
                        [moviePlayerVC.moviePlayer prepareToPlay];
                        [moviePlayerVC.view setFrame: newView.bounds];
                        [newView addSubview: moviePlayerVC.view];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                        [moviePlayerVC.moviePlayer play];
                        extraVideo = TRUE;
                    }
                    else
                    {
                        tableViewVideos = [[NSMutableArray alloc]init];
                        videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*videosCount)) style:UITableViewStyleGrouped];
                        videosTableView.dataSource = self;
                        videosTableView.delegate = self;
                        videosTableView.tag =4;
                        videosTableView.rowHeight = 60.0f;
                        videosTableView.scrollEnabled = YES;
                        [videosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:videosTableView];
                        extraVideo = FALSE;
                    }

                }
                break;
            }
                
            case 3:
            {
                videosCount = [((Album *) xmlParser->albumname[currentPage-1])->videos count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (videosCount == 1)
                        {
                            
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                    else
                    {
                        if (videosCount == 1)
                        {
                            
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                }
                else
                {
                    if (videosCount == 1)
                    {
                        loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                        loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        UIGraphicsBeginImageContext(CGSizeMake(1,1));
                        moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                        UIGraphicsEndImageContext();
                        [moviePlayerVC.moviePlayer prepareToPlay];
                        [moviePlayerVC.view setFrame: newView.bounds];
                        [newView addSubview: moviePlayerVC.view];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                        [moviePlayerVC.moviePlayer play];
                        extraVideo = TRUE;
                    }
                    else
                    {
                        tableViewVideos = [[NSMutableArray alloc]init];
                        videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*videosCount)) style:UITableViewStyleGrouped];
                        videosTableView.dataSource = self;
                        videosTableView.delegate = self;
                        videosTableView.tag =4;
                        videosTableView.rowHeight = 60.0f;
                        videosTableView.scrollEnabled = YES;
                        [videosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:videosTableView];
                        extraVideo = FALSE;
                    }
                }
                break;
            }
                
            case 4:
            {
                videosCount = [((Album *) xmlParser->albumname[currentPage-1])->videos count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (videosCount == 1)
                        {
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                    else
                    {
                        if (videosCount == 1)
                        {
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                }
                else
                {
                    if (videosCount == 1)
                    {
                       loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                        loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        UIGraphicsBeginImageContext(CGSizeMake(1,1));
                        moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                        UIGraphicsEndImageContext();
                        [moviePlayerVC.moviePlayer prepareToPlay];
                        [moviePlayerVC.view setFrame: newView.bounds];
                        [newView addSubview: moviePlayerVC.view];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                        [moviePlayerVC.moviePlayer play];
                        extraVideo = TRUE;
                    }
                    else
                    {
                        tableViewVideos = [[NSMutableArray alloc]init];
                        videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*videosCount)) style:UITableViewStyleGrouped];
                        videosTableView.dataSource = self;
                        videosTableView.delegate = self;
                        videosTableView.tag =4;
                        videosTableView.rowHeight = 60.0f;
                        videosTableView.scrollEnabled = YES;
                        [videosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:videosTableView];
                        extraVideo = FALSE;
                    }
                }
                break;
            }
                
            case 9:
            {
                videosCount = [((Album *) xmlParser->albumname[currentPage-1])->videos count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (videosCount == 1)
                        {
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                    else
                    {
                        if (videosCount == 1)
                        {
                            loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            UIGraphicsBeginImageContext(CGSizeMake(1,1));
                            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                            UIGraphicsEndImageContext();
                            [moviePlayerVC.moviePlayer prepareToPlay];
                            [moviePlayerVC.view setFrame: newView.bounds];
                            [newView addSubview: moviePlayerVC.view];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                            [moviePlayerVC.moviePlayer play];
                            extraVideo = TRUE;
                        }
                        else
                        {
                            tableViewVideos = [[NSMutableArray alloc]init];
                            videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*videosCount)) style:UITableViewStyleGrouped];
                            videosTableView.dataSource = self;
                            videosTableView.delegate = self;
                            videosTableView.tag =4;
                            videosTableView.rowHeight = 50.0f;
                            videosTableView.scrollEnabled = YES;
                            [videosTableView setUserInteractionEnabled:YES];
                            [newView addSubview:videosTableView];
                            extraVideo = FALSE;
                        }

                    }
                }
                else
                {
                    if (videosCount == 1)
                    {
                        loadVideo = ((Album *) xmlParser->albumname[currentPage-1])->videos[0];
                        loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        UIGraphicsBeginImageContext(CGSizeMake(1,1));
                        moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                        UIGraphicsEndImageContext();
                        [moviePlayerVC.moviePlayer prepareToPlay];
                        [moviePlayerVC.view setFrame: newView.bounds];
                        [newView addSubview: moviePlayerVC.view];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
                        [moviePlayerVC.moviePlayer play];
                        extraVideo = TRUE;
                    }
                    else
                    {
                        tableViewVideos = [[NSMutableArray alloc]init];
                        videosTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*videosCount)) style:UITableViewStyleGrouped];
                        videosTableView.dataSource = self;
                        videosTableView.delegate = self;
                        videosTableView.tag =4;
                        videosTableView.rowHeight = 60.0f;
                        videosTableView.scrollEnabled = YES;
                        [videosTableView setUserInteractionEnabled:YES];
                        [newView addSubview:videosTableView];
                        extraVideo = FALSE;
                    }
                }
                break;
            }
                
            default:
                break;
        }
    }
    else
    {
        [videosTableView removeFromSuperview];
        videosTableView.tag = 0;
        videosTableView = nil;
        moviePlayerVC = nil;
        tableViewVideos = nil;
        extraVideo = TRUE;
    }

}
- (void) movieFinishedCallback:(NSNotification*) aNotification
{
    [moviePlayerVC.moviePlayer stop];
    
    [[NSNotificationCenter defaultCenter] addObserver:self
                                             selector:@selector(doneButtonClick:)
                                                 name:MPMoviePlayerWillExitFullscreenNotification
                                               object:nil];
    
}
-(void)doneButtonClick:(NSNotification*)aNotification
{
    [moviePlayerVC.moviePlayer stop];
    moviePlayerVC = NULL;
}



- (void)MPMoviePlayerDidExitFullscreen:(NSNotification *)notification
{
    if(videoShow)
    {
        [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerDidExitFullscreenNotification object:nil];
        [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
        [moviePlayerVC.moviePlayer stop];
        videoShow = FALSE;
        
    }
    else
    {
        [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerDidExitFullscreenNotification object:nil];
        [[NSNotificationCenter defaultCenter] removeObserver:self name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
        [moviePlayerVC.moviePlayer stop];
        [moviePlayerVC.moviePlayer.view removeFromSuperview];
    }
    
}


- (void)extraImgButton
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalExtraImageButton = @"connexions_";
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
            UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
            extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            extraImgButton.frame = CGRectMake(528.0, 114, 40.0 , 41 );
            if([themeName isEqualToString:@"Glass"])
            {
                [extraImgButton setBackgroundColor:[UIColor blackColor]];
            }
            [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
            [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:extraImgButton];

        }
        //upto iPhone4 & iPod4
        else
        {
            finalExtraImageButton = @"connexions_";
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
            UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
            extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            extraImgButton.frame = CGRectMake(440.0, 114, 40.0 , 41 );
            if([themeName isEqualToString:@"Glass"])
            {
                [extraImgButton setBackgroundColor:[UIColor blackColor]];
            }
            [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
            [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:extraImgButton];

        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalExtraImageButton = @"connexions_";
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
            UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
            extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            extraImgButton.frame = CGRectMake(920, 250.8, 104,103.4 );
            [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
            [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:extraImgButton];
        }
        else
        {
            finalExtraImageButton = @"connexions_";
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
            finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_iPad_d.png"];
            UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
            extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            extraImgButton.frame = CGRectMake(920, 250.8, 104,103.4 );
            if([themeName isEqualToString:@"Glass"])
            {
                [extraImgButton setBackgroundColor:[UIColor blackColor]];
            }
            [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
            [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:extraImgButton];
        }
        
    }
    
}
- (void)extraImageButtonClicked
{
    if(moviePlayerVC)
    {
        [moviePlayerVC.moviePlayer pause];
    }
    if(extraImage)
    {
        if(currentPage == 0)
            currentPage = currentPage+1;
        switch(((Album *) xmlParser->albumname[currentPage-1])->layOut)
        {
            case 12:
            {
                extraImageCount = [((Album *) xmlParser->albumname[currentPage-1])->extraImage count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (extraImageCount == 1)
                        {
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                            detailViewController->videoAlbumExtraImageString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            detailViewController->videoAlbumExtraImageString = [detailViewController->videoAlbumExtraImageString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            detailViewController->videoExtraImage = TRUE;
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [extraImageTableView setAllowsSelection:YES];
                            [extraImageTableView setUserInteractionEnabled:YES];
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                    else
                    {
                        if (extraImageCount == 1)
                        {
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                            detailViewController->videoAlbumExtraImageString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            detailViewController->videoAlbumExtraImageString = [detailViewController->videoAlbumExtraImageString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            detailViewController->videoExtraImage = TRUE;
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [extraImageTableView setAllowsSelection:YES];
                            [extraImageTableView setUserInteractionEnabled:YES];
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                }
                else
                {
                    if (extraImageCount == 1)
                    {
                        DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                        detailViewController->videoAlbumExtraImageString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                        detailViewController->videoAlbumExtraImageString = [detailViewController->videoAlbumExtraImageString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        detailViewController->videoExtraImage = TRUE;
                        [self presentPopupViewController:detailViewController animationType:nil];
                        extraImage = TRUE;
                    }
                    else
                    {
                        tableViewImages = [[NSMutableArray alloc]init];
                        extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*extraImageCount)) style:UITableViewStyleGrouped];
                        extraImageTableView.dataSource = self;
                        extraImageTableView.delegate = self;
                        extraImageTableView.tag =1;
                        extraImageTableView.rowHeight = 60.0f;
                        extraImageTableView.scrollEnabled = YES;
                        [extraImageTableView setUserInteractionEnabled:YES];
                        [newView  addSubview:extraImageTableView];
                        extraImage = FALSE;
                    }
                }

            }
                break;
                
            case 1:
            {
                extraImageCount = [((Album *) xmlParser->albumname[currentPage-1])->extraImage count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (extraImageCount == 1)
                        {
                            oneView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            oneView->extraString= [oneView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            oneView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [extraImageTableView setAllowsSelection:YES];
                            [extraImageTableView setUserInteractionEnabled:YES];
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                    else
                    {
                        if (extraImageCount == 1)
                        {
                            oneView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            oneView->extraString= [oneView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            oneView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [extraImageTableView setAllowsSelection:YES];
                            [extraImageTableView setUserInteractionEnabled:YES];
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                }
                else
                {
                    if (extraImageCount == 1)
                    {
                        oneView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                        oneView->extraString= [oneView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        oneView->showExtraImage = TRUE;
                        DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                        [self presentPopupViewController:detailViewController animationType:nil];
                        extraImage = TRUE;
                    }
                    else
                    {
                        tableViewImages = [[NSMutableArray alloc]init];
                        extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*extraImageCount)) style:UITableViewStyleGrouped];
                        extraImageTableView.dataSource = self;
                        extraImageTableView.delegate = self;
                        extraImageTableView.tag =1;
                        extraImageTableView.rowHeight = 60.0f;
                        extraImageTableView.scrollEnabled = YES;
                        [extraImageTableView setUserInteractionEnabled:YES];
                        [newView  addSubview:extraImageTableView];
                        extraImage = FALSE;
                    }
                }
                
                break;
            }
                
            case 2:
            {
                extraImageCount = [((Album *) xmlParser->albumname[currentPage-1])->extraImage count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (extraImageCount == 1)
                        {
                            
                            twoView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            twoView->extraString= [twoView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            twoView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                    else
                    {
                        if (extraImageCount == 1)
                        {
                            
                            twoView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            twoView->extraString= [twoView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            twoView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                }
                else
                {
                    if (extraImageCount == 1)
                    {
                        twoView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                        twoView->extraString= [twoView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        twoView->showExtraImage = TRUE;
                        DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                        [self presentPopupViewController:detailViewController animationType:nil];
                        extraImage = TRUE;
                    }
                    else
                    {
                        tableViewImages = [[NSMutableArray alloc]init];
                        extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*extraImageCount)) style:UITableViewStyleGrouped];
                        extraImageTableView.dataSource = self;
                        extraImageTableView.delegate = self;
                        extraImageTableView.tag =1;
                        extraImageTableView.rowHeight = 60.0f;
                        extraImageTableView.scrollEnabled = YES;
                        [newView addSubview:extraImageTableView];
                        extraImage = FALSE;
                    }
                    
                }
                break;
            }
                
            case 3:
            {
                extraImageCount = [((Album *) xmlParser->albumname[currentPage-1])->extraImage count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (extraImageCount == 1)
                        {
                            
                            threeView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            threeView->extraString= [threeView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            threeView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }
                    }
                    else
                    {
                        if (extraImageCount == 1)
                        {
                            
                            threeView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            threeView->extraString= [threeView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            threeView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }
                    }
                }
                else
                {
                    if (extraImageCount == 1)
                    {
                        threeView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                        threeView->extraString= [threeView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        threeView->showExtraImage = TRUE;
                        DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                        [self presentPopupViewController:detailViewController animationType:nil];
                        extraImage = TRUE;
                        
                    }
                    else
                    {
                        tableViewImages = [[NSMutableArray alloc]init];
                        extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*extraImageCount)) style:UITableViewStyleGrouped];
                        extraImageTableView.dataSource = self;
                        extraImageTableView.delegate = self;
                        extraImageTableView.tag =1;
                        extraImageTableView.rowHeight = 60.0f;
                        extraImageTableView.scrollEnabled = YES;
                        [newView addSubview:extraImageTableView];
                        extraImage = FALSE;
                    }
                    
                }
                break;
            }
                
            case 4:
            {
                extraImageCount = [((Album *) xmlParser->albumname[currentPage-1])->extraImage count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (extraImageCount == 1)
                        {
                            fourView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            fourView->extraString= [fourView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            fourView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }
                    }
                    else
                    {
                        if (extraImageCount == 1)
                        {
                            fourView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            fourView->extraString= [fourView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            fourView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }
                    }
                }
                else
                {
                    if (extraImageCount == 1)
                    {
                        fourView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                        fourView->extraString= [fourView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        fourView->showExtraImage = TRUE;
                        DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                        [self presentPopupViewController:detailViewController animationType:nil];
                        extraImage = TRUE;
                    }
                    else
                    {
                        tableViewImages = [[NSMutableArray alloc]init];
                        extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*extraImageCount)) style:UITableViewStyleGrouped];
                        extraImageTableView.dataSource = self;
                        extraImageTableView.delegate = self;
                        extraImageTableView.tag =1;
                        extraImageTableView.rowHeight = 60.0f;
                        extraImageTableView.scrollEnabled = YES;
                        [newView addSubview:extraImageTableView];
                        extraImage = FALSE;
                    }
                    
                }
                break;
            }
                
            case 9:
            {
                extraImageCount = [((Album *) xmlParser->albumname[currentPage-1])->extraImage count];
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        if (extraImageCount == 1)
                        {
                            nineView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            nineView->extraString= [nineView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            nineView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(408,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                    else
                    {
                        if (extraImageCount == 1)
                        {
                            nineView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                            nineView->extraString= [nineView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            nineView->showExtraImage = TRUE;
                            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                            [self presentPopupViewController:detailViewController animationType:nil];
                            extraImage = TRUE;
                        }
                        else
                        {
                            tableViewImages = [[NSMutableArray alloc]init];
                            extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(320,0,120,20+(50*extraImageCount)) style:UITableViewStyleGrouped];
                            extraImageTableView.dataSource = self;
                            extraImageTableView.delegate = self;
                            extraImageTableView.tag =1;
                            extraImageTableView.rowHeight = 50.0f;
                            extraImageTableView.scrollEnabled = YES;
                            [newView addSubview:extraImageTableView];
                            extraImage = FALSE;
                        }

                    }
                }
                else
                {
                    if (extraImageCount == 1)
                    {
                        nineView->extraString = ((Album *) xmlParser->albumname[currentPage-1])->extraImage[0];
                        nineView->extraString= [nineView->extraString stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        nineView->showExtraImage = TRUE;
                        DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                        [self presentPopupViewController:detailViewController animationType:nil];
                        extraImage = TRUE;
                    }
                    else
                    {
                        tableViewImages = [[NSMutableArray alloc]init];
                        extraImageTableView = [[UITableView alloc] initWithFrame:CGRectMake(770,0,150,20+(60*extraImageCount)) style:UITableViewStyleGrouped];
                        extraImageTableView.dataSource = self;
                        extraImageTableView.delegate = self;
                        extraImageTableView.tag =1;
                        extraImageTableView.rowHeight = 60.0f;
                        extraImageTableView.scrollEnabled = YES;
                        [newView addSubview:extraImageTableView];
                        extraImage = FALSE;
                    }
                }
                break;
            }
                
            default:
                break;
        }
    }
    else
    {
        [extraImageTableView removeFromSuperview];
        extraImageTableView .tag = 0;
        extraImageTableView = nil;
        tableViewImages = NULL;
        extraImage = TRUE;
    }
}


//FOR DISPLAYING TABLEVIEW FOR EXTRAITEM

- (NSInteger)numberOfSectionsInTableView:(UITableView *)genTableView
{
        return 1;
}

- (NSInteger)tableView:(UITableView *)genTableView numberOfRowsInSection:(NSInteger)section
{
    
    if(genTableView.tag == 1)
        
        return extraImageCount;
    
    if(genTableView.tag == 2)
        
        return 11;

    if(genTableView.tag == 4)
        
        return videosCount;
    
    if(genTableView.tag == 5)
        
        return audiosCount;
    
    if(genTableView.tag == 6)
        
        return ([finalArray count]-[unEditAlbum count]);
    
    if(genTableView.tag == 7)
        
        return webLinkCount;
    
    else
      
        return 2;
    
    return 0;

}
- (UITableViewCell *)tableView:(UITableView *)genTableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    static NSString *CellIdentifier = @"Cell";
    UITableViewCell *cell = [genTableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil)
    {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
    }
    //------------------For Extra Image Display on Click on Extra Image Button----------//
    if(genTableView.tag == 1)
    {
        
        UIButton * btn =  [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 100, 50)];
       
            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->extraImage [indexPath.row];
            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
           [tableViewImages addObject:loadImage];
            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
            {
                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                CGImageRef iref = [rep fullScreenImage];
                temp = [UIImage imageWithCGImage:iref];
                
                if (iref)
                {
                    [cell.imageView setImage:temp];
                    [extraImageTableView reloadData];
                }
                
            };
            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
            {
                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
            };
            
            if(loadImage && [loadImage length])
            {
                
                NSURL *asseturl = [NSURL URLWithString:loadImage];
                ALAssetsLibrary* assetslibrary = [[ALAssetsLibrary alloc] init];
                [assetslibrary assetForURL:asseturl
                               resultBlock:resultblock
                              failureBlock:failureblock];
            }

        [btn addTarget:self action:@selector(btnTapped:)   forControlEvents:UIControlEventTouchUpInside];
        extraButtontag = indexPath.row;
        [btn setTag:extraButtontag];
        [cell.contentView addSubview:btn];
    }
    
    //-----------------click on Change Theme TableView List Will Display------------------//
    if(genTableView.tag == 2)
    {
 
        themeList = [NSArray arrayWithObjects:@"iOS Theme",@"Colors", @"Party Theme", @"Glass", @"BirthDay", @"Win8 Blue", @"Win8 Pink", @"Indian Wedding", @"Generic Wedding",@"Desert",@"Black and White", nil];
        themeImageList = [NSArray arrayWithObjects:@"bg_iOS Theme_theme.png",@"bg_Colors_theme.png",@"bg_Party Theme_theme.png",@"bg_Glass_theme.png",@"bg_BirthDay_theme.png",@"bg_Win8 Blue_theme.png",@"bg_Win8 Pink_theme.png",@"bg_Indian Wedding_theme.png",@"bg_Generic Wedding_theme.png",@"bg_Desert_theme.png",@"bg_Black and White_theme.png",nil];
        if ([themeList count] > 0)
        {
        cell.imageView.image = [UIImage imageNamed:[themeImageList objectAtIndex:indexPath.row]];
        [cell.textLabel setText:[themeList objectAtIndex:indexPath.row]];
        cell.textLabel.font = [UIFont systemFontOfSize:15.0];
        cell.textLabel.highlightedTextColor = [UIColor blackColor];
        }
    }
    //---------------------------on Setting Click Display Table View---------------------------//
    if(genTableView.tag == 3)
    {
        settingsList = [NSArray arrayWithObjects:@"Passcode For Sharing on Social Media",@"Password for Locking Albums", nil];
        
        if ([settingsList count] > 0)
        {
            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
            {
                //for iPhone5
                if([[UIScreen mainScreen]bounds].size.height == 568)
                {
                    UIImageView *settingsView = [[UIImageView alloc]initWithFrame:CGRectMake(528, 8, 30, 30)];
                    [settingsView setBackgroundColor:[UIColor clearColor]];
                    settingsView.image = [UIImage imageNamed:@"settings.jpg"];
                    [cell addSubview:settingsView];
                    [cell.textLabel setText:[settingsList objectAtIndex:indexPath.row]];
                    cell.textLabel.font = [UIFont systemFontOfSize:15.0];
                    cell.textLabel.highlightedTextColor = [UIColor blackColor];
                }
                else
                {
                    UIImageView *settingsView = [[UIImageView alloc]initWithFrame:CGRectMake(440, 8, 30, 30)];
                    [settingsView setBackgroundColor:[UIColor clearColor]];
                    settingsView.image = [UIImage imageNamed:@"settings.jpg"];
                    [cell addSubview:settingsView];
                    [cell.textLabel setText:[settingsList objectAtIndex:indexPath.row]];
                    cell.textLabel.font = [UIFont systemFontOfSize:15.0];
                    cell.textLabel.highlightedTextColor = [UIColor blackColor];
                }
            }
            else
            {
                UIImageView *settingsView = [[UIImageView alloc]initWithFrame:CGRectMake(920, 5, 30, 30)];
                [settingsView setBackgroundColor:[UIColor clearColor]];
                settingsView.image = [UIImage imageNamed:@"settings.jpg"];
                [cell addSubview:settingsView];
                [cell.textLabel setText:[settingsList objectAtIndex:indexPath.row]];
                cell.textLabel.font = [UIFont systemFontOfSize:20.0];
                cell.textLabel.highlightedTextColor = [UIColor blackColor];
            }
        }
    }
    //-------------------For Displaying Video List on Video Button Click-----------------//
    if(genTableView.tag == 4)
    {
          UIButton * btn =  [[UIButton alloc]initWithFrame:CGRectMake(0, 0, 100, 50)];
        loadVideo = ((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->videos [indexPath.row];
        loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
        [tableViewVideos addObject:loadVideo];
        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
        {
            ALAssetRepresentation *rep = [myasset defaultRepresentation];
            CGImageRef iref = [rep fullScreenImage];
            temp = [UIImage imageWithCGImage:iref];
            if(iref)
            {
                    [cell.imageView setImage:temp];
                    [videosTableView reloadData];
            }
        };
        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
        {
            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
        };
        
        if(loadVideo && [loadVideo length])
        {
            
            NSURL *asseturl = [NSURL URLWithString:loadVideo];
            ALAssetsLibrary* assetslibrary = [[ALAssetsLibrary alloc] init];
            [assetslibrary assetForURL:asseturl
                           resultBlock:resultblock
                          failureBlock:failureblock];
        }
        [btn addTarget:self action:@selector(btnTapped1:)   forControlEvents:UIControlEventTouchUpInside];
        videoButtonTag = indexPath.row;
        [btn setTag:videoButtonTag];
        [cell.contentView addSubview:btn];
    }
    //--------------------For Audio displaying on Audio Button Click---------------------//
    if(genTableView.tag == 5)
    {
        for(int i = 0;i< [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->audios count];i++)
        {
            NSString *loadAudio = ((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->audios [i];
            tableViewAudios[i] = loadAudio;
        }
        for(int i = 0;i< [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->audioTitle count];i++)
        {
            NSString *loadAudio = ((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->audioTitle[i];
            tableViewAudioTitle[i] = loadAudio;
        }
        UIImage *original = [UIImage imageNamed:@"music.png"];
        [cell.imageView setImage:original];
        [cell.textLabel setText:[tableViewAudioTitle objectAtIndex:indexPath.row]];
        cell.textLabel.font = [UIFont systemFontOfSize:14.0];
    }
    //-------------------for Camera clicked Existing album display on tableView-----------------//
    if(genTableView.tag == 6)
    {
        albumString = [[NSMutableArray alloc]init];
        for(int i=0;i<[finalArray count];i++)
        {
            if([unEditAlbum containsObject:finalArray[i]])
                    continue;
            
            [albumString addObject:finalArray[i]];
                   
        }
        if([albumString count]>0)
        {
            [cell.textLabel setText:[albumString objectAtIndex:indexPath.row]];
            cell.textLabel.font = [UIFont systemFontOfSize:20.0];
            cell.textLabel.highlightedTextColor = [UIColor blackColor];
        }
    }
    
    //-----------------------------for WebLink Display on TableView-----------------------------//
    if(genTableView.tag == 7)
    {
        NSString *loadweb = ((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->webLink[indexPath.row];
        [tableViewWebLink addObject:loadweb];
        [cell.textLabel setText:[tableViewWebLink objectAtIndex:indexPath.row]];
        cell.textLabel.font = [UIFont systemFontOfSize:12.0];
        cell.textLabel.highlightedTextColor = [UIColor blackColor];
    }
    return cell;
}

-(void)tableView:(UITableView *)genTableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    //---------------------------For Change Theme select---------------------------//
    if(genTableView.tag ==2)
    {
        changeThemeString = [themeList objectAtIndex:indexPath.row];
        NSFileManager *filemgr;
        NSString *newDir;
        filemgr =[NSFileManager defaultManager];
        newDir = [NSString stringWithString:longPath];
        NSString *content = [NSString stringWithContentsOfFile:newDir encoding:NSUTF8StringEncoding error:NULL];
        NSRegularExpression *regex = [NSRegularExpression regularExpressionWithPattern:themeName options:NSRegularExpressionCaseInsensitive error:nil];
        NSString *returnString = [regex stringByReplacingMatchesInString:content options:0 range:NSMakeRange(0, [content length]) withTemplate:changeThemeString];
        [returnString writeToFile:newDir atomically:NO encoding:NSUTF8StringEncoding error:NULL];
        [changeThemeTableView removeFromSuperview];
        changeThemeTableView = NULL;
        [viewer setEnabled:NO];
        viewer.title = @"Album";
        tableviewRemove = FALSE;
    }
    //--------------------------For Setting Button Clicked on Tabbar--------------------------//
    if(genTableView.tag == 3)
    {
        setting = TRUE;
        if(indexPath.row ==0)
        {
            settingCode = 0;
            settingsAlert =[[UIAlertView alloc] initWithTitle:nil
                                                      message:@"Passcode For Sharing on Social Media "
                                                     delegate:self
                                            cancelButtonTitle:@"Cancel"
                                            otherButtonTitles:@"Ok",nil];
            settingsAlert.alertViewStyle = UIAlertViewStyleSecureTextInput;
            [settingsAlert show];

        }
        if(indexPath.row ==1)
        {
            settingCode = 1;
            settingsAlert =[[UIAlertView alloc] initWithTitle:nil
                                                                   message:@"Password for locking Albums"
                                                                  delegate:self
                                                         cancelButtonTitle:@"Cancel"
                                                         otherButtonTitles:@"Ok",nil];
            settingsAlert.alertViewStyle = UIAlertViewStyleSecureTextInput;
            [settingsAlert show];
        }
        [settingsTableView removeFromSuperview];
        settingsTableView = nil;
    }
    //--------------------------For Audio select from TableView---------------------------//
    if(genTableView.tag == 5)
    {
        NSString *finalAudio = [tableViewAudios[indexPath.row] description];
        NSURL *url = [[NSURL alloc] initWithString:finalAudio];
        playerItem = [[AVPlayerItem alloc] initWithURL:url];
        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
        [player play];
        audioStop = TRUE;
        tableViewAudios = NULL;
        tableViewAudioTitle = NULL;
        [audiosTableView removeFromSuperview];
        audiosTableView = nil;
    }
    //----------------------------For Camera from Existing Album-----------------------------//
    if(genTableView.tag == 6)
    {
        [cameraAlbumTableView setHidden:YES];
        existingAlbum = TRUE;
        albumExists = [albumString [indexPath.row] description];
        NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
        NSString *documentsDirectory = [paths objectAtIndex:0];
        NSString *userCreated =[ documentsDirectory stringByAppendingString: @"/User"];
        NSString *yourDirPath = [userCreated stringByAppendingPathComponent:albumExists];
        NSFileManager *fileManager = [NSFileManager defaultManager];
        
        BOOL isDir = YES;
        BOOL isDirExists = [fileManager fileExistsAtPath:yourDirPath isDirectory:&isDir];
        if (!isDirExists) [fileManager createDirectoryAtPath:yourDirPath withIntermediateDirectories:YES attributes:nil error:nil];
        
        //putting XML File Into The User Created Directory
        CamerafinalPath = [yourDirPath stringByAppendingPathComponent:@"Pronto.xml"];
        NSError *error;
        if (![[NSFileManager defaultManager] fileExistsAtPath:yourDirPath])
        {
            [[NSFileManager defaultManager] createFileAtPath:yourDirPath contents:nil attributes:nil];
            
            [CamerafinalPath writeToFile:yourDirPath atomically:YES encoding:NSUTF8StringEncoding error:&error];
            
        }
        xmlParser = [[XMLParser alloc] loadXML:CamerafinalPath];
        themeName = [NSString stringWithString:((Album *) xmlParser->albumname[0])->themeName];
        existingPageCount =[xmlParser->albumname count];
        test = [[testClasViewController alloc] init];
        test.pageCollection = [[NSMutableArray alloc]init];
        for(int i=0;i<existingPageCount;i++)
        {
            page = [[pagesViewController alloc] init];
            page->layoutused = ((Album *) xmlParser->albumname[i])->layOut;
            page->imageURL = [[NSMutableArray alloc]init];
            page->extraImage = [[NSMutableArray alloc]init];
            page->videoArray = [[NSMutableArray alloc]init];
            page->musicArray = [[NSMutableArray alloc]init];
            page->finalMusicTitle = [[NSMutableArray alloc]init];
            switch (page->layoutused)
            {
                case 1:
                    
                    //Store Main Images
                    [page->imageURL addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[0]];
                    
                    //Store Extra Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                    {
                        [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                    }
                    //Store Extra Videos
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                    {
                        [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                    }
                    //Store Extra Audios
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                    {
                        [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                    }
                    //Store Extra Audios Title
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                    {
                        [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                    }
                    [test.pageCollection addObject:page];
                    break;
                    
                case 2:
                    
                    //Store Main Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                    {
                        [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                    }
                    //Store Extra Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                    {
                        [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                    }
                    //Store Extra Videos
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                    {
                        [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                    }
                    //Store Extra Audios
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                    {
                        [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                    }
                    //Store Extra Audios Title
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                    {
                        [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                    }
                    
                    [test.pageCollection addObject:page];
                    
                    break;
                    
                case 3:
                    
                    //Store Main Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                    {
                        [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                    }
                    //Store Extra Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                    {
                        [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                    }
                    //Store Extra Videos
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                    {
                        [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                    }
                    //Store Extra Audios
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                    {
                        [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                    }
                    //Store Extra Audios Title
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                    {
                        [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                    }
                    
                    [test.pageCollection addObject:page];
                    
                    break;
                    
                case 4:
                    
                    //Store Main Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                    {
                        [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                    }
                    //Store Extra Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                    {
                        [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                    }
                    //Store Extra Videos
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                    {
                        [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                    }
                    //Store Extra Audios
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                    {
                        [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                    }
                    //Store Extra Audios Title
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                    {
                        [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                    }
                    
                    [test.pageCollection addObject:page];
                    break;
                    
                case 9:
                    
                    //Store Main Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                    {
                        [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                    }
                    //Store Extra Images
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                    {
                        [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                    }
                    //Store Extra Videos
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                    {
                        [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                    }
                    //Store Extra Audios
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                    {
                        [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                    }
                    //Store Extra Audios Title
                    for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                    {
                        [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                    }
                    
                    [test.pageCollection addObject:page];
                    
                    break;
                default:
                    break;
            }
        }
        albumString = NULL;
        [cameraAlbumTableView removeFromSuperview];
        cameraAlbumTableView = nil;
        cameraImageURL = [[NSMutableArray alloc] init];
        [self takePicture];
    }
        //--------------------------for WebLInk clicked on tableview----------------------------//
    if(genTableView.tag == 7)
    {
        extraWebLInk = TRUE;
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                if(oneView)
                {
                    oneView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                    oneView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(twoView)
                {
                    twoView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                    twoView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(threeView)
                {
                    threeView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                    threeView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(fourView)
                {
                    fourView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                    fourView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(nineView)
                {
                    nineView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                    nineView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else
                {
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                    detailViewController->videoExtraWebLink = TRUE;
                    detailViewController->videoAlbumExtraImageString = [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }

            }
            else
            {
                if(oneView)
                {
                    oneView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                    oneView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(twoView)
                {
                    twoView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                    twoView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(threeView)
                {
                    threeView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                    threeView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(fourView)
                {
                    fourView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                    fourView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else if(nineView)
                {
                    nineView->webLink = TRUE;
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                    nineView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }
                else
                {
                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                    detailViewController->videoExtraWebLink = TRUE;
                    detailViewController->videoAlbumExtraImageString = [tableViewWebLink objectAtIndex:indexPath.row];
                    [self presentPopupViewController:detailViewController animationType:nil];
                    [webLinkTableVIew removeFromSuperview];
                    webLinkTableVIew = nil;
                    tableViewWebLink = NULL;
                }

            }
        }
        else
        {
            if(oneView)
            {
                oneView->webLink = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                oneView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                [self presentPopupViewController:detailViewController animationType:nil];
                [webLinkTableVIew removeFromSuperview];
                webLinkTableVIew = nil;
                tableViewWebLink = NULL;
            }
            else if(twoView)
            {
                twoView->webLink = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                twoView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                [self presentPopupViewController:detailViewController animationType:nil];
                [webLinkTableVIew removeFromSuperview];
                webLinkTableVIew = nil;
                tableViewWebLink = NULL;
            }
            else if(threeView)
            {
                threeView->webLink = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                threeView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                [self presentPopupViewController:detailViewController animationType:nil];
                [webLinkTableVIew removeFromSuperview];
                webLinkTableVIew = nil;
                tableViewWebLink = NULL;
            }
            else if(fourView)
            {
                fourView->webLink = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                fourView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                [self presentPopupViewController:detailViewController animationType:nil];
                [webLinkTableVIew removeFromSuperview];
                webLinkTableVIew = nil;
                tableViewWebLink = NULL;
            }
            else if(nineView)
            {
                nineView->webLink = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                nineView->webString= [tableViewWebLink objectAtIndex:indexPath.row];
                [self presentPopupViewController:detailViewController animationType:nil];
                [webLinkTableVIew removeFromSuperview];
                webLinkTableVIew = nil;
                tableViewWebLink = NULL;
            }
            else
            {
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                detailViewController->videoExtraWebLink = TRUE;
                detailViewController->videoAlbumExtraImageString = [tableViewWebLink objectAtIndex:indexPath.row];
                [self presentPopupViewController:detailViewController animationType:nil];
                [webLinkTableVIew removeFromSuperview];
                webLinkTableVIew = nil;
                tableViewWebLink = NULL;
            }
        }
    }
}

//FOR DISPLAYING EXTRA IMAGE
- (void)btnTapped:(id) sender
{
    UIButton *btn = (UIButton *)sender;
    int indexrow = btn.tag;
    extraImage = TRUE;
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            if(oneView)
            {
                oneView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                oneView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            
            else if (twoView)
            {
                twoView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                twoView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else if(threeView)
            {
                threeView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                threeView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else if (fourView)
            {
                fourView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                fourView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else if(nineView)
            {
                nineView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                nineView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else
            {
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                detailViewController->videoExtraImage = TRUE;
                detailViewController->videoAlbumExtraImageString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }

        }
        else
        {
            if(oneView)
            {
                oneView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                oneView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            
            else if (twoView)
            {
                twoView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                twoView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else if(threeView)
            {
                threeView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                threeView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else if (fourView)
            {
                fourView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                fourView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else if(nineView)
            {
                nineView->showExtraImage = TRUE;
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                nineView->extraString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }
            else
            {
                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                detailViewController->videoExtraImage = TRUE;
                detailViewController->videoAlbumExtraImageString = [tableViewImages[indexrow] description];
                [self presentPopupViewController:detailViewController animationType:nil];
                [extraImageTableView removeFromSuperview];
                extraImageTableView = nil;
                tableViewImages = NULL;
            }

        }
    }
    else
    {
        if(oneView)
        {
            oneView->extraString = [tableViewImages[indexrow] description];
            oneView->showExtraImage = TRUE;
            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
            [self presentPopupViewController:detailViewController animationType:nil];
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        else if (twoView)
        {
            twoView->extraString = [tableViewImages[indexrow] description];
            twoView->showExtraImage = TRUE;
            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
            [self presentPopupViewController:detailViewController animationType:nil];
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        else if(threeView)
        {
            threeView->extraString = [tableViewImages[indexrow] description];
            threeView->showExtraImage = TRUE;
            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
            [self presentPopupViewController:detailViewController animationType:nil];
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        else if (fourView)
        {
            fourView->extraString = [tableViewImages[indexrow] description];
            fourView->showExtraImage = TRUE;
            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
            [self presentPopupViewController:detailViewController animationType:nil];
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        else if(nineView)
        {
            nineView->extraString = [tableViewImages[indexrow] description];
            nineView->showExtraImage = TRUE;
            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
            [self presentPopupViewController:detailViewController animationType:nil];
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        else
        {
            DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
            detailViewController->videoExtraImage = TRUE;
            detailViewController->videoAlbumExtraImageString = [tableViewImages[indexrow] description];
            [self presentPopupViewController:detailViewController animationType:nil];
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
    }
}
// FOR PLAYING EXTRA VIDEO

- (void)btnTapped1:(id)sender
{
    UIButton *btn = (UIButton *)sender;
    int indexrow = btn.tag;
    extraVideo = TRUE;
    NSString *finalVideo = [tableViewVideos[indexrow] description];
    
    //for error MEssage to remove initialize this
    UIGraphicsBeginImageContext(CGSizeMake(1,1));
    
    moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:finalVideo]];
    //for dealoc this
    UIGraphicsEndImageContext();
    [moviePlayerVC.moviePlayer prepareToPlay];
    [moviePlayerVC.view setFrame: newView.bounds];
    [newView addSubview: moviePlayerVC.view];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(MPMoviePlayerDidExitFullscreen:) name:MPMoviePlayerPlaybackDidFinishNotification object:nil];
    [moviePlayerVC.moviePlayer play];
    [videosTableView removeFromSuperview];
    videosTableView = nil;
    tableViewVideos = NULL;
}
- (void)settingsClicked
{
        if(settingCode == 0)
        {
            NSString *sharingPasscode = [[settingsAlert textFieldAtIndex:0]text];
            passcodePref = [NSUserDefaults standardUserDefaults];
            [passcodePref setObject:sharingPasscode forKey:@"Sharing Locking"];
            [passcodePref synchronize];
        }
        if(settingCode == 1)
        {
            NSString *lockingPassword = [[settingsAlert textFieldAtIndex:0]text];
            passcodePref = [NSUserDefaults standardUserDefaults];
            [passcodePref setObject:lockingPassword forKey:@"Album Locking"];
            [passcodePref synchronize];
        }
        
       [settingsAlert dismissWithClickedButtonIndex:0 animated:YES];
        [self settings:nil];
    
    
}

-(void)settingsCancelClicked
{
    [settingsAlert dismissWithClickedButtonIndex:0 animated:YES];
}


- (void)weblinkButton
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalWebLnkButton = @"web_";
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
            UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
            weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            weblinkButton.frame = CGRectMake(528.0, 155, 40.0, 41);
            [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
            if([themeName isEqualToString:@"Glass"])
            {
                [weblinkButton setBackgroundColor:[UIColor blackColor]];
            }
            [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:weblinkButton];
        }
        //upto iPhone4 & iPod4
        else
        {
            finalWebLnkButton = @"web_";
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
            UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
            weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            weblinkButton.frame = CGRectMake(440.0, 155, 40.0, 41);
            [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
            if([themeName isEqualToString:@"Glass"])
            {
                [weblinkButton setBackgroundColor:[UIColor blackColor]];
            }
            [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:weblinkButton];
        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalWebLnkButton = @"web_";
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
            UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
            weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            weblinkButton.frame = CGRectMake(920, 354.2, 104,103.4);
            [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
            [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:weblinkButton];
        }
        else
        {
            finalWebLnkButton = @"web_";
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
            finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_iPad_d.png"];
            UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
            weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            weblinkButton.frame = CGRectMake(920, 354.2, 104,103.4);
            [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
            if([themeName isEqualToString:@"Glass"])
            {
                [weblinkButton setBackgroundColor:[UIColor blackColor]];
            }
            [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:weblinkButton];
        }
        
    }
    
}

- (void)webLinkClicked
{
    if(moviePlayerVC)
    {
        [moviePlayerVC.moviePlayer pause];
    }
    Reachability * reach = [Reachability reachabilityWithHostname:@"www.google.com"];
    
    reach.reachableBlock = ^(Reachability * reachability)
    {
        dispatch_async(dispatch_get_main_queue(), ^{
            if(extraWebLInk)
            {
                if(currentPage == 0)
                    currentPage = currentPage+1;
                
                switch(((Album *) xmlParser->albumname[currentPage-1])->layOut)
                {
                    case 12:
                    {
                        webLinkCount = [((Album *) xmlParser->albumname[currentPage-1])->webLink count];
                        if(webLinkCount == 1)
                        {
                            extraWebLInk = TRUE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                                    detailViewController->videoAlbumExtraImageString = [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    detailViewController->videoExtraWebLink = TRUE;
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                                else
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                                    detailViewController->videoAlbumExtraImageString = [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    detailViewController->videoExtraWebLink = TRUE;
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                            }
                            else
                            {
                                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                                detailViewController->videoAlbumExtraImageString = [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                detailViewController->videoExtraWebLink = TRUE;
                                [self presentPopupViewController:detailViewController animationType:nil];
                            }
                            
                        }
                        else
                        {
                            extraWebLInk = FALSE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(228,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                                else
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(140,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                            }
                            else
                            {
                                tableViewWebLink = [[NSMutableArray alloc]init];
                                webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(620,0,300,20+(60*webLinkCount)) style:UITableViewStyleGrouped];
                                webLinkTableVIew.dataSource = self;
                                webLinkTableVIew.delegate = self;
                                webLinkTableVIew.tag =7;
                                webLinkTableVIew.rowHeight = 60.0f;
                                webLinkTableVIew.scrollEnabled = YES;
                                [webLinkTableVIew setUserInteractionEnabled:YES];
                                [newView  addSubview:webLinkTableVIew];
                            }
                        }
                    }
                        break;

                    case 1:
                    {
                        webLinkCount = [((Album *) xmlParser->albumname[currentPage-1])->webLink count];
                        if(webLinkCount == 1)
                        {
                            oneView->webLink = TRUE;
                            extraWebLInk = TRUE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                                    oneView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                                else
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                                    oneView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                            }
                            else
                            {
                                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                                oneView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                [self presentPopupViewController:detailViewController animationType:nil];
                            }
                            
                        }
                        else
                        {
                            oneView->webLink = TRUE;
                            extraWebLInk = FALSE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(228,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                                else
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(140,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                            }
                            else
                            {
                                tableViewWebLink = [[NSMutableArray alloc]init];
                                webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(620,0,300,20+(60*webLinkCount)) style:UITableViewStyleGrouped];
                                webLinkTableVIew.dataSource = self;
                                webLinkTableVIew.delegate = self;
                                webLinkTableVIew.tag =7;
                                webLinkTableVIew.rowHeight = 60.0f;
                                webLinkTableVIew.scrollEnabled = YES;
                                [webLinkTableVIew setUserInteractionEnabled:YES];
                                [newView  addSubview:webLinkTableVIew];
                            }
                        }
                    }
                        break;
                    case 2:
                    {
                        webLinkCount = [((Album *) xmlParser->albumname[currentPage-1])->webLink count];
                        if(webLinkCount == 1)
                        {
                            twoView->webLink = TRUE;
                            extraWebLInk = TRUE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                                    twoView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                                else
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                                    twoView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                            }
                            else
                            {
                                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                                twoView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                [self presentPopupViewController:detailViewController animationType:nil];
                            }
                            
                        }
                        else
                        {
                            twoView->webLink = TRUE;
                            extraWebLInk = FALSE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(228,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                                else
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(140,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                            }
                            else
                            {
                                tableViewWebLink = [[NSMutableArray alloc]init];
                                webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(620,0,300,20+(60*webLinkCount)) style:UITableViewStyleGrouped];
                                webLinkTableVIew.dataSource = self;
                                webLinkTableVIew.delegate = self;
                                webLinkTableVIew.tag =7;
                                webLinkTableVIew.rowHeight = 60.0f;
                                webLinkTableVIew.scrollEnabled = YES;
                                [webLinkTableVIew setUserInteractionEnabled:YES];
                                [newView  addSubview:webLinkTableVIew];
                            }
                        }
                        
                    }
                        break;
                        
                    case 3:
                    {
                        webLinkCount = [((Album *) xmlParser->albumname[currentPage-1])->webLink count];
                        if(webLinkCount == 1)
                        {
                            threeView->webLink = TRUE;
                            extraWebLInk = TRUE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                                    threeView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                                else
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                                    threeView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                            }
                            else
                            {
                                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                                threeView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                [self presentPopupViewController:detailViewController animationType:nil];
                            }
                            
                        }
                        else
                        {
                            threeView->webLink = TRUE;
                           extraWebLInk = FALSE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(228,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                                else
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(140,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                            }
                            else
                            {
                                tableViewWebLink = [[NSMutableArray alloc]init];
                                webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(620,0,300,20+(60*webLinkCount)) style:UITableViewStyleGrouped];
                                webLinkTableVIew.dataSource = self;
                                webLinkTableVIew.delegate = self;
                                webLinkTableVIew.tag =7;
                                webLinkTableVIew.rowHeight = 60.0f;
                                webLinkTableVIew.scrollEnabled = YES;
                                [webLinkTableVIew setUserInteractionEnabled:YES];
                                [newView  addSubview:webLinkTableVIew];
                            }
                        }
                        
                    }
                        break;
                        
                    case 4:
                    {
                        webLinkCount = [((Album *) xmlParser->albumname[currentPage-1])->webLink count];
                        if(webLinkCount == 1)
                        {
                            fourView->webLink = TRUE;
                            extraWebLInk = TRUE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                                    fourView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                                else
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                                    fourView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                            }
                            else
                            {
                                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                                fourView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                [self presentPopupViewController:detailViewController animationType:nil];
                            }
                            
                        }
                        else
                        {
                            fourView->webLink = TRUE;
                            extraWebLInk = FALSE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(228,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                                else
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(140,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                            }
                            else
                            {
                                tableViewWebLink = [[NSMutableArray alloc]init];
                                webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(620,0,300,20+(60*webLinkCount)) style:UITableViewStyleGrouped];
                                webLinkTableVIew.dataSource = self;
                                webLinkTableVIew.delegate = self;
                                webLinkTableVIew.tag =7;
                                webLinkTableVIew.rowHeight = 60.0f;
                                webLinkTableVIew.scrollEnabled = YES;
                                [webLinkTableVIew setUserInteractionEnabled:YES];
                                [newView  addSubview:webLinkTableVIew];
                            }
                        }
                    }
                        break;
                        
                    case 9:
                    {
                        webLinkCount = [((Album *) xmlParser->albumname[currentPage-1])->webLink count];
                        if(webLinkCount == 1)
                        {
                            nineView->webLink = TRUE;
                            extraWebLInk = TRUE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPhone5" bundle:nil];
                                    nineView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                                else
                                {
                                    DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController" bundle:nil];
                                    nineView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                    [self presentPopupViewController:detailViewController animationType:nil];
                                }
                            }
                            else
                            {
                                DetailViewController *detailViewController = [[DetailViewController alloc] initWithNibName:@"DetailViewController_iPad" bundle:nil];
                                nineView->webString= [NSString stringWithString:((Album *) xmlParser->albumname[currentPage-1])->webLink[0]];
                                [self presentPopupViewController:detailViewController animationType:nil];
                            }
                            
                        }
                        else
                        {
                            nineView->webLink = TRUE;
                            extraWebLInk = FALSE;
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(228,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                                else
                                {
                                    tableViewWebLink = [[NSMutableArray alloc]init];
                                    webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(140,0,300,20+(50*webLinkCount)) style:UITableViewStyleGrouped];
                                    webLinkTableVIew.dataSource = self;
                                    webLinkTableVIew.delegate = self;
                                    webLinkTableVIew.tag =7;
                                    webLinkTableVIew.rowHeight = 50.0f;
                                    webLinkTableVIew.scrollEnabled = YES;
                                    [webLinkTableVIew setAllowsSelection:YES];
                                    [newView addSubview:webLinkTableVIew];
                                }
                            }
                            else
                            {
                                tableViewWebLink = [[NSMutableArray alloc]init];
                                webLinkTableVIew = [[UITableView alloc] initWithFrame:CGRectMake(620,0,300,20+(60*webLinkCount)) style:UITableViewStyleGrouped];
                                webLinkTableVIew.dataSource = self;
                                webLinkTableVIew.delegate = self;
                                webLinkTableVIew.tag =7;
                                webLinkTableVIew.rowHeight = 60.0f;
                                webLinkTableVIew.scrollEnabled = YES;
                                [webLinkTableVIew setUserInteractionEnabled:YES];
                                [newView  addSubview:webLinkTableVIew];
                            }
                        }
                    }
                        break;
                        
                    default:
                        break;
                }
            }
            else
            {
                [webLinkTableVIew removeFromSuperview];
                webLinkTableVIew = nil;
                webLinkTableVIew.tag = 0;
                videosTableView = nil;
                moviePlayerVC = nil;
                tableViewWebLink = NULL;
                extraWebLInk = TRUE;
            }
            });
    };
    
    reach.unreachableBlock = ^(Reachability * reachability)
    {
        dispatch_async(dispatch_get_main_queue(), ^{
            passcodeAlert = [[UIAlertView alloc] initWithTitle:nil
                                                       message:@"No Internet Connection Available"
                                                      delegate:self
                                             cancelButtonTitle:@"Cancel"
                                             otherButtonTitles:nil];
            [passcodeAlert show];
        });
    };
    
    [reach startNotifier];
    
}

- (void)facebookButton
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalFacebookButton = @"share_";
            finalFacebookButton = [finalFacebookButton stringByAppendingString:themeName];
            if(videoInFirstPage)
            {
                finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(528.0, 196, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [fbButton setBackgroundColor:[UIColor blackColor]];
                }
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:@selector(faceBookButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }
            else
            {
                finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(528.0, 196, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [fbButton setBackgroundColor:[UIColor blackColor]];
                }
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }

        }
        else
        {
            finalFacebookButton = @"share_";
            finalFacebookButton = [finalFacebookButton stringByAppendingString:themeName];
            if(videoInFirstPage)
            {
                finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(440.0, 196, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [fbButton setBackgroundColor:[UIColor blackColor]];
                }
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:@selector(faceBookButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }
             //upto iPhone4 & iPod4
            else
            {
                finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(440.0, 196, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [fbButton setBackgroundColor:[UIColor blackColor]];
                }
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }

        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalFacebookButton = @"share_";
            finalFacebookButton = [finalFacebookButton stringByAppendingString:themeName];
            if(videoInFirstPage)
            {
                finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(920, 457.6, 104,103.4);
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:@selector(faceBookButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }
            else
            {
                finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(920, 457.6, 104,103.4);
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }
        }
        else
        {
            finalFacebookButton = @"share_";
            finalFacebookButton = [finalFacebookButton stringByAppendingString:themeName];
            if(videoInFirstPage)
            {
                 finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(920, 457.6, 104,103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [fbButton setBackgroundColor:[UIColor blackColor]];
                }
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:@selector(faceBookButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }
            else
            {
                finalFacebookButton = [finalFacebookButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *fbBtn = [UIImage imageNamed:finalFacebookButton];
                fbButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                fbButton.frame = CGRectMake(920, 457.6, 104,103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [fbButton setBackgroundColor:[UIColor blackColor]];
                }
                [fbButton setBackgroundImage:fbBtn forState:UIControlStateNormal];
                [fbButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:fbButton];
            }
        }
        
    }
    
}
-(void)faceBookButtonClicked
{    
    Reachability * reach = [Reachability reachabilityWithHostname:@"www.google.com"];
    
    reach.reachableBlock = ^(Reachability * reachability)
    {
        dispatch_async(dispatch_get_main_queue(), ^{
            faceBook = TRUE;
            passcodeAlert = [[UIAlertView alloc] initWithTitle:nil
                                                       message:@"please enter passcode for sharing on social media "
                                                      delegate:self
                                             cancelButtonTitle:@"Cancel"
                                             otherButtonTitles:@"Share",nil];
            passcodeAlert.alertViewStyle = UIAlertViewStyleSecureTextInput;
            [passcodeAlert show];
        });
    };
    
    reach.unreachableBlock = ^(Reachability * reachability)
    {
        dispatch_async(dispatch_get_main_queue(), ^{
            passcodeAlert = [[UIAlertView alloc] initWithTitle:nil
                                                       message:@"No Internet Connection Available"
                                                      delegate:self
                                             cancelButtonTitle:@"Cancel"
                                             otherButtonTitles:nil];
            [passcodeAlert show];
        });
    };
    
    [reach startNotifier];
}

-(void)destroyMethod
{

    if(oneView)
    {
        oneView->imageViewOne = nil;
        oneView->touchImageURL = nil;
        oneView->imageView = nil;
        oneView = NULL;
        if(extraImageTableView)
        {
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        if(videosTableView)
        {
            [videosTableView removeFromSuperview];
            videosTableView = nil;
            tableViewVideos = NULL;
        }
        if(audiosTableView)
        {
            [audiosTableView removeFromSuperview];
            audiosTableView = nil;
            tableViewAudios = NULL;
        }
        if(webLinkTableVIew)
        {
            [webLinkTableVIew removeFromSuperview];
            webLinkTableVIew = nil;
            tableViewWebLink = NULL;
        }
        if(moviePlayerVC)
        {
            [moviePlayerVC.moviePlayer stop];
            [moviePlayerVC.view removeFromSuperview];
            moviePlayerVC = nil;
        }  

    }
    else if(twoView)
    {
        twoView->twoimageViewOne =nil;
        twoView->twoimageViewTwo = nil;
        twoView->touchImageURL = nil;
        twoView->imageView = nil;
        twoView = NULL;
        if(extraImageTableView)
        {
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        if(videosTableView)
        {
            [videosTableView removeFromSuperview];
            videosTableView = nil;
            tableViewVideos = NULL;
        }
        if(audiosTableView)
        {
            [audiosTableView removeFromSuperview];
            audiosTableView = nil;
            tableViewAudios = NULL;
        }
        if(webLinkTableVIew)
        {
            [webLinkTableVIew removeFromSuperview];
            webLinkTableVIew = nil;
            tableViewWebLink = NULL;
        }
        if(moviePlayerVC)
        {
            [moviePlayerVC.moviePlayer stop];
            [moviePlayerVC.view removeFromSuperview];
            moviePlayerVC = nil;
        }

    }
    else if(threeView)
    {
        threeView->threeimageViewOne = nil;
        threeView->threeimageViewTwo = nil;
        threeView->threeimageViewThree = nil;
        threeView->touchImageURL = nil;
        threeView->imageView = nil;
        threeView = NULL;
        if(extraImageTableView)
        {
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        if(videosTableView)
        {
            [videosTableView removeFromSuperview];
            videosTableView = nil;
            tableViewVideos = NULL;
        }
        if(audiosTableView)
        {
            [audiosTableView removeFromSuperview];
            audiosTableView = nil;
            tableViewAudios = NULL;
        }
        if(webLinkTableVIew)
        {
            [webLinkTableVIew removeFromSuperview];
            webLinkTableVIew = nil;
            tableViewWebLink = NULL;
        }
        if(moviePlayerVC)
        {
            [moviePlayerVC.moviePlayer stop];
             [moviePlayerVC.view removeFromSuperview];
             moviePlayerVC = nil;
        }

    }
    else if(fourView)
    {
        fourView->fourimageViewOne = nil;
        fourView->fourimageViewTwo = nil;
        fourView->fourimageViewThree = nil;
        fourView->fourimageViewFour = nil;
        fourView->touchImageURL = nil;
        fourView->imageView = nil;
        fourView = NULL;
        if(extraImageTableView)
        {
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        if(videosTableView)
        {
            [videosTableView removeFromSuperview];
            videosTableView = nil;
            tableViewVideos = NULL;
        }
        if(audiosTableView)
        {
            [audiosTableView removeFromSuperview];
            audiosTableView = nil;
            tableViewAudios = NULL;
        }
        if(webLinkTableVIew)
        {
            [webLinkTableVIew removeFromSuperview];
            webLinkTableVIew = nil;
            tableViewWebLink = NULL;
        }
        if(moviePlayerVC)
        {
            [moviePlayerVC.moviePlayer stop];
            [moviePlayerVC.view removeFromSuperview];
            moviePlayerVC = nil;
        }

    }
    else if(nineView)
    {
        nineView->nineimageViewOne = nil;
        nineView->nineimageViewTwo = nil;
        nineView->nineimageViewThree = nil;
        nineView->nineimageViewFour = nil;
        nineView->nineimageViewFive = nil;
        nineView->nineimageViewSix = nil;
        nineView->nineimageViewSeven = nil;
        nineView->nineimageViewEight = nil;
        nineView->nineimageViewNine = nil;
        nineView->touchImageURL = nil;
        nineView->imageView = nil;
        nineView = NULL;
        if(extraImageTableView)
        {
            [extraImageTableView removeFromSuperview];
            extraImageTableView = nil;
            tableViewImages = NULL;
        }
        if(videosTableView)
        {
            [videosTableView removeFromSuperview];
            videosTableView = nil;
            tableViewVideos = NULL;
        }
        if(audiosTableView)
        {
            [audiosTableView removeFromSuperview];
            audiosTableView = nil;
            tableViewAudios = NULL;
        }
        if(webLinkTableVIew)
        {
            [webLinkTableVIew removeFromSuperview];
            webLinkTableVIew = nil;
            tableViewWebLink = NULL;
        }
        if(moviePlayerVC)
        {
            [moviePlayerVC.moviePlayer stop];
            [moviePlayerVC.view removeFromSuperview];
            moviePlayerVC = nil;
        }

    }
    else
    {
        [moviePlayerVC.moviePlayer stop];
        [moviePlayerVC.view removeFromSuperview];
        moviePlayerVC = nil;
    }
}

- (void)nextButton
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalNextButton = @"next_";
            finalNextButton = [finalNextButton stringByAppendingString:themeName];
            finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
            UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
            nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            nextButton.frame = CGRectMake(528.0, 278, 40, 42);
            if([themeName isEqualToString:@"Glass"])
            {
                [nextButton setBackgroundColor:[UIColor blackColor]];
            }
            [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
            [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:nextButton];
        }
        //upto iPhone4 & iPod4
        else
        {
            finalNextButton = @"next_";
            finalNextButton = [finalNextButton stringByAppendingString:themeName];
            finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
            UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
            nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            nextButton.frame = CGRectMake(440.0, 278, 40, 42);
            if([themeName isEqualToString:@"Glass"])
            {
                [nextButton setBackgroundColor:[UIColor blackColor]];
            }
            [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
            [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:nextButton];
        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalNextButton = @"next_";
            finalNextButton = [finalNextButton stringByAppendingString:themeName];
            finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
            UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
            nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            nextButton.frame = CGRectMake(920, 664.4, 104,103.6);
            [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
            [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:nextButton];
        }
        else
        {
            finalNextButton = @"next_";
            finalNextButton = [finalNextButton stringByAppendingString:themeName];
            finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_n.png"];
            UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
            nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            nextButton.frame = CGRectMake(920, 664.4, 104,103.6);
            if([themeName isEqualToString:@"Glass"])
            {
                [nextButton setBackgroundColor:[UIColor blackColor]];
            }
            [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
            [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:nextButton];
        }
        
    }

}
-(void)loadNextAnimation
{
    //---------------------For animation----------------------------------//UIViewAnimationCurveLinear
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDuration:0.50];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationTransition:UIViewAnimationOptionTransitionNone forView:newView cache:YES];
    [newView removeFromSuperview];
    [UIView commitAnimations];
    //------------------------------------------------------------------//
}

//for Next and Left Swipe method
-(void)repeatNext
{
    [self destroyThumbSlider];
    CGFloat scaleSize = 0.2f;
    switch(((Album *) xmlParser->albumname[currentPage])->layOut)
    {
        case 12:
        {
            [self destroyMethod];
            videoInFirstPage = TRUE;
            [self facebookButton];
            [moviePlayerVC.moviePlayer.view removeFromSuperview];
            
            loadVideo = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[0];
            if(loadVideo == NULL)
            {
                [self defaultImage];
                UIImageView *finalImageView = [[UIImageView alloc] init];
                //for Iphone
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5 & iPod5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        finalImageView.frame = CGRectMake(10, 10, 508, 268);
                        CGFloat scaleSize = 0.2f;
                        oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone5" bundle:nil];
                        [UIView commitAnimations];
                        
                        UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                                  scale:scaleSize
                                                            orientation:imagePath.imageOrientation];
                        
                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                        [self.view addSubview:newView];
                        [newView addSubview:oneView.view];
                        if([themeName isEqualToString:@"iOS Theme"])
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        else
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            
                        }
                        [oneView->imageViewOne addSubview:finalImageView];
                        finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                        [finalImageView setImage:smallImage];
                        //[finalImageView addSubview:overlayView];
                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                        {
                            CGFloat constrainedSize = 265.0f;
                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                            
                            commentLabel = [[UILabel alloc]init];
                            commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                            
                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                            [commentLabel setTextColor:[UIColor whiteColor]];
                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                            [oneView.view addSubview:commentLabel];
                        }
                        finalImageView = nil;
                        smallImage = nil;
                        commentLabel = NULL;
                    }
                    //upto iPhone4 & iPod4
                    else
                    {
                        finalImageView.frame = CGRectMake(10, 10, 420, 268);
                        CGFloat scaleSize = 0.2f;
                        oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone" bundle:nil];
                        [UIView commitAnimations];
                        
                        UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                                  scale:scaleSize
                                                            orientation:imagePath.imageOrientation];
                        
                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                        [self.view addSubview:newView];
                        [newView addSubview:oneView.view];
                        if([themeName isEqualToString:@"iOS Theme"])
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        else
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            
                        }
                        [oneView->imageViewOne addSubview:finalImageView];
                        finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                        [finalImageView setImage:smallImage];
                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                        {
                            CGFloat constrainedSize = 265.0f;
                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                            
                            commentLabel = [[UILabel alloc]init];
                            commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                            
                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                            [commentLabel setTextColor:[UIColor whiteColor]];
                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                            [oneView.view addSubview:commentLabel];
                        }
                        finalImageView = nil;
                        smallImage = nil;
                        commentLabel = NULL;
                    }
                    
                }
                else
                {
                    finalImageView.frame = CGRectMake(10, 10, 900, 704);
                    CGFloat scaleSize = 0.2f;
                    oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_ipad" bundle:nil];
                    
                    [UIView commitAnimations];
                    
                    UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                              scale:scaleSize
                                                        orientation:imagePath.imageOrientation];
                    
                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                    [self.view addSubview:newView];
                    [newView addSubview:oneView.view];
                    if([themeName isEqualToString:@"iOS Theme"])
                    {
                        backGroundTheme = @"bg_";
                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                    }
                    else
                    {
                        backGroundTheme = @"bg_";
                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme.png"];
                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        
                    }
                    [oneView->imageViewOne addSubview:finalImageView];
                    finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                    [finalImageView setImage:smallImage];
                    
                    if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                    {
                        CGFloat constrainedSize = 265.0f;
                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                        
                        commentLabel = [[UILabel alloc]init];
                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                        
                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                        [commentLabel setTextColor:[UIColor whiteColor]];
                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                        [oneView.view addSubview:commentLabel];
                    }
                    finalImageView = nil;
                    smallImage = nil;
                    commentLabel = NULL;
                }

            }
            else
            {
                loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                //for error MEssage to remove initialize this
                UIGraphicsBeginImageContext(CGSizeMake(1,1));
                moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                UIGraphicsEndImageContext();
                [moviePlayerVC.moviePlayer prepareToPlay];
                if([albumName isEqualToString:@"VideoAlbum"])
                {
                    [self.view addSubview:newView];
                }
                [moviePlayerVC.view setFrame: newView.bounds];
                [newView addSubview: moviePlayerVC.view];
                [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(movieFinishedCallback:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                [moviePlayerVC.moviePlayer play];
                videoShow = TRUE;

            }
            previousPage = currentPage;
            currentPage = currentPage+1;
            [self checkNextExtraitem];
            break;
        }
        case 1:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            [moviePlayerVC.moviePlayer.view removeFromSuperview];
            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[0];
            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
            {
                if(myasset == NULL)
                {
                    [self defaultImage];
                }
                CGImageRef iref;
                if(myasset == NULL)
                    iref = [imagePath CGImage];
                else
                {
                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                    iref = [rep fullScreenImage];
                    
                }
                if (iref)
                {
                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                    {
                        //for iPhone5
                        if([[UIScreen mainScreen]bounds].size.height == 568)
                        {
                            UIImageView *finalImageView = [[UIImageView alloc] init];
                            finalImageView.frame = CGRectMake(10, 10, 508, 268);
                            oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone5" bundle:nil];
                            //---------------------For animation----------------------------------//
                            [self loadNextAnimation];
                            //------------------------------------------------------------------//
                            temp = [UIImage imageWithCGImage:iref];
                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                      scale:scaleSize
                                                                orientation:temp.imageOrientation];
                            [self.view addSubview:newView];
                            [newView addSubview:oneView.view];
                            oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                            if([themeName isEqualToString:@"iOS Theme"])
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            else
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                            finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                            [oneView->imageViewOne addSubview:finalImageView];
                            [finalImageView setImage: smallImage];
                            //Setting Comment
                            if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                            {
                                CGFloat constrainedSize = 265.0f;
                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                commentLabel = [[UILabel alloc]init];
                                commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                [commentLabel setTextColor:[UIColor whiteColor]];
                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                [oneView.view addSubview:commentLabel];
                            }
                            finalImageView = nil;
                            smallImage = nil;
                            commentLabel = NULL;

                        }
                        else
                        {
                            UIImageView *finalImageView = [[UIImageView alloc] init];
                            finalImageView.frame = CGRectMake(10, 10, 420, 268);
                            oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone" bundle:nil];
                            //---------------------For animation----------------------------------//
                            [self loadNextAnimation];
                            //------------------------------------------------------------------//
                            temp = [UIImage imageWithCGImage:iref];
                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                      scale:scaleSize
                                                                orientation:temp.imageOrientation];
                            [self.view addSubview:newView];
                            [newView addSubview:oneView.view];
                            oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                            if([themeName isEqualToString:@"iOS Theme"])
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            else
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                            finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                            [oneView->imageViewOne addSubview:finalImageView];
                            [finalImageView setImage: smallImage];
                            //Setting Comment
                            if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                            {
                                CGFloat constrainedSize = 265.0f;
                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                commentLabel = [[UILabel alloc]init];
                                commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                [commentLabel setTextColor:[UIColor whiteColor]];
                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                [oneView.view addSubview:commentLabel];
                            }
                            finalImageView = nil;
                            smallImage = nil;
                            commentLabel = NULL;

                        }
                    }
                    else
                    {
                        oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_ipad" bundle:nil];
                        //---------------------For animation----------------------------------//
                         [self loadNextAnimation];
                        //------------------------------------------------------------------//
                        temp = [UIImage imageWithCGImage:iref];
                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                  scale:scaleSize
                                                            orientation:temp.imageOrientation];
                        [self.view addSubview:newView];
                        [newView addSubview:oneView.view];
                        oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                        if([themeName isEqualToString:@"iOS Theme"])
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        else
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }

                        UIImageView *finalImageView = [[UIImageView alloc] init];
                        finalImageView.frame = CGRectMake(10, 10, 900, 704);
                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                        finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                        [oneView->imageViewOne addSubview:finalImageView];
                        [finalImageView setImage: smallImage];
                        //Setting Comment
                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                        {
                            CGFloat constrainedSize = 265.0f;
                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                            commentLabel = [[UILabel alloc]init];
                            commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                            [commentLabel setTextColor:[UIColor whiteColor]];
                            [commentLabel setFont:[UIFont systemFontOfSize:16]];
                            [oneView.view addSubview:commentLabel];
                        }
                        finalImageView = nil;
                        smallImage = nil;
                        commentLabel = NULL;
                    }
                    
                }
            };
            
            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
            {
                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
            };
            
            
            if(loadImage && [loadImage length])
            {
                
                NSURL *asseturl = [NSURL URLWithString:loadImage];
                [assetsLibrary assetForURL:asseturl
                               resultBlock:resultblock
                              failureBlock:failureblock];
            }
            
            previousPage = currentPage;
            currentPage = currentPage+1;
            [self checkNextExtraitem];
            break;
        }
            
        case 2:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<2;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                        twoFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                        twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                        [twoFinalImageOne setImage: smallImage];
                                        twoFinalImageOne = nil;
                                        smallImage = nil;
                                        

                                    }
                                    else
                                    {
                                        twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                        twoFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                        twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                        [twoFinalImageOne setImage: smallImage];
                                        twoFinalImageOne = nil;
                                        smallImage = nil;
                                        

                                    }
                                }
                                else
                                {
                                    twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                      [self loadNextAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:twoView.view];
                                    [twoView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    
                                    //for Padding Image View
                                    UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                    twoFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                    twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                    [twoFinalImageOne setImage: smallImage];
                                    twoFinalImageOne = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                        twoFinalImageTwo.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                        twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                        [twoFinalImageTwo setImage: smallImage];
                                        twoFinalImageTwo = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [twoView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                        twoFinalImageTwo.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                        twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                        [twoFinalImageTwo setImage: smallImage];
                                        twoFinalImageTwo = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [twoView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:twoView.view];
                                    [twoView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    //for Padding Image View
                                    UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                    twoFinalImageTwo.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                    twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                    [twoFinalImageTwo setImage: smallImage];
                                    twoFinalImageTwo = nil;
                                    smallImage = nil;
                                    
                                    //for Setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [twoView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }
            
        case 3:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<3;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                        threeFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                        threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                        [threeFinalImageOne setImage: smallImage];
                                        threeFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                        threeFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                        threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                        [threeFinalImageOne setImage: smallImage];
                                        threeFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                    [self loadNextAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                    threeFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                    threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                    [threeFinalImageOne setImage: smallImage];
                                    threeFinalImageOne = nil;
                                    smallImage = nil;

                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                        threeFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                        threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                        [threeFinalImageTwo setImage: smallImage];
                                        threeFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                        threeFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                        threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                        [threeFinalImageTwo setImage: smallImage];
                                        threeFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                    threeFinalImageTwo.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                    threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                    [threeFinalImageTwo setImage: smallImage];
                                    threeFinalImageTwo = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                        threeFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                        threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                        [threeFinalImageThree setImage: smallImage];
                                        threeFinalImageThree = nil;
                                        smallImage = nil;
                                        
                                        //for setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [threeView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                        threeFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                        threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                        [threeFinalImageThree setImage: smallImage];
                                        threeFinalImageThree = nil;
                                        smallImage = nil;
                                        
                                        //for setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [threeView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                }
                                else
                                {
                                    
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                    threeFinalImageThree.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                    threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                    [threeFinalImageThree setImage: smallImage];
                                    threeFinalImageThree = nil;
                                    smallImage = nil;
                                    
                                    //for setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [threeView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }
            
        case 4:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<4;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        fourView= [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                        fourFinalImageOne.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                        fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                        [fourFinalImageOne setImage: smallImage];
                                        fourFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        fourView= [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                        fourFinalImageOne.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                        fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                        [fourFinalImageOne setImage: smallImage];
                                        fourFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    fourView= [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                    [self loadNextAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                    fourFinalImageOne.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                    fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                    [fourFinalImageOne setImage: smallImage];
                                    fourFinalImageOne = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                        fourFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                        fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                        [fourFinalImageTwo setImage: smallImage];
                                        fourFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                        fourFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                        fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                        [fourFinalImageTwo setImage: smallImage];
                                        fourFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                    fourFinalImageTwo.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                    fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                    [fourFinalImageTwo setImage: smallImage];
                                    fourFinalImageTwo = nil;
                                    smallImage = nil;
                               }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                        fourFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                        fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                        [fourFinalImageThree setImage: smallImage];
                                        fourFinalImageThree = nil;
                                        smallImage = nil;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                        fourFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                        fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                        [fourFinalImageThree setImage: smallImage];
                                        fourFinalImageThree = nil;
                                        smallImage = nil;

                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                    fourFinalImageThree.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                    fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                    [fourFinalImageThree setImage: smallImage];
                                    fourFinalImageThree = nil;
                                    smallImage = nil;

                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                        
                    case 3:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString: themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                        fourFinalImageFour.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                        fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                        [fourFinalImageFour setImage: smallImage];
                                        fourFinalImageFour = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [fourView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString: themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                        fourFinalImageFour.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                        fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                        [fourFinalImageFour setImage: smallImage];
                                        fourFinalImageFour = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [fourView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString: themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                    fourFinalImageFour.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                    fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                    [fourFinalImageFour setImage: smallImage];
                                    fourFinalImageFour = nil;
                                    smallImage = nil;
                                    
                                    //for Setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [fourView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
                
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }
            
        case 9:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<9;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                        nineFinalImageOne.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                        nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                        [nineFinalImageOne setImage: smallImage];
                                        nineFinalImageOne = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [nineView.view addSubview:commentLabel];
                                        }
                                    }
                                    else
                                    {
                                        nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadNextAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                        nineFinalImageOne.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                        nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                        [nineFinalImageOne setImage: smallImage];
                                        nineFinalImageOne = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [nineView.view addSubview:commentLabel];
                                        }
                                    }
                                }
                                else
                                {
                                    nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                    [self loadNextAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                        nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                    nineFinalImageOne.frame = CGRectMake(3, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                    nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                    [nineFinalImageOne setImage: smallImage];
                                    nineFinalImageOne = nil;
                                    smallImage = nil;
                                    
                                    //for Setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [nineView.view addSubview:commentLabel];
                                    }
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                        nineFinalImageTwo.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                        nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                        [nineFinalImageTwo setImage: smallImage];
                                        nineFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                        nineFinalImageTwo.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                        nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                        [nineFinalImageTwo setImage: smallImage];
                                        nineFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                    nineFinalImageTwo.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                    nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                    [nineFinalImageTwo setImage: smallImage];
                                    nineFinalImageTwo = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                        nineFinalImageThree.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                        nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                        [nineFinalImageThree setImage: smallImage];
                                        nineFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                        nineFinalImageThree.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                        nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                        [nineFinalImageThree setImage: smallImage];
                                        nineFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                    nineFinalImageThree.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                    nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                    [nineFinalImageThree setImage: smallImage];
                                    nineFinalImageThree = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 3:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                        nineFinalImageFour.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                        nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                        [nineFinalImageFour setImage: smallImage];
                                        nineFinalImageFour = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                        nineFinalImageFour.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                        nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                        [nineFinalImageFour setImage: smallImage];
                                        nineFinalImageFour = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                        nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                    nineFinalImageFour.frame = CGRectMake(3, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                    nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                    [nineFinalImageFour setImage: smallImage];
                                    nineFinalImageFour = nil;
                                    smallImage = nil;

                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 4:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                        nineFinalImageFive.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                        nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                        [nineFinalImageFive setImage: smallImage];
                                        nineFinalImageFive = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                        nineFinalImageFive.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                        nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                        [nineFinalImageFive setImage: smallImage];
                                        nineFinalImageFive = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                    nineFinalImageFive.frame = CGRectMake(4 , 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                    nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                    [nineFinalImageFive setImage: smallImage];
                                    nineFinalImageFive = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 5:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                        nineFinalImageSix.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                        nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                        [nineFinalImageSix setImage: smallImage];
                                        nineFinalImageSix = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                        nineFinalImageSix.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                        nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                        [nineFinalImageSix setImage: smallImage];
                                        nineFinalImageSix = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                    nineFinalImageSix.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                    nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                    [nineFinalImageSix setImage: smallImage];
                                    nineFinalImageSix = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 6:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                        nineFinalImageSeven.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                        nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                        [nineFinalImageSeven setImage: smallImage];
                                        nineFinalImageSeven = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                        nineFinalImageSeven.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                        nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                        [nineFinalImageSeven setImage: smallImage];
                                        nineFinalImageSeven = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme5.png"];
                                        nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                    nineFinalImageSeven.frame = CGRectMake(3, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                    nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                    [nineFinalImageSeven setImage: smallImage];
                                    nineFinalImageSeven = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                        
                    case 7:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                        nineFinalImageEight.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                        nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                        [nineFinalImageEight setImage: smallImage];
                                        nineFinalImageEight = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                        nineFinalImageEight.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                        nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                        [nineFinalImageEight setImage: smallImage];
                                        nineFinalImageEight = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                        nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                    nineFinalImageEight.frame = CGRectMake(4, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                    nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                    [nineFinalImageEight setImage: smallImage];
                                    nineFinalImageEight = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 8:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                        nineFinalImageNine.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                        nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                        [nineFinalImageNine setImage: smallImage];
                                        commentLabel = NULL;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                        nineFinalImageNine.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                        nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                        [nineFinalImageNine setImage: smallImage];
                                        commentLabel = NULL;

                                    }
                                        
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                        nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                    nineFinalImageNine.frame = CGRectMake(4, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                    nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                    [nineFinalImageNine setImage: smallImage];
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
                
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }
            
        default:
            break;
    }

}
- (void)nextButtonClicked
{
    if(videoInFirstPage)
    {
        videoInFirstPage = FALSE;
        [self facebookButton];
    }
    [player pause];
    extraImage = TRUE;
    extraVideo = TRUE;
    extraWebLInk = TRUE;
    int pageCount =[ xmlParser->albumname count];
    if(currentPage == pageCount-1)
    {
        [oneFingerSwipeLeft setEnabled:NO];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104.0, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];

            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104.0, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];

            }
        }
    }
    if((currentPage == 0) && (currentPage<pageCount-1))
        currentPage =currentPage+1;
    
    [oneFingerSwipeRight setEnabled:YES];
    
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920, 561, 104, 103.4);
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920, 561, 104, 103.4);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        
    }
    
    if((pageCount>=1)&&(previousPage<=currentPage))
    {
        audiosCount = [((Album *) xmlParser->albumname[currentPage])->audios count];
        if (audiosCount == 1)
        {
            
            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage])->audios[0];
            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
            playerItem = [[AVPlayerItem alloc] initWithURL:url];
            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
            [player play];
            audioStop = TRUE;
        }
        [self repeatNext];
    }
    if((pageCount==currentPage)&&(previousPage==currentPage-1))
    {
        [oneFingerSwipeLeft setEnabled:NO];
        [oneFingerSwipeRight setEnabled:YES];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
        
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            
        }
    }
    
}


- (void)oneFingerSwipeLeft:(UITapGestureRecognizer *)recognizer
{
    if(videoInFirstPage)
    {
        videoInFirstPage = FALSE;
        [self facebookButton];
    }
    extraImage = TRUE;
    extraVideo = TRUE;
    extraWebLInk = TRUE;
    [player pause];
    
    // Insert your own code to handle swipe left
    int pageCount =[ xmlParser->albumname count] ;
    if(currentPage==pageCount-1)
    {
        [oneFingerSwipeRight setEnabled:YES];
        [oneFingerSwipeLeft setEnabled:NO];
        
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];

            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];

            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        
        
    }
    
    if((currentPage == 0)&&(currentPage<pageCount-1))
        
        currentPage =currentPage+1;
    
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920, 561, 104, 103.4);
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_n.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920, 561, 104, 103.4);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        
    }
    audiosCount = [((Album *) xmlParser->albumname[currentPage])->audios count];
    if (audiosCount == 1)
    {
        
        NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage])->audios[0];
        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
        playerItem = [[AVPlayerItem alloc] initWithURL:url];
        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
        [player play];
        audioStop = TRUE;
    }
    //calling method repeatedly
    [self repeatNext];
    if((pageCount==currentPage)&&(previousPage==currentPage-1))
    {
        [oneFingerSwipeLeft setEnabled:NO];
        [oneFingerSwipeRight setEnabled:YES];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278,40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278,40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            
        }

    }
    
}

//Previous and Right Swipe Method below
- (void)prevButton
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        //upto iPhone4 & iPod4
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920, 561, 104,103.4);
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920, 561, 104,103.4);
            if([themeName isEqualToString:@"Glass"])
            {
                [prevButton setBackgroundColor:[UIColor blackColor]];
            }
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
    }
}

-(void)loadPreviousAnimation
{
    //---------------------For animation----------------------------------//UIViewAnimationTransitionCurlDown
    [UIView beginAnimations:nil context:nil];
    [UIView setAnimationBeginsFromCurrentState:YES];
    [UIView setAnimationDuration:0.50];
    [UIView setAnimationDelegate:self];
    [UIView setAnimationTransition:UIViewAnimationOptionTransitionNone forView:newView cache:YES];
    [newView removeFromSuperview];
    [UIView commitAnimations];
    //------------------------------------------------------------------//
}
//For Previous and Right Swipe Method
-(void)repeatPrevious
{
    [self destroyThumbSlider];
    CGFloat scaleSize = 0.2f;
    switch(((Album *) xmlParser->albumname[previousPage-1])->layOut)
    {
        case 12:
        {
            [self destroyMethod];
            videoInFirstPage = TRUE;
             [self facebookButton];
            [newView.layer removeAllAnimations];
            [moviePlayerVC.moviePlayer.view removeFromSuperview];
            loadVideo = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[0];
            if(loadVideo == NULL)
            {
                [self defaultImage];
                UIImageView *finalImageView = [[UIImageView alloc] init];
                //for Iphone
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5 & iPod5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        finalImageView.frame = CGRectMake(10, 10, 508, 268);
                        CGFloat scaleSize = 0.2f;
                        oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone5" bundle:nil];
                        [UIView commitAnimations];
                        
                        UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                                  scale:scaleSize
                                                            orientation:imagePath.imageOrientation];
                        
                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                        [self.view addSubview:newView];
                        [newView addSubview:oneView.view];
                        if([themeName isEqualToString:@"iOS Theme"])
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        else
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            
                        }
                        [oneView->imageViewOne addSubview:finalImageView];
                        finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                        [finalImageView setImage:smallImage];
                        //[finalImageView addSubview:overlayView];
                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                        {
                            CGFloat constrainedSize = 265.0f;
                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                            
                            commentLabel = [[UILabel alloc]init];
                            commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                            
                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                            [commentLabel setTextColor:[UIColor whiteColor]];
                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                            [oneView.view addSubview:commentLabel];
                        }
                        finalImageView = nil;
                        smallImage = nil;
                        commentLabel = NULL;
                    }
                    //upto iPhone4 & iPod4
                    else
                    {
                        finalImageView.frame = CGRectMake(10, 10, 420, 268);
                        CGFloat scaleSize = 0.2f;
                        oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone" bundle:nil];
                        [UIView commitAnimations];
                        
                        UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                                  scale:scaleSize
                                                            orientation:imagePath.imageOrientation];
                        
                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                        [self.view addSubview:newView];
                        [newView addSubview:oneView.view];
                        if([themeName isEqualToString:@"iOS Theme"])
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        else
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            
                        }
                        [oneView->imageViewOne addSubview:finalImageView];
                        finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                        [finalImageView setImage:smallImage];
                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                        {
                            CGFloat constrainedSize = 265.0f;
                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                            
                            commentLabel = [[UILabel alloc]init];
                            commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                            
                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                            [commentLabel setTextColor:[UIColor whiteColor]];
                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                            [oneView.view addSubview:commentLabel];
                        }
                        finalImageView = nil;
                        smallImage = nil;
                        commentLabel = NULL;
                    }
                    
                }
                else
                {
                    finalImageView.frame = CGRectMake(10, 10, 900, 704);
                    CGFloat scaleSize = 0.2f;
                    oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_ipad" bundle:nil];
                    
                    [UIView commitAnimations];
                    
                    UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                              scale:scaleSize
                                                        orientation:imagePath.imageOrientation];
                    
                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                    [self.view addSubview:newView];
                    [newView addSubview:oneView.view];
                    if([themeName isEqualToString:@"iOS Theme"])
                    {
                        backGroundTheme = @"bg_";
                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                    }
                    else
                    {
                        backGroundTheme = @"bg_";
                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme.png"];
                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        
                    }
                    [oneView->imageViewOne addSubview:finalImageView];
                    finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                    [finalImageView setImage:smallImage];
                    
                    if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                    {
                        CGFloat constrainedSize = 265.0f;
                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                        
                        commentLabel = [[UILabel alloc]init];
                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                        
                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                        [commentLabel setTextColor:[UIColor whiteColor]];
                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                        [oneView.view addSubview:commentLabel];
                    }
                    finalImageView = nil;
                    smallImage = nil;
                    commentLabel = NULL;
                }

            }
            else
            {
                loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                //for error MEssage to remove initialize this
                UIGraphicsBeginImageContext(CGSizeMake(1,1));
                moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                UIGraphicsEndImageContext();
                [moviePlayerVC.moviePlayer prepareToPlay];
                
                if([albumName isEqualToString:@"VideoAlbum"])
                {
                    [self.view addSubview:newView];
                }
                [moviePlayerVC.view setFrame: newView.bounds];
                [newView addSubview: moviePlayerVC.view];
                [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(movieFinishedCallback:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                [moviePlayerVC.moviePlayer play];
                videoShow = TRUE;
            }
            previousPage = previousPage - 1;
            currentPage= previousPage+1;
            [self checkNextExtraitem];
            break;
        }
        case 1:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            [moviePlayerVC.moviePlayer.view removeFromSuperview];
            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[0];
            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
            
            
            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
            {
                if(myasset == NULL)
                {
                    [self defaultImage];
                }
                CGImageRef iref;
                if(myasset == NULL)
                    iref = [imagePath CGImage];
                else
                {
                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                    iref = [rep fullScreenImage];
                    
                }
                if (iref)
                {
                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                    {
                        //for iPhone5
                        if([[UIScreen mainScreen]bounds].size.height == 568)
                        {
                            oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone5" bundle:nil];
                            //---------------------For animation----------------------------------//
                            [self loadPreviousAnimation];
                            //------------------------------------------------------------------//
                            temp = [UIImage imageWithCGImage:iref];
                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                      scale:scaleSize
                                                                orientation:temp.imageOrientation];
                            
                            [self.view addSubview:newView];
                            [newView addSubview:oneView.view];
                            oneView->touchImageURL=[NSString stringWithString:loadImage];
                            if([themeName isEqualToString:@"iOS Theme"])
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            else
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            UIImageView *finalImageView = [[UIImageView alloc] init];
                            finalImageView.frame = CGRectMake(10, 10, 508, 268);
                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                            finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                            [oneView->imageViewOne addSubview:finalImageView];
                            [finalImageView setImage: smallImage];
                            if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                            {
                                CGFloat constrainedSize = 265.0f;
                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                commentLabel = [[UILabel alloc]init];
                                commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                [commentLabel setTextColor:[UIColor whiteColor]];
                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                [oneView.view addSubview:commentLabel];
                            }
                            finalImageView = nil;
                            smallImage = nil;
                            commentLabel = NULL;
                        }
                        else
                        {
                            oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone" bundle:nil];
                            //---------------------For animation----------------------------------//
                            [self loadPreviousAnimation];
                            //------------------------------------------------------------------//
                            temp = [UIImage imageWithCGImage:iref];
                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                      scale:scaleSize
                                                                orientation:temp.imageOrientation];
                            
                            [self.view addSubview:newView];
                            [newView addSubview:oneView.view];
                            oneView->touchImageURL=[NSString stringWithString:loadImage];
                            if([themeName isEqualToString:@"iOS Theme"])
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            else
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            UIImageView *finalImageView = [[UIImageView alloc] init];
                            finalImageView.frame = CGRectMake(10, 10, 420, 268);
                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                            finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                            [oneView->imageViewOne addSubview:finalImageView];
                            [finalImageView setImage: smallImage];
                            if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                            {
                                CGFloat constrainedSize = 265.0f;
                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                commentLabel = [[UILabel alloc]init];
                                commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                [commentLabel setTextColor:[UIColor whiteColor]];
                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                [oneView.view addSubview:commentLabel];
                            }
                            finalImageView = nil;
                            smallImage = nil;
                            commentLabel = NULL;
                        }
                    }
                    else
                    {
                        oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_ipad" bundle:nil];
                        //---------------------For animation----------------------------------//
                        [self loadPreviousAnimation];
                        //------------------------------------------------------------------//
                        temp = [UIImage imageWithCGImage:iref];
                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                  scale:scaleSize
                                                            orientation:temp.imageOrientation];
                        
                        [self.view addSubview:newView];
                        [newView addSubview:oneView.view];
                        oneView->touchImageURL=[NSString stringWithString:loadImage];
                        if([themeName isEqualToString:@"iOS Theme"])
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        else
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }

                        UIImageView *finalImageView = [[UIImageView alloc] init];
                        finalImageView.frame = CGRectMake(10, 10, 900, 704);
                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                        finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                        [oneView->imageViewOne addSubview:finalImageView];
                        [finalImageView setImage: smallImage];
                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                        {
                            CGFloat constrainedSize = 265.0f;
                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                            commentLabel = [[UILabel alloc]init];
                            commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                            [commentLabel setTextColor:[UIColor whiteColor]];
                            [commentLabel setFont:[UIFont systemFontOfSize:16]];
                            [oneView.view addSubview:commentLabel];
                        }
                        finalImageView = nil;
                        smallImage = nil;
                        commentLabel = NULL;
                        
                    }
                    
                }
            };
            
            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
            {
                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
            };
            
            if(loadImage && [loadImage length])
            {
                
                NSURL *asseturl = [NSURL URLWithString:loadImage];
                [assetsLibrary assetForURL:asseturl
                               resultBlock:resultblock
                              failureBlock:failureblock];
            }
            
            
            previousPage = previousPage - 1;
            currentPage= previousPage+1;
            [self checkNextExtraitem];
            break;
        }
        case 2:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<2;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        
                                        //for Padding Image View
                                        UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                        twoFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                        twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                        [twoFinalImageOne setImage: smallImage];
                                        twoFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        
                                        //for Padding Image View
                                        UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                        twoFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                        twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                        [twoFinalImageOne setImage: smallImage];
                                        twoFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                    [self loadPreviousAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:twoView.view];
                                    [twoView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    
                                    //for Padding Image View
                                    UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                    twoFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                    twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                    [twoFinalImageOne setImage: smallImage];
                                    twoFinalImageOne = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                        twoFinalImageTwo.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                        twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                        [twoFinalImageTwo setImage: smallImage];
                                        twoFinalImageTwo = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [twoView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                        twoFinalImageTwo.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                        twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                        [twoFinalImageTwo setImage: smallImage];
                                        twoFinalImageTwo = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [twoView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:twoView.view];
                                    [twoView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    //for Padding Image View
                                    UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                    twoFinalImageTwo.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                    twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                    [twoFinalImageTwo setImage: smallImage];
                                    twoFinalImageTwo = nil;
                                    smallImage = nil;
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [twoView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                    
                                }
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
            }
            previousPage = previousPage - 1;
            currentPage= previousPage+1;
            [self checkNextExtraitem];
            break;
        }
            
        case 3:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<3;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                        threeFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                        threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                        [threeFinalImageOne setImage: smallImage];
                                        threeFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                        threeFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                        threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                        [threeFinalImageOne setImage: smallImage];
                                        threeFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                  [self loadPreviousAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                    threeFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                    threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                    [threeFinalImageOne setImage: smallImage];
                                    threeFinalImageOne = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                        threeFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                        threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                        [threeFinalImageTwo setImage: smallImage];
                                        threeFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                        threeFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                        threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                        [threeFinalImageTwo setImage: smallImage];
                                        threeFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                    threeFinalImageTwo.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                    threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                    [threeFinalImageTwo setImage: smallImage];
                                    threeFinalImageTwo = nil;
                                    smallImage = nil;
                                    
                               }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                        threeFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                        threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                        [threeFinalImageThree setImage: smallImage];
                                        threeFinalImageThree = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [threeView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                        threeFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                        threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                        [threeFinalImageThree setImage: smallImage];
                                        threeFinalImageThree = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [threeView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                    threeFinalImageThree.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                    threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                    [threeFinalImageThree setImage: smallImage];
                                    threeFinalImageThree = nil;
                                    smallImage = nil;
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [threeView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
            }
            previousPage = previousPage -1;
            currentPage= previousPage+1;
            [self checkNextExtraitem];
            break;
        }
            
        case 4:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<4;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        fourView = [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                        fourFinalImageOne.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                        fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                        [fourFinalImageOne setImage: smallImage];
                                        fourFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        fourView = [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                        fourFinalImageOne.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                        fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                        [fourFinalImageOne setImage: smallImage];
                                        fourFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    fourView = [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                    [self loadPreviousAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                    fourFinalImageOne.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                    fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                    [fourFinalImageOne setImage: smallImage];
                                    fourFinalImageOne = nil;
                                    smallImage = nil;

                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                        fourFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                        fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                        [fourFinalImageTwo setImage:smallImage];
                                        fourFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                        fourFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                        fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                        [fourFinalImageTwo setImage:smallImage];
                                        fourFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                    fourFinalImageTwo.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                    fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                    [fourFinalImageTwo setImage:smallImage];
                                    fourFinalImageTwo = nil;
                                    smallImage = nil;

                                }
                                
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                        fourFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                        fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                        [fourFinalImageThree setImage: smallImage];
                                        fourFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                        fourFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                        fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                        [fourFinalImageThree setImage: smallImage];
                                        fourFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                    fourFinalImageThree.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                    fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                    [fourFinalImageThree setImage: smallImage];
                                    fourFinalImageThree = nil;
                                    smallImage = nil;
                                    
                                }
                                
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                        
                    case 3:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                        fourFinalImageFour.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                        fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                        [fourFinalImageFour setImage:smallImage];
                                        fourFinalImageFour = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [fourView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                        fourFinalImageFour.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                        fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                        [fourFinalImageFour setImage:smallImage];
                                        fourFinalImageFour = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [fourView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                    fourFinalImageFour.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                    fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                    [fourFinalImageFour setImage:smallImage];
                                    fourFinalImageFour = nil;
                                    smallImage = nil;
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [fourView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
                
            }
            previousPage = previousPage-1;
            currentPage= previousPage+1;
            [self checkNextExtraitem];
            break;
        }
            
        case 9:
        {
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            for(int j=0;j<9;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone5" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                        nineFinalImageOne.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                        nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                        [nineFinalImageOne setImage:smallImage];
                                        nineFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone" bundle:nil];
                                        //---------------------For animation----------------------------------//
                                        [self loadPreviousAnimation];
                                        //------------------------------------------------------------------//
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                        nineFinalImageOne.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                        nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                        [nineFinalImageOne setImage:smallImage];
                                        nineFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_ipad" bundle:nil];
                                    //---------------------For animation----------------------------------//
                                    [self loadPreviousAnimation];
                                    //------------------------------------------------------------------//
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                        nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                    nineFinalImageOne.frame = CGRectMake(3, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                    nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                    [nineFinalImageOne setImage:smallImage];
                                    nineFinalImageOne = nil;
                                    smallImage = nil;
                                }
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                        nineFinalImageTwo.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                        nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                        [nineFinalImageTwo setImage: smallImage];
                                        nineFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                        nineFinalImageTwo.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                        nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                        [nineFinalImageTwo setImage: smallImage];
                                        nineFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                    nineFinalImageTwo.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                    nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                    [nineFinalImageTwo setImage: smallImage];
                                    nineFinalImageTwo = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                        nineFinalImageThree.frame = CGRectMake(3,3, 170, 90 );
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                        nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                        [nineFinalImageThree setImage: smallImage];
                                        nineFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                        nineFinalImageThree.frame = CGRectMake(4,3, 140, 90 );
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                        nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                        [nineFinalImageThree setImage: smallImage];
                                        nineFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                    nineFinalImageThree.frame = CGRectMake(4,3, 300, 235 );
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                    nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                    [nineFinalImageThree setImage: smallImage];
                                    nineFinalImageThree = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 3:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                        nineFinalImageFour.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                        nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                        [nineFinalImageFour setImage:smallImage];
                                        nineFinalImageFour = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                        nineFinalImageFour.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                        nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                        [nineFinalImageFour setImage:smallImage];
                                        nineFinalImageFour = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                        nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                    nineFinalImageFour.frame = CGRectMake(3, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                    nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                    [nineFinalImageFour setImage:smallImage];
                                    nineFinalImageFour = nil;
                                    smallImage = nil;

                                    
                                }
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 4:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                        nineFinalImageFive.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                        nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                        [nineFinalImageFive setImage: smallImage];
                                        nineFinalImageFive = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                        nineFinalImageFive.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                        nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                        [nineFinalImageFive setImage: smallImage];
                                        nineFinalImageFive = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                    nineFinalImageFive.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                    nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                    [nineFinalImageFive setImage: smallImage];
                                    nineFinalImageFive = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 5:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                        nineFinalImageSix.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                        nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                        [nineFinalImageSix setImage: smallImage];
                                        nineFinalImageSix = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                        nineFinalImageSix.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                        nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                        [nineFinalImageSix setImage: smallImage];
                                        nineFinalImageSix = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                    nineFinalImageSix.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                    nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                    [nineFinalImageSix setImage: smallImage];
                                    nineFinalImageSix = nil;
                                    smallImage = nil;
                              }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 6:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                        nineFinalImageSeven.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                        nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                        [nineFinalImageSeven setImage: smallImage];
                                        nineFinalImageSeven = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                        nineFinalImageSeven.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                        nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                        [nineFinalImageSeven setImage: smallImage];
                                        nineFinalImageSeven = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme5.png"];
                                        nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                    nineFinalImageSeven.frame = CGRectMake(3, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                    nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                    [nineFinalImageSeven setImage: smallImage];
                                    nineFinalImageSeven = nil;
                                    smallImage = nil;

                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                        
                    case 7:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                        nineFinalImageEight.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                        nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                        [nineFinalImageEight setImage: smallImage];
                                        nineFinalImageEight = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                        nineFinalImageEight.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                        nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                        [nineFinalImageEight setImage: smallImage];
                                        nineFinalImageEight = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                        nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                    nineFinalImageEight.frame = CGRectMake(4, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                    nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                    [nineFinalImageEight setImage: smallImage];
                                    nineFinalImageEight = nil;
                                    smallImage = nil;
                                }
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 8:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:previousPage-1])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            if(myasset == NULL)
                            {
                                [self defaultImage];
                            }
                            CGImageRef iref;
                            if(myasset == NULL)
                                iref = [imagePath CGImage];
                            else
                            {
                                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                iref = [rep fullScreenImage];
                                
                            }
                            if (iref)
                            {
                                
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                        nineFinalImageNine.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                        nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                        [nineFinalImageNine setImage:smallImage];
                                        nineFinalImageNine = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [nineView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                        nineFinalImageNine.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                        nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                        [nineFinalImageNine setImage:smallImage];
                                        nineFinalImageNine = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [nineView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                        nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                    nineFinalImageNine.frame = CGRectMake(4, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                    nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                    [nineFinalImageNine setImage:smallImage];
                                    nineFinalImageNine = nil;
                                    smallImage = nil;
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [nineView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
                
            }
            previousPage = previousPage-1;
            currentPage= previousPage+1;
            [self checkNextExtraitem];
            break;
        }
            
        default:
            
            break;
    }

}

- (void)prebuttonClicked
{
    if(videoInFirstPage)
    {
        videoInFirstPage = FALSE;
        [self facebookButton];
    }
    extraImage = TRUE;
    extraVideo = TRUE;
    extraWebLInk = TRUE;
    [player pause];
    if(previousPage<=currentPage-1)
    {
        audiosCount = [((Album *) xmlParser->albumname[previousPage-1])->audios count];
        if (audiosCount == 1)
        {
            
            NSString *loadAudio = ((Album *) xmlParser->albumname[previousPage-1])->audios[0];
            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
            playerItem = [[AVPlayerItem alloc] initWithURL:url];
            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
            [player play];
            audioStop = TRUE;
        }
        [self repeatPrevious];
        [oneFingerSwipeLeft setEnabled:YES];
        [oneFingerSwipeRight setEnabled:YES];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
    }
    if(previousPage==0)
    {
        [oneFingerSwipeLeft setEnabled:YES];
        [oneFingerSwipeRight setEnabled:NO];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
    }
}

- (void)oneFingerSwipeRight:(UITapGestureRecognizer *)recognizer
{
    if(videoInFirstPage)
    {
        videoInFirstPage = FALSE;
        [self facebookButton];
    }
    extraImage = TRUE;
    extraVideo = TRUE;
    extraWebLInk = TRUE;
    [player pause];
    // Insert your own code to handle swipe right
    if(previousPage<=currentPage-1)
    {
        audiosCount = [((Album *) xmlParser->albumname[previousPage-1])->audios count];
        if (audiosCount == 1)
        {
            
            NSString *loadAudio = ((Album *) xmlParser->albumname[previousPage-1])->audios[0];
            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
            playerItem = [[AVPlayerItem alloc] initWithURL:url];
            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
            [player play];
            audioStop = TRUE;
        }
        [self repeatPrevious];
        [oneFingerSwipeLeft setEnabled:YES];
        [oneFingerSwipeRight setEnabled:YES];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        
        if(previousPage==0)
        {
            [oneFingerSwipeLeft setEnabled:YES];
            [oneFingerSwipeRight setEnabled:NO];
            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
            {
                //for iPhone5
                if([[UIScreen mainScreen]bounds].size.height == 568)
                {
                    finalPreviousButton = @"prev_";
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                    UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                    prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                    prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                    if([themeName isEqualToString:@"Glass"])
                    {
                        [prevButton setBackgroundColor:[UIColor blackColor]];
                    }
                    [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                    [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                    [self.view addSubview:prevButton];
                }
                else
                {
                    finalPreviousButton = @"prev_";
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                    UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                    prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                    prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                    if([themeName isEqualToString:@"Glass"])
                    {
                        [prevButton setBackgroundColor:[UIColor blackColor]];
                    }
                    [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                    [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                    [self.view addSubview:prevButton];
                }
            }
            else
            {
                if([themeName isEqualToString:@"iOS Theme"])
                {
                    finalPreviousButton = @"prev_";
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                    UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                    prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                    prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                    [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                    [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                    [self.view addSubview:prevButton];
                }
                else
                {
                    finalPreviousButton = @"prev_";
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                    finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_d.png"];
                    UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                    prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                    prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                    if([themeName isEqualToString:@"Glass"])
                    {
                        [prevButton setBackgroundColor:[UIColor blackColor]];
                    }
                    [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                    [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                    [self.view addSubview:prevButton];
                }
            }
        }
    }
    
}

+ (UIImage*)imageWithImage:(UIImage*)image scaledToSize:(CGSize)newSize;
{
    UIGraphicsBeginImageContextWithOptions(newSize, NO, 0.0);
    [image drawInRect:CGRectMake(0,0,newSize.width,newSize.height)];
     UIImage* newImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return newImage;
}


+ (UIColor *)colorFromHexString:(NSString *)hexString
{
    unsigned rgbValue = 0;
    NSScanner *scanner = [NSScanner scannerWithString:hexString];
    [scanner setScanLocation:1]; 
    [scanner scanHexInt:&rgbValue];
    return [UIColor colorWithRed:((rgbValue & 0xFF0000) >> 16)/255.0 green:((rgbValue & 0xFF00) >> 8)/255.0 blue:(rgbValue & 0xFF)/255.0 alpha:1.0];
}
-(void)setAlbumNameandTheme
{
    slideMenuView = nil;
    slideMenuView1 = nil;
    slideMenuView3 = nil;
    lineView = nil;
    lineView1 = nil;
    extraImage = TRUE;
    extraVideo = TRUE;
    extraWebLInk = TRUE;
    [faqButton setHidden:YES];
    [faqButton removeFromSuperview];
    settings.enabled = YES;
    viewer.enabled = YES;
    viewer.title = @"Back to Album";
    buttonClicked = TRUE;
    if([themeName isEqualToString:@"iOS Theme"])
    {
        
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[UIColor blackColor]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[UIColor blackColor]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[UIColor blackColor]];
            self->topNavigationBar.topItem.title = albumName;
        }
        
    }
    if([themeName isEqualToString:@"Colors"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#A3A7A2"]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#A3A7A2"]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#A3A7A2"]];
            self->topNavigationBar.topItem.title = albumName;
        }
        
    }
    if([themeName isEqualToString:@"Party Theme"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#01111E"]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#01111E"]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#01111E"]];
            self->topNavigationBar.topItem.title = albumName;
        }
        
    }
    if([themeName isEqualToString:@"Glass"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#30414C"]];
                [audioButton setBackgroundColor:[UIColor blackColor]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#30414C"]];
                [audioButton setBackgroundColor:[UIColor blackColor]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#30414C"]];
            [audioButton setBackgroundColor:[UIColor blackColor]];
           self->topNavigationBar.topItem.title = albumName;
        }
        
    }
    if([themeName isEqualToString:@"BirthDay"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FFFFFF"]];
                [viewer setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                [settings setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                self->topNavigationBar.topItem.title = albumName;
                NSDictionary *textTitleOptions = [NSDictionary dictionaryWithObjectsAndKeys:[UIColor blackColor], UITextAttributeTextColor, nil];
                topNavigationBar.titleTextAttributes = textTitleOptions;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FFFFFF"]];
                [viewer setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                [settings setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                self->topNavigationBar.topItem.title = albumName;
                NSDictionary *textTitleOptions = [NSDictionary dictionaryWithObjectsAndKeys:[UIColor blackColor], UITextAttributeTextColor, nil];
                topNavigationBar.titleTextAttributes = textTitleOptions;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FFFFFF"]];
            [viewer setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
            [settings setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
            self->topNavigationBar.topItem.title = albumName;
            NSDictionary *textTitleOptions = [NSDictionary dictionaryWithObjectsAndKeys:[UIColor blackColor], UITextAttributeTextColor, nil];
            topNavigationBar.titleTextAttributes = textTitleOptions;
        }
    }
    if([themeName isEqualToString:@"Win8 Blue"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#8FDFFF"]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#8FDFFF"]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#8FDFFF"]];
           self->topNavigationBar.topItem.title = albumName;
        }
        
    }
    if([themeName isEqualToString:@"Win8 Pink"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FF90D7"]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FF90D7"]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FF90D7"]];
           self->topNavigationBar.topItem.title = albumName;
        }
        
    }
    if([themeName isEqualToString:@"Indian Wedding"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#740505"]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#740505"]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#740505"]];
            self->topNavigationBar.topItem.title = albumName;
        }
        
    }
    if([themeName isEqualToString:@"Generic Wedding"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FFFFFFF"]];
                [viewer setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                [settings setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor],
                                                  UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                self->topNavigationBar.topItem.title = albumName;
                NSDictionary *textTitleOptions = [NSDictionary dictionaryWithObjectsAndKeys:[UIColor blackColor], UITextAttributeTextColor, nil];
                topNavigationBar.titleTextAttributes = textTitleOptions;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FFFFFFF"]];
                [viewer setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                [settings setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor],
                                                  UITextAttributeTextColor,nil] forState:UIControlStateNormal];
                self->topNavigationBar.topItem.title = albumName;
                NSDictionary *textTitleOptions = [NSDictionary dictionaryWithObjectsAndKeys:[UIColor blackColor], UITextAttributeTextColor, nil];
                topNavigationBar.titleTextAttributes = textTitleOptions;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#FFFFFFF"]];
            [viewer setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
            [settings setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor blackColor],
                                              UITextAttributeTextColor,nil] forState:UIControlStateNormal];
            self->topNavigationBar.topItem.title = albumName;
            NSDictionary *textTitleOptions = [NSDictionary dictionaryWithObjectsAndKeys:[UIColor blackColor], UITextAttributeTextColor, nil];
            topNavigationBar.titleTextAttributes = textTitleOptions;
        }
        
    }
    if([themeName isEqualToString:@"Desert"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#925D1D"]];
                [nextButton setBackgroundColor:[UIColor blackColor]];
                [prevButton setBackgroundColor:[UIColor blackColor]];
                [fbButton setBackgroundColor:[UIColor blackColor]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#925D1D"]];
                [nextButton setBackgroundColor:[UIColor blackColor]];
                [prevButton setBackgroundColor:[UIColor blackColor]];
                [fbButton setBackgroundColor:[UIColor blackColor]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#925D1D"]];
            [nextButton setBackgroundColor:[UIColor blackColor]];
            [prevButton setBackgroundColor:[UIColor blackColor]];
            [fbButton setBackgroundColor:[UIColor blackColor]];
            self->topNavigationBar.topItem.title = albumName;
        }
    }
    if([themeName isEqualToString:@"Black and White"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#799AAE"]];
                self->topNavigationBar.topItem.title = albumName;
            }
            else
            {
                [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#799AAE"]];
                self->topNavigationBar.topItem.title = albumName;
            }
        }
        else
        {
            [topNavigationBar setTintColor:[ViewerViewController colorFromHexString:@"#799AAE"]];
            self->topNavigationBar.topItem.title = albumName;
        }
        
    }

}


- (void) createThumbnails
{
    thumbnailArray = [[NSMutableArray alloc]init];
    int pageCount = checkPage;
    for(int i=0;i<pageCount;i++)
    {
        switch(((Album*) [xmlParser->albumname objectAtIndex:i])->layOut)
        {
            case 12:
            {
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                {
                    NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                    loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                    
                    ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                    {
                        CGImageRef iref = [myasset aspectRatioThumbnail];
                        if (iref)
                        {
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    albumImage = [UIImage imageWithCGImage:iref];
                                    thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                    thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                    thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                    image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0,78, 78)];
                                    [image1 setImage:albumImage];
                                    [thumbnailButton setTag:i];
                                    [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                    [thumbnailButton addSubview:image1];
                                    [thumbnailArray addObject:thumbnailButton];
                                    if([thumbnailArray count] == pageCount)
                                    {
                                        thumbnailFinish = TRUE;
                                    }

                                }
                                else
                                {
                                    albumImage = [UIImage imageWithCGImage:iref];
                                    thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                    thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                    thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                    image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0,78, 78)];
                                    [image1 setImage:albumImage];
                                    [thumbnailButton setTag:i];
                                    [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                    [thumbnailButton addSubview:image1];
                                    [thumbnailArray addObject:thumbnailButton];
                                    if([thumbnailArray count] == pageCount)
                                    {
                                        thumbnailFinish = TRUE;
                                    }

                                }
                            }
                            else
                            {
                                albumImage = [UIImage imageWithCGImage:iref];
                                thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                thumbnailButton.frame = CGRectMake(30, 10, 108,108 );
                                image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0,108, 108)];
                                [image1 setImage:albumImage];
                                [thumbnailButton setTag:i];
                                [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                [thumbnailButton addSubview:image1];
                                [thumbnailArray addObject:thumbnailButton];
                                
                                if([thumbnailArray count] == pageCount)
                                {
                                    thumbnailFinish = TRUE;
                                }
                            }
                        }
                        
                        
                    };
                    ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                    {
                        NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                    };
                    
                    if(loadImage && [loadImage length])
                    {
                        
                        NSURL *asseturl = [NSURL URLWithString:loadImage];
                        [assetsLibrary assetForURL:asseturl
                                       resultBlock:resultblock
                                      failureBlock:failureblock];
                    }
                    
                }
                break;
            }
                
            case 1:
            {
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                {
                    NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                    loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                    ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                    {
                        CGImageRef iref = [myasset aspectRatioThumbnail];
                        
                        if (iref)
                        {
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    albumImage = [UIImage imageWithCGImage:iref];
                                    thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                    thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                    thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                    image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0,78, 78)];
                                    [image1 setImage:albumImage];
                                    [thumbnailButton setTag:i];
                                    [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                    [thumbnailButton addSubview:image1];
                                    [thumbnailArray addObject:thumbnailButton];
                                    if([thumbnailArray count] == pageCount)
                                    {
                                        thumbnailFinish = TRUE;
                                    }
                                }
                                else
                                {
                                    albumImage = [UIImage imageWithCGImage:iref];
                                    thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                    thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                    thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                    image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0,78, 78)];
                                    [image1 setImage:albumImage];
                                    [thumbnailButton setTag:i];
                                    [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                    [thumbnailButton addSubview:image1];
                                    [thumbnailArray addObject:thumbnailButton];
                                    if([thumbnailArray count] == pageCount)
                                    {
                                        thumbnailFinish = TRUE;
                                    }
                                }
                            }
                            else
                            {
                                albumImage = [UIImage imageWithCGImage:iref];
                                thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                thumbnailButton.frame = CGRectMake(30, 10, 108,108 );
                                image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0,108, 108)];
                                [image1 setImage:albumImage];
                                [thumbnailButton setTag:i];
                                thumbnailButton.imageView.contentMode = UIViewContentModeScaleAspectFit;
                                [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                [thumbnailButton addSubview:image1];
                                
                                [thumbnailArray addObject:thumbnailButton];
                                
                                if([thumbnailArray count] == pageCount)
                                {
                                    thumbnailFinish = TRUE;
                                }
                            }
                        }
                        
                    };
                    ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                    {
                        NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                    };
                    
                    if(loadImage && [loadImage length])
                    {
                        
                        NSURL *asseturl = [NSURL URLWithString:loadImage];
                        [assetsLibrary assetForURL:asseturl
                                       resultBlock:resultblock
                                      failureBlock:failureblock];
                    }
                    
                }
                
            }
                break;
            case 2:
            {
                for(int j=0;j<2;j++)
                {
                    switch(j)
                    {
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 39, 78)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 39, 78)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                        thumbnailButton.frame = CGRectMake(30, 10, 108,108 );
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 54, 108)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                                
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 0, 39, 78)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }

                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 0, 39, 78)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }

                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(54, 0, 54, 108)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                        [thumbnailButton setTag:i];
                                        [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [thumbnailArray addObject:thumbnailButton];
                                        
                                        if([thumbnailArray count] == pageCount)
                                        {
                                            thumbnailFinish = TRUE;
                                        }
                                        
                                        
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        default:
                            break;
                    }
                }
            }
                break;
            case 3:
            {
                for(int j=0;j<3;j++)
                {
                    switch(j)
                    {
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 39, 78)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];

                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 39, 78)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];

                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                        thumbnailButton.frame = CGRectMake(30, 10, 108,108 );
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 54, 108)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                                
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 0, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];

                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 0, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];

                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(54, 0, 54, 54)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 2:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 39, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 39, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }
                                        }
                                        
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(54, 54, 54, 54)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                        [thumbnailButton setTag:i];
                                        [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [thumbnailArray addObject:thumbnailButton];
                                        if([thumbnailArray count] == pageCount)
                                        {
                                            thumbnailFinish = TRUE;
                                        }
                                        
                                        
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                            
                        default:
                            break;
                    }
                }
            }
                break;
            case 4:
            {
                for(int j=0;j<4;j++)
                {
                    switch(j)
                    {
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                        thumbnailButton.frame = CGRectMake(30, 10, 108,108 );
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 54, 54)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                                
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 0, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 0, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(54, 0, 54, 54)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 2:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 39, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 39, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 54, 54, 54)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 3:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 39, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(39, 39, 39, 39)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }
                                        }
                                        
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(54, 54, 54, 54)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                        [thumbnailButton setTag:i];
                                        [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [thumbnailArray addObject:thumbnailButton];
                                        if([thumbnailArray count] == pageCount)
                                        {
                                            thumbnailFinish = TRUE;
                                        }
                                        
                                        
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                            
                        default:
                            break;
                    }
                }
            }
                break;
            case 9:
            {
                for(int j=0;j<9;j++)
                {
                    switch(j)
                    {
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                            thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                            thumbnailButton.frame = CGRectMake(30, 10, 78,78 );
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        thumbnailButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                                        thumbnailButton.showsTouchWhenHighlighted = TRUE;
                                        thumbnailButton.frame = CGRectMake(30, 10, 108,108 );
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                                
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(26, 0, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(26, 0, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(36, 0, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 2:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(52, 0, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(52, 0, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(72, 0, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 3:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 26, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 26, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 36, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                                
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 4:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(26, 26, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(26, 26, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(36, 36, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 5:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(52, 26, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(52, 26, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(72, 36, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 6:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 52, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 52, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(0, 72, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                        case 7:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(26, 52, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(26, 52, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(36,72, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                            
                        case 8:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                CGImageRef iref = [myasset aspectRatioThumbnail];
                                
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(52, 52, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }

                                        }
                                        else
                                        {
                                            albumImage = [UIImage imageWithCGImage:iref];
                                            image1 = [[UIImageView alloc]initWithFrame:CGRectMake(52, 52, 26, 26)];
                                            [image1 setImage:albumImage];
                                            [thumbnailButton addSubview:image1];
                                            [thumbnailButton setTag:i];
                                            [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                            [thumbnailArray addObject:thumbnailButton];
                                            if([thumbnailArray count] == pageCount)
                                            {
                                                thumbnailFinish = TRUE;
                                            }

                                        }
                                    }
                                    else
                                    {
                                        albumImage = [UIImage imageWithCGImage:iref];
                                        image1 = [[UIImageView alloc]initWithFrame:CGRectMake(72,72, 36, 36)];
                                        [image1 setImage:albumImage];
                                        [thumbnailButton addSubview:image1];
                                        [thumbnailButton setTag:i];
                                        [thumbnailButton addTarget:self action:@selector(thumbNailClicked:) forControlEvents:UIControlEventTouchUpInside];
                                        [thumbnailArray addObject:thumbnailButton];
                                        if([thumbnailArray count] == pageCount)
                                        {
                                            thumbnailFinish = TRUE;
                                        }
                                    }
                                }
                            };
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                        }
                            break;
                            
                        default:
                            break;
                    }
                }
            }
                break;
                
            default:
                break;
        }
    }
}

- (void)btnClicked :(id) sender
{
    UIButton *button = (UIButton *)sender;
    NSString *xmlPath = button.currentTitle;
    xmlParser = [[XMLParser alloc] loadXML:xmlPath];
    checkPage = [xmlParser->albumname count] ;
    themeName = [NSString stringWithString:((Album *) xmlParser->albumname[0])->themeName];
    albumName = [NSString stringWithString:((Album *) xmlParser->albumname[0])->AlbumName];
    passcodeAlbum = [NSString stringWithString:((Album *) xmlParser->albumname[0])->AlbumName];
    NSString *final;
    [albumButton setTitleColor:[UIColor blackColor] forState:UIControlStateHighlighted];
    for(int k = 0; k<[databaseArray count];k++)
    {
        if([passcodeAlbum isEqualToString:databaseArray[k]])
        {
            final = [NSString stringWithString:databaseArray[k]];
            break;
        }
    }
    if([passcodeAlbum isEqualToString:final])
    {
        passcodeAlert = [[UIAlertView alloc] initWithTitle:nil
                                                   message:@"please enter passcode for unlocking Album "
                                                  delegate:self
                                         cancelButtonTitle:@"Cancel"
                                         otherButtonTitles:@"Ok",nil];
        passcodeAlert.alertViewStyle = UIAlertViewStyleSecureTextInput;
        [passcodeAlert show];
        [dataBaseAlert dismissWithClickedButtonIndex:0 animated:YES];
    }
    else
    {
        currentPage =0;
        previousPage =0;
        [self showAlbum];
        [self setAlbumNameandTheme];
       dispatch_async(dispatch_get_main_queue(), ^{
           [self createThumbnails];
        });
    }
}
-(void)showExtra
{
    if([((Album*) [xmlParser->albumname objectAtIndex:0])->extraImage count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(528.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(440.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920, 250.8, 104.0 , 103.4 );
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920, 250.8, 104.0 , 103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:@selector(extraImageButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:extraImgButton];
            }
        }
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(528.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(440.0, 114, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
        }
        else
        {
            
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920, 250.8, 104.0 , 103.4 );
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
            else
            {
                finalExtraImageButton = @"connexions_";
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:themeName];
                finalExtraImageButton = [finalExtraImageButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *extraImageBtn = [UIImage imageNamed:finalExtraImageButton];
                extraImgButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                extraImgButton.frame = CGRectMake(920, 250.8, 104.0 , 103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [extraImgButton setBackgroundColor:[UIColor blackColor]];
                }
                [extraImgButton setBackgroundImage:extraImageBtn  forState:UIControlStateNormal];
                [extraImgButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [extraImgButton setShowsTouchWhenHighlighted:NO];
                [extraImgButton setUserInteractionEnabled:NO];
                [self.view addSubview:extraImgButton];
            }
            
        }
    }
    if([((Album*) [xmlParser->albumname objectAtIndex:0])->audios count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(528.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(440.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:audioButton];
            }
            
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:@selector(audioClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:audioButton];
            }
        }
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(528.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(440.0, 32.0, 40.0,41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }
            
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }
            else
            {
                finalaudioButton = @"audio_";
                finalaudioButton = [finalaudioButton stringByAppendingString:themeName];
                finalaudioButton = [finalaudioButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *audioBtn = [UIImage imageNamed:finalaudioButton];;
                audioButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                audioButton.frame = CGRectMake(920.0, 44.0, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                [audioButton setBackgroundImage:audioBtn forState:UIControlStateNormal];
                [audioButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [audioButton setShowsTouchWhenHighlighted:NO];
                [audioButton setUserInteractionEnabled:NO];
                [self.view addSubview:audioButton];
            }

        }
        
    }
    
    if([((Album*) [xmlParser->albumname objectAtIndex:0])->videos count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(528.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];
            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(440.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];

            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:@selector(videoClicked:) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:videoButton];

            }
            
        }
        
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(528.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];
            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(440.0, 73, 40.0 , 41 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];

            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];
                
            }
            else
            {
                finalVideoButton = @"video_";
                finalVideoButton = [finalVideoButton stringByAppendingString:themeName];
                finalVideoButton = [finalVideoButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *videoBtn = [UIImage imageNamed:finalVideoButton];
                videoButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                videoButton.frame = CGRectMake(920.0, 147.4, 104.0,103.4 );
                if([themeName isEqualToString:@"Glass"])
                {
                    [videoButton setBackgroundColor:[UIColor blackColor]];
                }
                [videoButton setBackgroundImage:videoBtn  forState:UIControlStateNormal];
                [videoButton addTarget:self action:nil forControlEvents:UIControlEventTouchUpInside];
                [videoButton setShowsTouchWhenHighlighted:NO];
                [videoButton setUserInteractionEnabled:NO];
                [self.view addSubview:videoButton];
                
            }
            
        }
        
    }
    
    if([((Album*) [xmlParser->albumname objectAtIndex:0])->webLink count])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(528.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];
            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(440.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920.0, 354.2, 104.0, 103.4);
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];

            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920.0, 354.2, 104.0, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:@selector(webLinkClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:weblinkButton];
            }
            
        }
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(528.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(440.0, 155, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920.0, 354.2, 104.0, 103.4);
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
                
            }
            else
            {
                finalWebLnkButton = @"web_";
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:themeName];
                finalWebLnkButton = [finalWebLnkButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *weblinkBtn = [UIImage imageNamed:finalWebLnkButton];
                weblinkButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                weblinkButton.frame = CGRectMake(920.0, 354.2, 104.0, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [weblinkButton setBackgroundColor:[UIColor blackColor]];
                }
                [weblinkButton setBackgroundImage:weblinkBtn  forState:UIControlStateNormal];
                [weblinkButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [weblinkButton setShowsTouchWhenHighlighted:NO];
                [weblinkButton setUserInteractionEnabled:NO];
                [self.view addSubview:weblinkButton];
                
            }
        }
    }
     
}

+(UIImage*)imageWithImage: (UIImage*) sourceImage scaledToWidth: (float) i_width
{
    float oldWidth = sourceImage.size.width;
    float scaleFactor = i_width / oldWidth;
    
    float newHeight = sourceImage.size.height * scaleFactor;
    float newWidth = oldWidth * scaleFactor;
    
    UIGraphicsBeginImageContext(CGSizeMake(newWidth, newHeight));
    [sourceImage drawInRect:CGRectMake(0, 0, newWidth, newHeight)];
    UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    return newImage;
}

//-----------------------------------For ThumbNail OF Image--------------------------------------//
-(void)thumbNailView
{
    swipeUpGestureRecognizer = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(handleSwipeUpFrom:)];
    [swipeUpGestureRecognizer setDirection:UISwipeGestureRecognizerDirectionUp];
    [newView addGestureRecognizer:swipeUpGestureRecognizer];
}
-(void)destroyThumbSlider
{
    if(slideMenuView2)
    {
        [slideMenuView2 removeFromSuperview];
        slideMenuView2 = nil;
        swipeUpGestureRecognizer = nil;
        thumbnailButton = nil;
        image1 = nil;
    }
}

-(void)thumbnailSliderColor
{
    if([themeName isEqualToString:@"iOS Theme"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[UIColor blackColor] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[UIColor blackColor] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[UIColor blackColor] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Colors"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#A3A7A2"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#A3A7A2"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#A3A7A2"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Party Theme"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#01111E"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#01111E"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#01111E"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Glass"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#30414C"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#30414C"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#30414C"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"BirthDay"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FFFFFF"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FFFFFF"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FFFFFF"] buttons:thumbnailArray];
        }
    }
    if([themeName isEqualToString:@"Win8 Blue"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#8FDFFF"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#8FDFFF"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#8FDFFF"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Win8 Pink"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FF90D7"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FF90D7"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FF90D7"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Indian Wedding"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#740505"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#740505"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#740505"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Generic Wedding"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FFFFFFF"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FFFFFFF"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#FFFFFFF"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Desert"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#925D1D"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#925D1D"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#925D1D"] buttons:thumbnailArray];
        }
        
    }
    if([themeName isEqualToString:@"Black and White"])
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#799AAE"] buttons:thumbnailArray];
            }
            else
            {
                slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 200.0f, [self.view bounds].size.width-40.0f,  120.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#799AAE"] buttons:thumbnailArray];
            }
        }
        else
        {
            slideMenuView2 = [[SlideMenuView alloc] initWithFrameColorAndButtons:CGRectMake(0.0f, 600.0f, [self.view bounds].size.width-104.0f,  168.0f) backgroundColor:[ViewerViewController colorFromHexString:@"#799AAE"] buttons:thumbnailArray];
        }
        
    }
    
}
- (void)handleSwipeUpFrom:(UIGestureRecognizer*)recognizer
{
    if(moviePlayerVC)
    {
        [moviePlayerVC.moviePlayer pause];
    }
    if(thumbnailFinish)
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                [self thumbnailSliderColor];
                [newView addSubview:slideMenuView2];
            }
            else
            {
                [self thumbnailSliderColor];
                [newView addSubview:slideMenuView2];
            }
        }
        else
        {
                [self thumbnailSliderColor];
                [newView addSubview:slideMenuView2];


        }
    }

}

-(void)thumbNailClicked :(id)sender
{
    thumbnailButton.showsTouchWhenHighlighted = TRUE;
    currentPage = [sender tag];
    int pageCount =[ xmlParser->albumname count];
    if(currentPage <= pageCount-1)
    {
        [oneFingerSwipeRight setEnabled:YES];
        
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            
        }
        audiosCount = [((Album *) xmlParser->albumname[currentPage])->audios count];
        if (audiosCount == 1)
        {
            
            NSString *loadAudio = ((Album *) xmlParser->albumname[currentPage])->audios[0];
            NSURL *url = [[NSURL alloc] initWithString:loadAudio];
            playerItem = [[AVPlayerItem alloc] initWithURL:url];
            player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
            [player play];
        }
    CGFloat scaleSize = 0.2f;
    switch(((Album *) xmlParser->albumname[currentPage])->layOut)
    {
        case 12:
        {
            [moviePlayerVC.moviePlayer.view removeFromSuperview];
            [self destroyMethod];
            loadVideo = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[0];
            loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
            //for error MEssage to remove initialize this
            UIGraphicsBeginImageContext(CGSizeMake(1,1));
            moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
            UIGraphicsEndImageContext();
            [moviePlayerVC.moviePlayer prepareToPlay];
            if([albumName isEqualToString:@"VideoAlbum"])
            {
                [self.view addSubview:newView];
            }
            [moviePlayerVC.view setFrame: newView.bounds];
            [newView addSubview: moviePlayerVC.view];
            [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(movieFinishedCallback:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
            [moviePlayerVC.moviePlayer play];
            videoShow = TRUE;
            previousPage = currentPage;
            currentPage = currentPage+1;
            break;
        }
        case 1:
        {
            [moviePlayerVC.moviePlayer.view removeFromSuperview];
            [self destroyMethod];
            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[0];
            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
            {
                ALAssetRepresentation *rep = [myasset defaultRepresentation];
                CGImageRef iref = [rep fullScreenImage];
                if (iref)
                {
                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                    {
                        //for iPhone5
                        if([[UIScreen mainScreen]bounds].size.height == 568)
                        {
                            oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone5" bundle:nil];
                            
                            temp = [UIImage imageWithCGImage:iref];
                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                      scale:scaleSize
                                                                orientation:temp.imageOrientation];
                            [self.view addSubview:newView];
                            [newView addSubview:oneView.view];
                            oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                            if([themeName isEqualToString:@"iOS Theme"])
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            else
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            UIImageView *finalImageView = [[UIImageView alloc] init];
                            finalImageView.frame = CGRectMake(10, 10, 508, 268);
                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                            finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                            [oneView->imageViewOne addSubview:finalImageView];
                            [finalImageView setImage: smallImage];
                            //Setting Comment
                            if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                            {
                                CGFloat constrainedSize = 265.0f;
                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                commentLabel = [[UILabel alloc]init];
                                commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                [commentLabel setTextColor:[UIColor whiteColor]];
                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                [oneView.view addSubview:commentLabel];
                            }
                            finalImageView = nil;
                            smallImage = nil;
                            commentLabel = NULL;
                        }
                        else
                        {
                            oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone" bundle:nil];
                            
                            temp = [UIImage imageWithCGImage:iref];
                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                      scale:scaleSize
                                                                orientation:temp.imageOrientation];
                            [self.view addSubview:newView];
                            [newView addSubview:oneView.view];
                            oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                            if([themeName isEqualToString:@"iOS Theme"])
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            else
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            UIImageView *finalImageView = [[UIImageView alloc] init];
                            finalImageView.frame = CGRectMake(10, 10, 420, 268);
                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                            finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                            [oneView->imageViewOne addSubview:finalImageView];
                            [finalImageView setImage: smallImage];
                            //Setting Comment
                            if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                            {
                                CGFloat constrainedSize = 265.0f;
                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                commentLabel = [[UILabel alloc]init];
                                commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                [commentLabel setTextColor:[UIColor whiteColor]];
                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                [oneView.view addSubview:commentLabel];
                            }
                            finalImageView = nil;
                            smallImage = nil;
                            commentLabel = NULL;
                        }
                        
                    }
                    else
                    {
                        oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_ipad" bundle:nil];
                        temp = [UIImage imageWithCGImage:iref];
                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                  scale:scaleSize
                                                            orientation:temp.imageOrientation];
                        [self.view addSubview:newView];
                        [newView addSubview:oneView.view];
                        oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                        if([themeName isEqualToString:@"iOS Theme"])
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        else
                        {
                            backGroundTheme = @"bg_";
                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme.png"];
                            oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                        }
                        
                        UIImageView *finalImageView = [[UIImageView alloc] init];
                        finalImageView.frame = CGRectMake(10, 10, 900, 704);
                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                        finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                        [oneView->imageViewOne addSubview:finalImageView];
                        [finalImageView setImage: smallImage];
                        //Setting Comment
                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                        {
                            CGFloat constrainedSize = 265.0f;
                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                            commentLabel = [[UILabel alloc]init];
                            commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                            [commentLabel setTextColor:[UIColor whiteColor]];
                            [commentLabel setFont:[UIFont systemFontOfSize:16]];
                            [oneView.view addSubview:commentLabel];
                        }
                        finalImageView = nil;
                        smallImage = nil;
                        commentLabel = NULL;
                    }
                    
                }
            };
            
            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
            {
                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
            };
            
            
            if(loadImage && [loadImage length])
            {
                
                NSURL *asseturl = [NSURL URLWithString:loadImage];
                [assetsLibrary assetForURL:asseturl
                               resultBlock:resultblock
                              failureBlock:failureblock];
            }
            
            previousPage = currentPage;
            currentPage = currentPage+1;
            [self checkNextExtraitem];
            break;
        }
        case 2:
        {
            [self destroyMethod];
            for(int j=0;j<2;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                        twoFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                        twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                        [twoFinalImageOne setImage: smallImage];
                                        twoFinalImageOne = nil;
                                        smallImage = nil;

                                    }
                                    else
                                    {
                                        twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                        twoFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                        twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                        [twoFinalImageOne setImage: smallImage];
                                        twoFinalImageOne = nil;
                                        smallImage = nil;

                                    }
                                }
                                else
                                {
                                    twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_ipad" bundle:nil];
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:twoView.view];
                                    [twoView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    
                                    //for Padding Image View
                                    UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                    twoFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                    twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                    [twoFinalImageOne setImage: smallImage];
                                    twoFinalImageOne = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                        twoFinalImageTwo.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                        twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                        [twoFinalImageTwo setImage: smallImage];
                                        twoFinalImageTwo = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [twoView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        //for Padding Image View
                                        UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                        twoFinalImageTwo.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                        twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                        [twoFinalImageTwo setImage: smallImage];
                                        twoFinalImageTwo = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [twoView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:twoView.view];
                                    [twoView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    //for Padding Image View
                                    UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                    twoFinalImageTwo.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                    twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                    [twoFinalImageTwo setImage: smallImage];
                                    twoFinalImageTwo = nil;
                                    smallImage = nil;
                                    
                                    //for Setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [twoView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }
            
        case 3:
        {
            [self destroyMethod];
            for(int j=0;j<3;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone" bundle:nil];
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                        threeFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                        threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                        [threeFinalImageOne setImage: smallImage];
                                        threeFinalImageOne = nil;
                                        smallImage = nil;

                                    }
                                    else
                                    {
                                        threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone" bundle:nil];
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                        threeFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                        threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                        [threeFinalImageOne setImage: smallImage];
                                        threeFinalImageOne = nil;
                                        smallImage = nil;

                                    }
                                }
                                else
                                {
                                    threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_ipad" bundle:nil];
                                    
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                        threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                    threeFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                    threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                    [threeFinalImageOne setImage: smallImage];
                                    threeFinalImageOne = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                        threeFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                        threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                        [threeFinalImageTwo setImage: smallImage];
                                        threeFinalImageTwo = nil;
                                        smallImage = nil;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                        threeFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                        threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                        [threeFinalImageTwo setImage: smallImage];
                                        threeFinalImageTwo = nil;
                                        smallImage = nil;

                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                    threeFinalImageTwo.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                    threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                    [threeFinalImageTwo setImage: smallImage];
                                    threeFinalImageTwo = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                        threeFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                        threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                        [threeFinalImageThree setImage: smallImage];
                                        threeFinalImageThree = nil;
                                        smallImage = nil;
                                        
                                        //for setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [threeView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                        threeFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                        threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                        [threeFinalImageThree setImage: smallImage];
                                        threeFinalImageThree = nil;
                                        smallImage = nil;
                                        
                                        //for setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [threeView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:threeView.view];
                                    [threeView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                    threeFinalImageThree.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                    threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                    [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                    [threeFinalImageThree setImage: smallImage];
                                    threeFinalImageThree = nil;
                                    smallImage = nil;
                                    
                                    //for setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [threeView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }
            
        case 4:
        {
            [self destroyMethod];
            for(int j=0;j<4;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        fourView= [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                        fourFinalImageOne.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                        fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                        [fourFinalImageOne setImage: smallImage];
                                        fourFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        fourView= [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                        fourFinalImageOne.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                        fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                        [fourFinalImageOne setImage: smallImage];
                                        fourFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    fourView= [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_ipad" bundle:nil];
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                    fourFinalImageOne.frame = CGRectMake(5, 10, 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                    fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                    [fourFinalImageOne setImage: smallImage];
                                    fourFinalImageOne = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                        fourFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                        fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                        [fourFinalImageTwo setImage: smallImage];
                                        fourFinalImageTwo = nil;
                                        smallImage = nil;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                        fourFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                        fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                        [fourFinalImageTwo setImage: smallImage];
                                        fourFinalImageTwo = nil;
                                        smallImage = nil;

                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                    fourFinalImageTwo.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                    fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                    [fourFinalImageTwo setImage: smallImage];
                                    fourFinalImageTwo = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                        fourFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                        fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                        [fourFinalImageThree setImage: smallImage];
                                        fourFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                        fourFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                        fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                        [fourFinalImageThree setImage: smallImage];
                                        fourFinalImageThree = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                    fourFinalImageThree.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                    fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                    [fourFinalImageThree setImage: smallImage];
                                    fourFinalImageThree = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                        
                    case 3:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString: themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                        fourFinalImageFour.frame = CGRectMake(5, 7, 254, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                        fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                        [fourFinalImageFour setImage: smallImage];
                                        fourFinalImageFour = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [fourView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString: themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                        fourFinalImageFour.frame = CGRectMake(5, 7, 210, 130);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                        fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                        [fourFinalImageFour setImage: smallImage];
                                        fourFinalImageFour = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [fourView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:fourView.view];
                                    [fourView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString: themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                        fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                    fourFinalImageFour.frame = CGRectMake(5, 10 , 450, 342);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                    fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                    [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                    [fourFinalImageFour setImage: smallImage];
                                    fourFinalImageFour = nil;
                                    smallImage = nil;
                                    
                                    //for Setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [fourView.view addSubview:commentLabel];
                                    }
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
                
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }
            
        case 9:
        {
            [self destroyMethod];
            for(int j=0;j<9;j++)
            {
                switch(j)
                {
                    case 0:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                        nineFinalImageOne.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                        nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                        [nineFinalImageOne setImage: smallImage];
                                        nineFinalImageOne = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [nineView.view addSubview:commentLabel];
                                        }
                                    }
                                    else
                                    {
                                        nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                        nineFinalImageOne.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                        nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                        [nineFinalImageOne setImage: smallImage];
                                        nineFinalImageOne = nil;
                                        smallImage = nil;
                                        
                                        //for Setting Comment
                                        if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 240, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                            [nineView.view addSubview:commentLabel];
                                        }
                                    }
                                }
                                else
                                {
                                    nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_ipad" bundle:nil];
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                        nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                    nineFinalImageOne.frame = CGRectMake(3, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                    nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                    [nineFinalImageOne setImage: smallImage];
                                    nineFinalImageOne = nil;
                                    smallImage = nil;
                                    
                                    //for Setting Comment
                                    if(((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment sizeWithFont: myFont
                                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:currentPage-1])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                        [nineView.view addSubview:commentLabel];
                                    }
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 1:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                        nineFinalImageTwo.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                        nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                        [nineFinalImageTwo setImage: smallImage];
                                        nineFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                        nineFinalImageTwo.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                        nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                        [nineFinalImageTwo setImage: smallImage];
                                        nineFinalImageTwo = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                    nineFinalImageTwo.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                    nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                    [nineFinalImageTwo setImage: smallImage];
                                    nineFinalImageTwo = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                        nineFinalImageThree.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                        nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                        [nineFinalImageThree setImage: smallImage];
                                        nineFinalImageThree = nil;
                                        smallImage = nil;

                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                        nineFinalImageThree.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                        nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                        [nineFinalImageThree setImage: smallImage];
                                        nineFinalImageThree = nil;
                                        smallImage = nil;

                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                    nineFinalImageThree.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                    nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                    [nineFinalImageThree setImage: smallImage];
                                    nineFinalImageThree = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 3:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                        nineFinalImageFour.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                        nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                        [nineFinalImageFour setImage: smallImage];
                                        nineFinalImageFour = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                        nineFinalImageFour.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                        nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                        [nineFinalImageFour setImage: smallImage];
                                        nineFinalImageFour = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                        nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                    nineFinalImageFour.frame = CGRectMake(3, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                    nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                    [nineFinalImageFour setImage: smallImage];
                                    nineFinalImageFour = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 4:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                        nineFinalImageFive.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                        nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                        [nineFinalImageFive setImage: smallImage];
                                        nineFinalImageFive = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                        nineFinalImageFive.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                        nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                        [nineFinalImageFive setImage: smallImage];
                                        nineFinalImageFive = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                    nineFinalImageFive.frame = CGRectMake(4 , 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                    nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                    [nineFinalImageFive setImage: smallImage];
                                    nineFinalImageFive = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 5:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                        nineFinalImageSix.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                        nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                        [nineFinalImageSix setImage: smallImage];
                                        nineFinalImageSix = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                        nineFinalImageSix.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                        nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                        [nineFinalImageSix setImage: smallImage];
                                        nineFinalImageSix = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                        nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                    nineFinalImageSix.frame = CGRectMake(4, 3, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                    nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                    [nineFinalImageSix setImage: smallImage];
                                    nineFinalImageSix = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 6:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                        nineFinalImageSeven.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                        nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                        [nineFinalImageSeven setImage: smallImage];
                                        nineFinalImageSeven = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                        nineFinalImageSeven.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                        nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                        [nineFinalImageSeven setImage: smallImage];
                                        nineFinalImageSeven = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme5.png"];
                                        nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                    nineFinalImageSeven.frame = CGRectMake(3, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                    nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                    [nineFinalImageSeven setImage: smallImage];
                                    nineFinalImageSeven = nil;
                                    smallImage = nil;
                                    
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                        
                    case 7:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                        nineFinalImageEight.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                        nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                        [nineFinalImageEight setImage: smallImage];
                                        nineFinalImageEight = nil;
                                        smallImage = nil;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                        nineFinalImageEight.frame = CGRectMake(3, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                        nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                        [nineFinalImageEight setImage: smallImage];
                                        nineFinalImageEight = nil;
                                        smallImage = nil;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                        nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                    nineFinalImageEight.frame = CGRectMake(4, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                    nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                    [nineFinalImageEight setImage: smallImage];
                                    nineFinalImageEight = nil;
                                    smallImage = nil;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 8:
                    {
                        NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:currentPage])->mainImage[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                        nineFinalImageNine.frame = CGRectMake(3, 3, 170, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                        nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                        [nineFinalImageNine setImage: smallImage];
                                        commentLabel = NULL;
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                        nineFinalImageNine.frame = CGRectMake(4, 3, 140, 90);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                        nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                        [nineFinalImageNine setImage: smallImage];
                                        commentLabel = NULL;
                                    }
                                }
                                else
                                {
                                    temp = [UIImage imageWithCGImage:iref];
                                    UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                              scale:scaleSize
                                                                        orientation:temp.imageOrientation];
                                    [self.view addSubview:newView];
                                    [newView addSubview:nineView.view];
                                    [nineView->touchImageURL addObject:loadImage];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                        nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                    nineFinalImageNine.frame = CGRectMake(4, 4, 300, 235);
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                    nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                    [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                    [nineFinalImageNine setImage: smallImage];
                                    commentLabel = NULL;
                                }
                                
                            }
                        };
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    default:
                        break;
                }
                
            }
            previousPage = currentPage;
            currentPage = currentPage + 1;
            [self checkNextExtraitem];
            break;
        }

    default:
            break;
    }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
        
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            
        }

    }
    
    //----------------------------Checking First Page----------------------------------//
    if([sender tag] == 0)
    {
        [oneFingerSwipeLeft setEnabled:YES];
        [oneFingerSwipeRight setEnabled:NO];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
        
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            
        }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104.0, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
                
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104.0, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:@selector(nextButtonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
                
            }
        }
        
    }
    
    //------------------------------checking Last Page-------------------------------------// 
    if((pageCount==currentPage)&&(previousPage==currentPage-1))
    {
        [oneFingerSwipeLeft setEnabled:NO];
        [oneFingerSwipeRight setEnabled:YES];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];

            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];

            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
        }
        
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_n.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:@selector(prebuttonClicked) forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            
        }
    }
}

//----------------------------------Hide Thumbanail View---------------------------------------//
-(void)hideThumbNailView
{
    swipeDownGestureRecognizer = [[UISwipeGestureRecognizer alloc] initWithTarget:self action:@selector(handleSwipeDownFrom:)];
    [swipeDownGestureRecognizer setDirection:UISwipeGestureRecognizerDirectionDown];
    [newView addGestureRecognizer:swipeDownGestureRecognizer];
}
- (void)handleSwipeDownFrom:(UIGestureRecognizer*)recognizer
{
    [self destroyThumbSlider];
}

-(void)showAlbum
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            newView = [[UIView alloc] initWithFrame:CGRectMake ( 0, 32.0, 528,288)];
        }
        //upto iPhone4 & iPod4
        else
        {
            newView = [[UIView alloc] initWithFrame:CGRectMake ( 0, 32.0, 440,288)];
        }
    }
    else
    {
        newView = [[UIView alloc] initWithFrame:CGRectMake ( 0, 44, 920, 724)];
    }
    //Swipe Gesture Allocalte
    if(![albumName isEqualToString:@"VideoAlbum"])
    {
        oneFingerSwipeLeft = [[UISwipeGestureRecognizer alloc]
                              initWithTarget:self
                              action:@selector(oneFingerSwipeLeft:)];
        [oneFingerSwipeLeft setDirection:UISwipeGestureRecognizerDirectionLeft];
        [newView addGestureRecognizer:oneFingerSwipeLeft];
        
        oneFingerSwipeRight = [[UISwipeGestureRecognizer alloc]
                               initWithTarget:self
                               action:@selector(oneFingerSwipeRight:)];
        [oneFingerSwipeRight setDirection:UISwipeGestureRecognizerDirectionRight];
        [newView addGestureRecognizer:oneFingerSwipeRight];
    }
    [self thumbNailView];
    [self hideThumbNailView];
    [faqButton setHidden:YES];
    [self audioButton];
    [self videoButton];
    [self extraImgButton];
    [self weblinkButton];
    [self nextButton];
    [self prevButton];
    
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        //upto iPhone4 & iPod4
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
    }
    else
    {
        if([themeName isEqualToString:@"iOS Theme"])
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920.0, 561, 104, 103.4);
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:prevButton];
        }
        else
        {
            finalPreviousButton = @"prev_";
            finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
            finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_d.png"];
            UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
            prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevButton.frame = CGRectMake(920.0, 561, 104, 103.4);
            [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
            [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
            [prevButton setShowsTouchWhenHighlighted:NO];
            [prevButton setUserInteractionEnabled:NO];
            [self.view addSubview:prevButton];
        }
        
    }
    
    int pageCount =[ xmlParser->albumname count] ;
    audiosCount = [((Album *) xmlParser->albumname[0])->audios count];
    if (audiosCount == 1)
    {
        
        NSString *loadAudio = ((Album *) xmlParser->albumname[0])->audios[0];
        NSURL *url = [[NSURL alloc] initWithString:loadAudio];
        playerItem = [[AVPlayerItem alloc] initWithURL:url];
        player = [[AVPlayer alloc] initWithPlayerItem:playerItem];
        [player play];
        audioStop = TRUE;
    }
    if((pageCount>=1)&&(previousPage<=currentPage))
    {
        switch(((Album *) xmlParser->albumname[0])->layOut)
        {
            case 12:
            {
                videoAlbumShowing = TRUE;
                videoInFirstPage = TRUE;
                if(videoInFirstPage)
                {
                    videoInFirstPage = FALSE;
                    [self facebookButton];
                }
                loadVideo = ((Album *) xmlParser->albumname[0])->mainImage[0];
                if(loadVideo == NULL)
                {
                        [self defaultImage];
                        UIImageView *finalImageView = [[UIImageView alloc] init];
                            //for Iphone
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5 & iPod5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    finalImageView.frame = CGRectMake(10, 10, 508, 268);
                                    CGFloat scaleSize = 0.2f;
                                    oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone5" bundle:nil];
                                    [UIView commitAnimations];
                                    
                                    UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                                              scale:scaleSize
                                                                        orientation:imagePath.imageOrientation];
                                    
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                                    [self.view addSubview:newView];
                                    [newView addSubview:oneView.view];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme.png"];
                                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        
                                    }
                                    [oneView->imageViewOne addSubview:finalImageView];
                                    finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                                    [finalImageView setImage:smallImage];
                                    //[finalImageView addSubview:overlayView];
                                    if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                        
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                        [oneView.view addSubview:commentLabel];
                                    }
                                    finalImageView = nil;
                                    smallImage = nil;
                                    commentLabel = NULL;
                                }
                                //upto iPhone4 & iPod4
                                else
                                {
                                    finalImageView.frame = CGRectMake(10, 10, 420, 268);
                                    CGFloat scaleSize = 0.2f;
                                    oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone" bundle:nil];
                                    [UIView commitAnimations];
                                    
                                    UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                                              scale:scaleSize
                                                                        orientation:imagePath.imageOrientation];
                                    
                                    smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                                    [self.view addSubview:newView];
                                    [newView addSubview:oneView.view];
                                    if([themeName isEqualToString:@"iOS Theme"])
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    }
                                    else
                                    {
                                        backGroundTheme = @"bg_";
                                        backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                        backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                        oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        
                                    }
                                    [oneView->imageViewOne addSubview:finalImageView];
                                    finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                                    [finalImageView setImage:smallImage];
                                    if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                    {
                                        CGFloat constrainedSize = 265.0f;
                                        UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                        CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                 constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                     lineBreakMode:NSLineBreakByWordWrapping];
                                        
                                        commentLabel = [[UILabel alloc]init];
                                        commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                        [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                        
                                        [commentLabel setBackgroundColor:[UIColor blackColor]];
                                        [commentLabel setTextColor:[UIColor whiteColor]];
                                        [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                        [oneView.view addSubview:commentLabel];
                                    }
                                    finalImageView = nil;
                                    smallImage = nil;
                                    commentLabel = NULL;
                                }
                                
                            }
                            else
                            {
                                finalImageView.frame = CGRectMake(10, 10, 900, 704);
                                CGFloat scaleSize = 0.2f;
                                oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_ipad" bundle:nil];
                                
                                [UIView commitAnimations];
                                
                                UIImage *smallImage = [UIImage imageWithCGImage:imagePath.CGImage
                                                                          scale:scaleSize
                                                                    orientation:imagePath.imageOrientation];
                                
                                smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                                [self.view addSubview:newView];
                                [newView addSubview:oneView.view];
                                if([themeName isEqualToString:@"iOS Theme"])
                                {
                                    backGroundTheme = @"bg_";
                                    backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                    backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                    oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                }
                                else
                                {
                                    backGroundTheme = @"bg_";
                                    backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                    backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme.png"];
                                    oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    
                                }
                                [oneView->imageViewOne addSubview:finalImageView];
                                finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                                [finalImageView setImage:smallImage];
                                
                                if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                {
                                    CGFloat constrainedSize = 265.0f;
                                    UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                    CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                    
                                    commentLabel = [[UILabel alloc]init];
                                    commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                    [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                    
                                    [commentLabel setBackgroundColor:[UIColor blackColor]];
                                    [commentLabel setTextColor:[UIColor whiteColor]];
                                    [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                    [oneView.view addSubview:commentLabel];
                                }
                                finalImageView = nil;
                                smallImage = nil;
                                commentLabel = NULL;
                            }
                }
                
                else
                {
                loadVideo= [loadVideo stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                //for error MEssage to remove initialize this
                UIGraphicsBeginImageContext(CGSizeMake(1,1));
                moviePlayerVC = [[MPMoviePlayerViewController alloc] initWithContentURL:[NSURL URLWithString:loadVideo]];
                UIGraphicsEndImageContext();
                [moviePlayerVC.moviePlayer prepareToPlay];
                if([themeName isEqualToString:@"Glass"])
                {
                    [audioButton setBackgroundColor:[UIColor blackColor]];
                }
                if([albumName isEqualToString:@"VideoAlbum"])
                {
                    [self.view addSubview:newView];
                }
                else
                {
                    [self.view addSubview: newView];
                }
                [moviePlayerVC.view setFrame: newView.bounds];
                [newView addSubview: moviePlayerVC.view];
                [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(movieFinishedCallback:) name:MPMoviePlayerDidExitFullscreenNotification object:nil];
                [moviePlayerVC.moviePlayer play];
                videoShow = TRUE;
                }
                [self showExtra];
                break;
            }
                
                
            case 1:
            {
                NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[0];
                loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                
                
                ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                {
                    if(myasset == NULL)
                    {
                        [self defaultImage];
                    }
                    CGImageRef iref;
                    if(myasset == NULL)
                        iref = [imagePath CGImage];
                    else
                    {
                        ALAssetRepresentation *rep = [myasset defaultRepresentation];
                        iref = [rep fullScreenImage];
                        temp = [UIImage imageWithCGImage:iref];
                       
                    }

                     UIImageView *finalImageView = [[UIImageView alloc] init];
                    
                    if (iref)
                    {
                        //for Iphone
                        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                        {
                            //for iPhone5 & iPod5
                            if([[UIScreen mainScreen]bounds].size.height == 568)
                            {
                                finalImageView.frame = CGRectMake(10, 10, 508, 268);
                                CGFloat scaleSize = 0.2f;
                                oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone5" bundle:nil];
                                [UIView commitAnimations];
                                
                                UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                          scale:scaleSize
                                                                    orientation:temp.imageOrientation];
                                
                                smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                                [self.view addSubview:newView];
                                [newView addSubview:oneView.view];
                                oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                                if([themeName isEqualToString:@"iOS Theme"])
                                {
                                    backGroundTheme = @"bg_";
                                    backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                    backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                    oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                }
                                else
                                {
                                    backGroundTheme = @"bg_";
                                    backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                    backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme.png"];
                                    oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    
                                }
                                [oneView->imageViewOne addSubview:finalImageView];
                                finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                                [finalImageView setImage:smallImage];
                                //[finalImageView addSubview:overlayView];
                                if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                {
                                    CGFloat constrainedSize = 265.0f;
                                    UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                    CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                    
                                    commentLabel = [[UILabel alloc]init];
                                    commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                    [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                    
                                    [commentLabel setBackgroundColor:[UIColor blackColor]];
                                    [commentLabel setTextColor:[UIColor whiteColor]];
                                    [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                    [oneView.view addSubview:commentLabel];
                                }
                                finalImageView = nil;
                                smallImage = nil;
                                commentLabel = NULL;
                            }
                            //upto iPhone4 & iPod4
                            else
                            {
                                finalImageView.frame = CGRectMake(10, 10, 420, 268);
                                CGFloat scaleSize = 0.2f;
                                oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_iphone" bundle:nil];
                                [UIView commitAnimations];
                                
                                UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                          scale:scaleSize
                                                                    orientation:temp.imageOrientation];
                                
                                smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                                [self.view addSubview:newView];
                                [newView addSubview:oneView.view];
                                oneView->touchImageURL = [NSString stringWithString:loadImage] ;
                                if([themeName isEqualToString:@"iOS Theme"])
                                {
                                    backGroundTheme = @"bg_";
                                    backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                    backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                    oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                }
                                else
                                {
                                    backGroundTheme = @"bg_";
                                    backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                    backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                    oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                    
                                }
                                [oneView->imageViewOne addSubview:finalImageView];
                                finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                                [finalImageView setImage:smallImage];
                                if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                {
                                    CGFloat constrainedSize = 265.0f;
                                    UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                    CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                             constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                 lineBreakMode:NSLineBreakByWordWrapping];
                                    
                                    commentLabel = [[UILabel alloc]init];
                                    commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                    [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                    
                                    [commentLabel setBackgroundColor:[UIColor blackColor]];
                                    [commentLabel setTextColor:[UIColor whiteColor]];
                                    [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                    [oneView.view addSubview:commentLabel];
                                }
                                finalImageView = nil;
                                smallImage = nil;
                                commentLabel = NULL;

                            }
                        }
                        else
                        {
                            finalImageView.frame = CGRectMake(10, 10, 900, 704);
                            CGFloat scaleSize = 0.2f;
                            oneView = [[viewerLayOutOne alloc] initWithNibName:@"viewerLayOutOne_ipad" bundle:nil];
                            
                            [UIView commitAnimations];
                            
                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                      scale:scaleSize
                                                                orientation:temp.imageOrientation];
                            
                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:finalImageView.frame.size.width];
                            [self.view addSubview:newView];
                            [newView addSubview:oneView.view];
                            oneView->touchImageURL = [NSString stringWithString:loadImage];
                            if([themeName isEqualToString:@"iOS Theme"])
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                            }
                            else
                            {
                                backGroundTheme = @"bg_";
                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme.png"];
                                oneView.imageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                
                            }
                            [oneView->imageViewOne addSubview:finalImageView];
                            finalImageView.contentMode = UIViewContentModeScaleAspectFit;
                            [finalImageView setImage:smallImage];
                    
                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                            {
                                CGFloat constrainedSize = 265.0f;
                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                
                                commentLabel = [[UILabel alloc]init];
                                commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                
                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                [commentLabel setTextColor:[UIColor whiteColor]];
                                [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                [oneView.view addSubview:commentLabel];
                            }
                            finalImageView = nil;
                            smallImage = nil;
                            commentLabel = NULL;
                        }
                    }
                    
                };
                
                
                ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                {
                    NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                };
                
                if(loadImage && [loadImage length])
                {
                    
                    NSURL *asseturl = [NSURL URLWithString:loadImage];
                    [assetsLibrary assetForURL:asseturl
                                   resultBlock:resultblock
                                  failureBlock:failureblock];
                }
                [self showExtra];
                
                break;
            }
                
            case 2:
            {

                for(int i=0;i<2;i++)
                {
                    switch(i)
                    {
                            
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    temp = [UIImage imageWithCGImage:iref];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone5" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            
                                            [self.view addSubview:newView];
                                            [newView addSubview:twoView.view];
                                            [twoView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                                twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                            twoFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                            [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                            twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                            [twoFinalImageOne setImage: smallImage];
                                            twoFinalImageOne = nil;
                                            smallImage = nil;

                                        }
                                        else
                                        {
                                            twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_iphone" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            
                                            [self.view addSubview:newView];
                                            [newView addSubview:twoView.view];
                                            [twoView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                                twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                            twoFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                            [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                            twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                            [twoFinalImageOne setImage: smallImage];
                                            twoFinalImageOne = nil;
                                            smallImage = nil;
                                        }
                                    }
                                        
                                    //for Ipad
                                    else
                                    {
                                        twoView = [[viewerLayOutTwo alloc] initWithNibName:@"viewerLayOutTwo_ipad" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];
                                        [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                            twoView.twoimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];

                                        }
                                        UIImageView *twoFinalImageOne = [[UIImageView alloc] init];
                                        twoFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageOne.frame.size.width];
                                        [twoView->twoimageViewOne addSubview:twoFinalImageOne];
                                        twoFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoFinalImageOne setImage: smallImage];
                                        twoFinalImageOne = nil;
                                        smallImage = nil;

                                        
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    temp = [UIImage imageWithCGImage:iref];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    //for Iphone
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:twoView.view];                                      [twoView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                                twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                                
                                            }
                                            UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                            twoFinalImageTwo.frame = CGRectMake(5, 10, 254, 268);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                            twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                            [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                            [twoFinalImageTwo setImage: smallImage];
                                            twoFinalImageTwo = nil;
                                            smallImage = nil;
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [twoView.view addSubview:commentLabel];
                                                
                                            }
                                            commentLabel = NULL;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:twoView.view];                                      [twoView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                                twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                                
                                            }
                                            UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                            twoFinalImageTwo.frame = CGRectMake(5, 10, 210, 268);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                            twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                            [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                            [twoFinalImageTwo setImage: smallImage];
                                            twoFinalImageTwo = nil;
                                            smallImage = nil;
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [twoView.view addSubview:commentLabel];
                                                
                                            }
                                            commentLabel = NULL;
                                        }
                                    }
                                    //for Ipad
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:twoView.view];                                    [twoView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];

                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                            twoView.twoimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *twoFinalImageTwo = [[UIImageView alloc] init];
                                        twoFinalImageTwo.frame = CGRectMake(5, 10, 450, 704);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:twoFinalImageTwo.frame.size.width];
                                        twoFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [twoView->twoimageViewTwo addSubview:twoFinalImageTwo];
                                        [twoFinalImageTwo setImage: smallImage];
                                        twoFinalImageTwo = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                        {
                                            
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                            
                                            
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                            [twoView.view addSubview:commentLabel];
                                            
                                        }
                                        commentLabel = NULL;

                                    
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        default:
                            break;
                    }
                }
                [self showExtra];
                break;
            }
                
            case 3:
            {
                for(int i=0;i<3;i++)
                {
                    switch(i)
                    {
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone5" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:threeView.view];
                                            [threeView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme1.png"];
                                                threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                            threeFinalImageOne.frame = CGRectMake(5, 10, 254, 268);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                            threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                            [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                            [threeFinalImageOne setImage: smallImage];
                                            threeFinalImageOne = nil;
                                            smallImage = nil;
                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_iphone" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:threeView.view];
                                            [threeView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themetwo.png"];
                                                threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                            threeFinalImageOne.frame = CGRectMake(5, 10, 210, 268);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                            threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                            [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                            [threeFinalImageOne setImage: smallImage];
                                            threeFinalImageOne = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        threeView = [[viewerLayOutThree alloc] initWithNibName:@"viewerLayOutThree_ipad" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme1.png"];
                                            threeView.threeimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageOne = [[UIImageView alloc] init];
                                        threeFinalImageOne.frame = CGRectMake(5, 10, 450, 704);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageOne.frame.size.width];
                                        threeFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewOne addSubview:threeFinalImageOne];
                                        [threeFinalImageOne setImage: smallImage];
                                        threeFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:threeView.view];
                                            [threeView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                                threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                            threeFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                            threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                            [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                            [threeFinalImageTwo setImage: smallImage];
                                            threeFinalImageTwo = nil;
                                            smallImage = nil;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:threeView.view];
                                            [threeView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                                threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                            threeFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                            threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                            [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                            [threeFinalImageTwo setImage: smallImage];
                                            threeFinalImageTwo = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                            threeView.threeimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageTwo = [[UIImageView alloc] init];
                                        threeFinalImageTwo.frame = CGRectMake(5, 10, 450,342);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageTwo.frame.size.width];
                                        threeFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewTwo addSubview:threeFinalImageTwo];
                                        [threeFinalImageTwo setImage: smallImage];
                                        threeFinalImageTwo = nil;
                                        smallImage = nil;
                                        

                                    }
                                    
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 2:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:threeView.view];
                                            [threeView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                                threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                            threeFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                            threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                            [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                            [threeFinalImageThree setImage: smallImage];
                                            threeFinalImageThree = nil;
                                            smallImage = nil;
                                            
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [threeView.view addSubview:commentLabel];
                                            }
                                            commentLabel = NULL;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:threeView.view];
                                            [threeView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                                threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                            threeFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                            threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                            [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                            [threeFinalImageThree setImage: smallImage];
                                            threeFinalImageThree = nil;
                                            smallImage = nil;
                                            
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [threeView.view addSubview:commentLabel];
                                            }
                                            commentLabel = NULL;

                                        }
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:threeView.view];
                                        [threeView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                            threeView.threeimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *threeFinalImageThree = [[UIImageView alloc] init];
                                        threeFinalImageThree.frame = CGRectMake(5, 10, 450, 342);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:threeFinalImageThree.frame.size.width];
                                        threeFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [threeView->threeimageViewThree addSubview:threeFinalImageThree];
                                        [threeFinalImageThree setImage: smallImage];
                                        threeFinalImageThree = nil;
                                        smallImage = nil;
                                        
                                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                            
                                            
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                            [threeView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        default:
                            break;
                    }
                }
                [self showExtra];
                break;
            }
                
            case 4:
            {

                for(int i=0;i<4;i++)
                {
                    switch(i)
                    {
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            fourView = [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone5" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                                fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                            fourFinalImageOne.frame = CGRectMake(5, 7, 254, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                            fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                            [fourFinalImageOne setImage: smallImage];
                                            fourFinalImageOne = nil;
                                            smallImage = nil;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            fourView = [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_iphone" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                                fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                            fourFinalImageOne.frame = CGRectMake(5, 7, 210, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                            fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                            [fourFinalImageOne setImage: smallImage];
                                            fourFinalImageOne = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        fourView = [[viewerLayOutFour alloc] initWithNibName:@"viewerLayOutFour_ipad" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                            fourView.fourimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageOne = [[UIImageView alloc] init];
                                        fourFinalImageOne.frame = CGRectMake(5, 10, 450, 342);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageOne.frame.size.width];
                                        fourFinalImageOne.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewOne addSubview:fourFinalImageOne];
                                        [fourFinalImageOne setImage: smallImage];
                                        fourFinalImageOne = nil;
                                        smallImage = nil;
                                        
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                                fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                            fourFinalImageTwo.frame = CGRectMake(5, 7, 254, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                            fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                            [fourFinalImageTwo setImage: smallImage];
                                            fourFinalImageTwo = nil;
                                            smallImage = nil;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                                fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                            fourFinalImageTwo.frame = CGRectMake(5, 7, 210, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                            fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                            [fourFinalImageTwo setImage: smallImage];
                                            fourFinalImageTwo = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                            fourView.fourimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageTwo = [[UIImageView alloc] init];
                                        fourFinalImageTwo.frame = CGRectMake(5, 10, 450, 342);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageTwo.frame.size.width];
                                        fourFinalImageTwo.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewTwo addSubview:fourFinalImageTwo];
                                        [fourFinalImageTwo setImage: smallImage];
                                        fourFinalImageTwo = nil;
                                        smallImage = nil;

                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 2:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                                fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                            fourFinalImageThree.frame = CGRectMake(5, 7, 254, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                            fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                            [fourFinalImageThree setImage: smallImage];
                                            fourFinalImageThree = nil;
                                            smallImage = nil;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                                fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                            fourFinalImageThree.frame = CGRectMake(5, 7, 210, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                            fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                            [fourFinalImageThree setImage: smallImage];
                                            fourFinalImageThree = nil;
                                            smallImage = nil;

                                        }
                                        
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                            fourView.fourimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageThree = [[UIImageView alloc] init];
                                        fourFinalImageThree.frame = CGRectMake(5, 10, 450, 342);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageThree.frame.size.width];
                                        fourFinalImageThree.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewThree addSubview:fourFinalImageThree];
                                        [fourFinalImageThree setImage: smallImage];
                                        fourFinalImageThree = nil;
                                        smallImage = nil;

                                        
                                        
                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 3:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme2.png"];
                                                fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                            fourFinalImageFour.frame = CGRectMake(5, 7, 254, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                            fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                            [fourFinalImageFour setImage: smallImage];
                                            fourFinalImageFour = nil;
                                            smallImage = nil;
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [fourView.view addSubview:commentLabel];
                                            }
                                            commentLabel = NULL;
                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:fourView.view];
                                            [fourView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themethree.png"];
                                                fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                            fourFinalImageFour.frame = CGRectMake(5, 7, 210, 130);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                            fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                            [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                            [fourFinalImageFour setImage: smallImage];
                                            fourFinalImageFour = nil;
                                            smallImage = nil;
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);
                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [fourView.view addSubview:commentLabel];
                                            }
                                            commentLabel = NULL;
                                        }
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:fourView.view];
                                        [fourView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme2.png"];
                                            fourView.fourimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *fourFinalImageFour = [[UIImageView alloc] init];
                                        fourFinalImageFour.frame = CGRectMake(5, 10, 450, 342);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:fourFinalImageFour.frame.size.width];
                                        fourFinalImageFour.contentMode = UIViewContentModeScaleAspectFit;
                                        [fourView->fourimageViewFour addSubview:fourFinalImageFour];
                                        [fourFinalImageFour setImage: smallImage];
                                        fourFinalImageFour = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                        {
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                            
                                            
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);
                                            [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [fourView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;
                                        
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                            
                        default:
                            break;
                    }
                    
                }
                [self showExtra];
                break;
            }
                
            case 9:
            {
           
                for(int i=0;i<9;i++)
                {
                    switch(i)
                    {
                        case 0:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone5" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                            nineFinalImageOne.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                            nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                            [nineFinalImageOne setImage: smallImage];
                                            nineFinalImageOne = nil;
                                            smallImage = nil;
                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_iphone" bundle:nil];
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                                nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                            nineFinalImageOne.frame = CGRectMake(3, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                            nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                            [nineFinalImageOne setImage: smallImage];
                                            nineFinalImageOne = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        nineView = [[viewerLayOutNine alloc] initWithNibName:@"viewerLayOutNine_ipad" bundle:nil];
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                            nineView.nineimageViewOne.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageOne= [[UIImageView alloc] init];
                                        nineFinalImageOne.frame = CGRectMake(3, 3, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageOne.frame.size.width];
                                        nineFinalImageOne.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewOne addSubview:nineFinalImageOne];
                                        [nineFinalImageOne setImage: smallImage];
                                        nineFinalImageOne = nil;
                                        smallImage = nil;
                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 1:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                            nineFinalImageTwo.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                            nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                            [nineFinalImageTwo setImage: smallImage];
                                            nineFinalImageTwo = nil;
                                            smallImage = nil;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                                nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                            nineFinalImageTwo.frame = CGRectMake(3, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                            nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                            [nineFinalImageTwo setImage: smallImage];
                                            nineFinalImageTwo = nil;
                                            smallImage = nil;
 
                                        }
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                            nineView.nineimageViewTwo.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageTwo= [[UIImageView alloc] init];
                                        nineFinalImageTwo.frame = CGRectMake(4, 3, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageTwo.frame.size.width];
                                        nineFinalImageTwo.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewTwo addSubview:nineFinalImageTwo];
                                        [nineFinalImageTwo setImage: smallImage];
                                        nineFinalImageTwo = nil;
                                        smallImage = nil;
                                        

                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 2:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                            nineFinalImageThree.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                            nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                            [nineFinalImageThree setImage: smallImage];
                                            nineFinalImageThree = nil;
                                            smallImage = nil;
                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                                nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                            nineFinalImageThree.frame = CGRectMake(4, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                            nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                            [nineFinalImageThree setImage: smallImage];
                                            nineFinalImageThree = nil;
                                            smallImage = nil;
                                        }
                                        
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                            nineView.nineimageViewThree.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageThree= [[UIImageView alloc] init];
                                        nineFinalImageThree.frame = CGRectMake(4, 3, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageThree.frame.size.width];
                                        nineFinalImageThree.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewThree addSubview:nineFinalImageThree];
                                        [nineFinalImageThree setImage: smallImage];
                                        nineFinalImageThree = nil;
                                        smallImage = nil;
                                        
                                        

                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 3:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                            nineFinalImageFour.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                            nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                            [nineFinalImageFour setImage: smallImage];
                                            nineFinalImageFour = nil;
                                            smallImage = nil;

                                        }
                                        //upto iPhone4 & iPod4
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                                nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                            nineFinalImageFour.frame = CGRectMake(3, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                            nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                            [nineFinalImageFour setImage: smallImage];
                                            nineFinalImageFour = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme3.png"];
                                            nineView.nineimageViewFour.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFour= [[UIImageView alloc] init];
                                        nineFinalImageFour.frame = CGRectMake(3, 3, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFour.frame.size.width];
                                        nineFinalImageFour.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFour addSubview:nineFinalImageFour];
                                        [nineFinalImageFour setImage: smallImage];
                                        nineFinalImageFour = nil;
                                        smallImage = nil;

                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 4:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                            nineFinalImageFive.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                            nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                            [nineFinalImageFive setImage: smallImage];
                                            nineFinalImageFive = nil;
                                            smallImage = nil;

                                        }
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                                nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                            nineFinalImageFive.frame = CGRectMake(3, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                            nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                            [nineFinalImageFive setImage: smallImage];
                                            nineFinalImageFive = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                            nineView.nineimageViewFive.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageFive= [[UIImageView alloc] init];
                                        nineFinalImageFive.frame = CGRectMake(4, 3, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageFive.frame.size.width];
                                        nineFinalImageFive.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewFive addSubview:nineFinalImageFive];
                                        [nineFinalImageFive setImage: smallImage];
                                        nineFinalImageFive = nil;
                                        smallImage = nil;
                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                            
                        case 5:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                            nineFinalImageSix.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                            nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                            [nineFinalImageSix setImage: smallImage];
                                            nineFinalImageSix = nil;
                                            smallImage = nil;

                                        }
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                                nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                            nineFinalImageSix.frame = CGRectMake(4, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                            nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                            [nineFinalImageSix setImage: smallImage];
                                            nineFinalImageSix = nil;
                                            smallImage = nil;

                                        }
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme4.png"];
                                            nineView.nineimageViewSix.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSix= [[UIImageView alloc] init];
                                        nineFinalImageSix.frame = CGRectMake(4, 3, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSix.frame.size.width];
                                        nineFinalImageSix.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSix addSubview:nineFinalImageSix];
                                        [nineFinalImageSix setImage: smallImage];
                                        nineFinalImageSix = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                            
                        case 6:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                            nineFinalImageSeven.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                            nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                            [nineFinalImageSeven setImage: smallImage];
                                            nineFinalImageSeven = nil;
                                            smallImage = nil;

                                        }
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                                nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                            nineFinalImageSeven.frame = CGRectMake(3, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                            nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                            [nineFinalImageSeven setImage: smallImage];
                                            nineFinalImageSeven = nil;
                                            smallImage = nil;

                                        }
                                        
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme5.png"];
                                            nineView.nineimageViewSeven.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageSeven= [[UIImageView alloc] init];
                                        nineFinalImageSeven.frame = CGRectMake(3, 4, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageSeven.frame.size.width];
                                        nineFinalImageSeven.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewSeven addSubview:nineFinalImageSeven];
                                        [nineFinalImageSeven setImage: smallImage];
                                        nineFinalImageSeven = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                            
                        case 7:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                            nineFinalImageEight.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                            nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                            [nineFinalImageEight setImage: smallImage];
                                            nineFinalImageEight = nil;
                                            smallImage = nil;
                                        }
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefour.png"];
                                                nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                            nineFinalImageEight.frame = CGRectMake(3, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                            nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                            [nineFinalImageEight setImage: smallImage];
                                            nineFinalImageEight = nil;
                                            smallImage = nil;
                                        }
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                            nineView.nineimageViewEight.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageEight= [[UIImageView alloc] init];
                                        nineFinalImageEight.frame = CGRectMake(4, 4, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageEight.frame.size.width];
                                        nineFinalImageEight.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewEight addSubview:nineFinalImageEight];
                                        [nineFinalImageEight setImage: smallImage];
                                        nineFinalImageEight = nil;
                                        smallImage = nil;
                                    }
                                    
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                        case 8:
                        {
                            NSString *loadImage = ((Album*) [xmlParser->albumname objectAtIndex:0])->mainImage[i];
                            loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                            ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                            {
                                if(myasset == NULL)
                                {
                                    [self defaultImage];
                                }
                                CGImageRef iref;
                                if(myasset == NULL)
                                    iref = [imagePath CGImage];
                                else
                                {
                                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                                    iref = [rep fullScreenImage];
                                    
                                }
                                CGFloat scaleSize = 0.2f;
                                if (iref)
                                {
                                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                    {
                                        //for iPhone5 & iPod5
                                        if([[UIScreen mainScreen]bounds].size.height == 568)
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_iphone5_theme3.png"];
                                                nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                            nineFinalImageNine.frame = CGRectMake(3, 3, 170, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                            nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                            [nineFinalImageNine setImage: smallImage];
                                            nineFinalImageNine = nil;
                                            smallImage = nil;
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [nineView.view addSubview:commentLabel];
                                            }
                                            commentLabel = NULL;
                                        }
                                        else
                                        {
                                            temp = [UIImage imageWithCGImage:iref];
                                            UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                      scale:scaleSize
                                                                                orientation:temp.imageOrientation];
                                            [self.view addSubview:newView];
                                            [newView addSubview:nineView.view];
                                            [nineView->touchImageURL addObject:loadImage];
                                            if([themeName isEqualToString:@"iOS Theme"])
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                                nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            else
                                            {
                                                backGroundTheme = @"bg_";
                                                backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                                backGroundTheme = [backGroundTheme stringByAppendingString:@"_themefive.png"];
                                                nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                            }
                                            UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                            nineFinalImageNine.frame = CGRectMake(4, 3, 140, 90);
                                            smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                            nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                            [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                            [nineFinalImageNine setImage: smallImage];
                                            nineFinalImageNine = nil;
                                            smallImage = nil;
                                            if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                            {
                                                
                                                CGFloat constrainedSize = 265.0f;
                                                UIFont * myFont = [UIFont fontWithName:@"Arial" size:14];
                                                CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                         constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                             lineBreakMode:NSLineBreakByWordWrapping];
                                                
                                                
                                                commentLabel = [[UILabel alloc]init];
                                                commentLabel.frame = CGRectMake(10, 260, textSize.width,textSize.height);                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                                
                                                [commentLabel setBackgroundColor:[UIColor blackColor]];
                                                [commentLabel setTextColor:[UIColor whiteColor]];
                                                [commentLabel setFont:[UIFont systemFontOfSize:12]];
                                                [nineView.view addSubview:commentLabel];
                                            }
                                            commentLabel = NULL;
                                        }
                                    }
                                    else
                                    {
                                        
                                        temp = [UIImage imageWithCGImage:iref];
                                        UIImage *smallImage = [UIImage imageWithCGImage:temp.CGImage
                                                                                  scale:scaleSize
                                                                            orientation:temp.imageOrientation];
                                        [self.view addSubview:newView];
                                        [newView addSubview:nineView.view];
                                        [nineView->touchImageURL addObject:loadImage];
                                        if([themeName isEqualToString:@"iOS Theme"])
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_theme.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        else
                                        {
                                            backGroundTheme = @"bg_";
                                            backGroundTheme = [backGroundTheme stringByAppendingString:themeName];
                                            backGroundTheme = [backGroundTheme stringByAppendingString:@"_ipad_theme6.png"];
                                            nineView.nineimageViewNine.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:backGroundTheme]];
                                        }
                                        UIImageView *nineFinalImageNine= [[UIImageView alloc] init];
                                        nineFinalImageNine.frame = CGRectMake(4, 4, 300, 235);
                                        smallImage = [ViewerViewController imageWithImage:smallImage scaledToWidth:nineFinalImageNine.frame.size.width];
                                        nineFinalImageNine.contentMode =UIViewContentModeScaleAspectFit;
                                        [nineView->nineimageViewNine addSubview:nineFinalImageNine];
                                        [nineFinalImageNine setImage: smallImage];
                                        nineFinalImageNine = nil;
                                        smallImage = nil;
                                        if(((Album*) [xmlParser->albumname objectAtIndex:0])->comment)
                                        {
                                            
                                            CGFloat constrainedSize = 265.0f;
                                            UIFont * myFont = [UIFont fontWithName:@"Arial" size:18];
                                            CGSize textSize = [((Album*) [xmlParser->albumname objectAtIndex:0])->comment sizeWithFont: myFont
                                                                                                                     constrainedToSize:CGSizeMake(constrainedSize, CGFLOAT_MAX)
                                                                                                                         lineBreakMode:NSLineBreakByWordWrapping];
                                            
                                            
                                            commentLabel = [[UILabel alloc]init];
                                            commentLabel.frame = CGRectMake(10, 680, textSize.width,textSize.height);                                                [commentLabel setText:((Album*) [xmlParser->albumname objectAtIndex:0])->comment];
                                            
                                            [commentLabel setBackgroundColor:[UIColor blackColor]];
                                            [commentLabel setTextColor:[UIColor whiteColor]];
                                            [commentLabel setFont:[UIFont systemFontOfSize:16]];
                                            [nineView.view addSubview:commentLabel];
                                        }
                                        commentLabel = NULL;

                                    }
                                }
                            };
                            
                            
                            ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                            {
                                NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                            };
                            
                            if(loadImage && [loadImage length])
                            {
                                
                                NSURL *asseturl = [NSURL URLWithString:loadImage];
                                [assetsLibrary assetForURL:asseturl
                                               resultBlock:resultblock
                                              failureBlock:failureblock];
                            }
                            break;
                        }
                            
                        default:
                            break;
                    }
                    
                }
                [self showExtra];
                break;
            }
                
            default:
                break;
        }

    }
    [self facebookButton];
    if((pageCount==1)&&(previousPage==currentPage))
    {
        [oneFingerSwipeLeft setEnabled:NO];
        [oneFingerSwipeRight setEnabled:NO];
        [autoPlayButton setHidden:YES];
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(528.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(440.0, 278, 40.0, 42);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [nextButton setShowsTouchWhenHighlighted:NO];
                [nextButton setUserInteractionEnabled:NO];
                [self.view addSubview:nextButton];
            }
            else
            {
                finalNextButton = @"next_";
                finalNextButton = [finalNextButton stringByAppendingString:themeName];
                finalNextButton = [finalNextButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *nextBtn = [UIImage imageNamed:finalNextButton];
                nextButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                nextButton.frame = CGRectMake(920, 664.4, 104, 103.6);
                if([themeName isEqualToString:@"Glass"])
                {
                    [nextButton setBackgroundColor:[UIColor blackColor]];
                }
                [nextButton setBackgroundImage:nextBtn forState:UIControlStateNormal];
                [nextButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:nextButton];
            }
            
        }
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5 & iPod5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(528.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];

            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(440.0, 237, 40.0, 41);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];

            }
        }
        else
        {
            if([themeName isEqualToString:@"iOS Theme"])
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            else
            {
                finalPreviousButton = @"prev_";
                finalPreviousButton = [finalPreviousButton stringByAppendingString:themeName];
                finalPreviousButton = [finalPreviousButton stringByAppendingString:@"_iPad_d.png"];
                UIImage *prevBtn = [UIImage imageNamed:finalPreviousButton];
                prevButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
                prevButton.frame = CGRectMake(920, 561, 104, 103.4);
                if([themeName isEqualToString:@"Glass"])
                {
                    [prevButton setBackgroundColor:[UIColor blackColor]];
                }
                [prevButton setBackgroundImage:prevBtn forState:UIControlStateNormal];
                [prevButton addTarget:nil action:nil forControlEvents:UIControlEventTouchUpInside];
                [self.view addSubview:prevButton];
            }
            
        }
    }
}

/*-(void)autoPlayButton
{
    NSString *deviceType = [UIDevice currentDevice].model;
    if([deviceType rangeOfString:@"iPhone"].location != NSNotFound)
    {
        //iPhone
        autoPlayButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        autoPlayButton.frame = CGRectMake(340.0, 2.0, 60.0, 28.0);
        [[autoPlayButton layer] setCornerRadius:15.0f];
        [autoPlayButton setTitle:@"Play" forState:UIControlStateNormal];
        [autoPlayButton setBackgroundColor:[UIColor clearColor]];
        [autoPlayButton addTarget:self action:@selector(autoplayClicked) forControlEvents:UIControlEventTouchUpInside];
        [topNavigationBar addSubview:autoPlayButton];
        
    }
    else
    {
        autoPlayButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        autoPlayButton.frame = CGRectMake(373.0, 6.0, 25.0, 20.0);
        [[autoPlayButton layer] setCornerRadius:15.0f];
        [autoPlayButton setTitle:@"Play" forState:UIControlStateNormal];
        [autoPlayButton setBackgroundColor:[UIColor clearColor]];
        [autoPlayButton addTarget:self action:@selector(autoplayClicked) forControlEvents:UIControlEventTouchUpInside];
        [topNavigationBar addSubview:autoPlayButton];
        
    }
}
-(void)autoPlayStopButton
{
    NSString *deviceType = [UIDevice currentDevice].model;
    if([deviceType rangeOfString:@"iPhone"].location != NSNotFound)
    {
        //iPhone
        autoPlayStopButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        autoPlayStopButton.frame = CGRectMake(300.0, 2.0, 60.0, 28.0);
        [[autoPlayStopButton layer] setCornerRadius:15.0f];
        [autoPlayStopButton setTitle:@"stop" forState:UIControlStateNormal];
        [autoPlayStopButton setBackgroundColor:[UIColor clearColor]];
        [autoPlayStopButton addTarget:self action:@selector(isAutoPlayToBeStopped) forControlEvents:UIControlEventTouchUpInside];
        [topNavigationBar addSubview:autoPlayStopButton];
    }
    else
    {
        autoPlayStopButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        autoPlayStopButton.frame = CGRectMake(373.0, 6.0, 25.0, 20.0);
        [[autoPlayStopButton layer] setCornerRadius:15.0f];
        [autoPlayStopButton setTitle:@"stop" forState:UIControlStateNormal];
        [autoPlayStopButton setBackgroundColor:[UIColor clearColor]];
        [autoPlayStopButton addTarget:self action:@selector(isAutoPlayToBeStopped) forControlEvents:UIControlEventTouchUpInside];
        [topNavigationBar addSubview:autoPlayStopButton];
    }
    
}

- (IBAction)autoplayClicked
{
    [autoPlayButton setHidden:YES];
    [autoPlayStopButton setHidden:NO];
    [viewer setEnabled:NO];
    int64_t delayInSeconds = 0.1;
    dispatch_time_t popTime = dispatch_time(DISPATCH_TIME_NOW, delayInSeconds * NSEC_PER_SEC);
        
     dispatch_after(popTime, dispatch_get_main_queue(), ^(void)
     {
         if(check == checkPage - 1 || isToBeStopped == true)
         {
             isToBeStopped = FALSE;
             return;
         }

        [self performSelector:@selector(nextButtonClicked) withObject:nil afterDelay:.01];
        sleep(1);
        check++;
        [self autoplayClicked];
     
     });
   
}

-(IBAction)isAutoPlayToBeStopped
{
    [autoPlayButton setHidden:NO];
    [autoPlayStopButton setHidden:YES];
    isToBeStopped = TRUE;
    [viewer setEnabled:YES];
}*/

-(void)viewClicked
{
   [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
    NSArray *homeDomains = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [homeDomains objectAtIndex:0];
    databasePath = [documentsDirectory stringByAppendingPathComponent:@"album.db"];
    if(sqlite3_open([databasePath UTF8String], &albumDB)==SQLITE_OK)
    {
        const char *sqlStatement ="select * from ALBUM";
        sqlite3_stmt *compiledStatement;
        if(sqlite3_prepare_v2(albumDB, sqlStatement,-1, &compiledStatement , NULL)== SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                aPassword =[NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement,1)];
            }
        }
        sqlite3_finalize(compiledStatement);
    }
    sqlite3_close(albumDB);

        NSString *text1 = [[passcodeAlert textFieldAtIndex:0]text];

        if([text1 isEqualToString:aPassword])
        {
            currentPage = 0;
            previousPage = 0;
            [self showAlbum];
            [self setAlbumNameandTheme];
        }
        else
        {
            passcodeAlert = [[UIAlertView alloc] initWithTitle:@"wrong Passcode entered "
                                                       message:nil
                                                      delegate:nil
                                             cancelButtonTitle:@"Ok"
                                             otherButtonTitles:nil];
            [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
            [passcodeAlert show];
        }
    
}

- (void)viewDidUnload
{
    [super viewDidUnload];
}

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
}

- (void)viewWillDisappear:(BOOL)animated
{
	[super viewWillDisappear:animated];

}
- (void)viewDidDisappear:(BOOL)animated
{
	[super viewDidDisappear:animated];
}

-(void)checkingDatabase
{
    NSArray *homeDomains = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [homeDomains objectAtIndex:0];
    databasePath = [documentsDirectory stringByAppendingPathComponent:@"album.db"];
    if(sqlite3_open([databasePath UTF8String], &albumDB)==SQLITE_OK)
    {
        const char *sqlStatement ="select * from ALBUM";
        sqlite3_stmt *compiledStatement;
        if(sqlite3_prepare_v2(albumDB, sqlStatement,-1, &compiledStatement , NULL)== SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                aName =[NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement,0)];
                [databaseArray addObject:aName];
            }
        }
        sqlite3_finalize(compiledStatement);
    }
    sqlite3_close(albumDB);
  
}

- (void)longPress:(id)sender
{
    counter = 0;
   if(Press)
   {
       UIGestureRecognizer *recognizer = (UIGestureRecognizer*) sender;
       UIButton *button = (UIButton*)[recognizer view];
       longPath = button.currentTitle;
       albumXmlPath = button.currentTitle;
       xmlParser = [[XMLParser alloc] loadXML:albumXmlPath];
       themeName = [NSString stringWithString:((Album *) xmlParser->albumname[0])->themeName];
       passcodeAlbum = [NSString stringWithString:((Album *) xmlParser->albumname[0])->AlbumName];
       if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
       {
           //for iPhone5
           if([[UIScreen mainScreen]bounds].size.height == 568)
           {
               if([unEditAlbum containsObject:passcodeAlbum])
               {
                   noEditActionSheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"cancel" destructiveButtonTitle:nil otherButtonTitles:@"Change Theme",@"Protect Album", nil];
                   noEditActionSheet.actionSheetStyle = UIActionSheetStyleDefault;
                   noEdit = TRUE;
                   Press = FALSE;
                   [noEditActionSheet showInView:self.view];
               }
               else
               {
                   popupQuery = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"cancel" destructiveButtonTitle:@"Delete Album" otherButtonTitles:@"Change Theme",@"Protect Album",@"Edit Album", nil];
                   popupQuery.actionSheetStyle = UIActionSheetStyleDefault;
                   Press = FALSE;
                   [popupQuery showInView:self.view];
               }

           }
           else
           {
               if([unEditAlbum containsObject:passcodeAlbum])
               {
                   noEditActionSheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"cancel" destructiveButtonTitle:nil otherButtonTitles:@"Change Theme",@"Protect Album", nil];
                   noEditActionSheet.actionSheetStyle = UIActionSheetStyleDefault;
                   noEdit = TRUE;
                   Press = FALSE;
                   [noEditActionSheet showInView:self.view];
               }
               else
               {
                   popupQuery = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"cancel" destructiveButtonTitle:@"Delete Album" otherButtonTitles:@"Change Theme",@"Protect Album",@"Edit Album", nil];
                   popupQuery.actionSheetStyle = UIActionSheetStyleDefault;
                   Press = FALSE;
                   [popupQuery showInView:self.view];
               }

           }
        }
       else
       {
           if([unEditAlbum containsObject:passcodeAlbum])
           {
               noEditActionSheet = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"cancel" destructiveButtonTitle:nil otherButtonTitles:@"Change Theme",@"Protect Album", nil];
               noEditActionSheet.actionSheetStyle = UIActionSheetStyleBlackOpaque;
               noEdit = TRUE;
               Press = FALSE;
               [noEditActionSheet showInView:self.view];
           }
           else
           {
               popupQuery = [[UIActionSheet alloc] initWithTitle:nil delegate:self cancelButtonTitle:@"cancel" destructiveButtonTitle:@"Delete Album" otherButtonTitles:@"Change Theme",@"Protect Album",@"Edit Album", nil];
               popupQuery.actionSheetStyle = UIActionSheetStyleDefault;
               Press = FALSE;
               [popupQuery showInView:self.view];
               
           }
       }
   }
   
}
- (void)actionSheet:(UIActionSheet *)actionSheet clickedButtonAtIndex:(NSInteger)buttonIndex
{
    
    //-------------------From Camera Button Click Execute this loop----------------------//
    if(showCameraAlert)
    {
        switch (buttonIndex)
        {
            case 0:
            {
                newAlbumAlert = [[UIAlertView alloc] initWithTitle:nil
                                                                        message:@"Name your new Picvie Album"
                                                                       delegate:self
                                                              cancelButtonTitle:@"Cancel"
                                                              otherButtonTitles:@"Create", nil];
                newAlbumAlert.alertViewStyle = UIAlertViewStylePlainTextInput;
                [newAlbumAlert show];
                cameraControl = nil;

            }
                break;
            case 1:
            {
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        cameraAlbumTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 568,288) style:UITableViewStyleGrouped];
                        cameraAlbumTableView.dataSource = self;
                        cameraAlbumTableView.delegate = self;
                        cameraAlbumTableView.tag = 6;
                        cameraAlbumTableView.rowHeight = 30.f;
                        [cameraAlbumTableView setBackgroundColor:[UIColor grayColor]];
                        [viewer setEnabled:YES];
                        [self.view addSubview: cameraAlbumTableView];
                        cameraControl = nil;
                        viewer.title = @"Back";
                        tableviewRemove = TRUE;
                    }
                    else
                    {
                        cameraAlbumTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 480,288) style:UITableViewStyleGrouped];
                        cameraAlbumTableView.dataSource = self;
                        cameraAlbumTableView.delegate = self;
                        cameraAlbumTableView.tag = 6;
                        cameraAlbumTableView.rowHeight = 30.f;
                        [cameraAlbumTableView setBackgroundColor:[UIColor grayColor]];
                        [viewer setEnabled:YES];
                        [self.view addSubview: cameraAlbumTableView];
                        cameraControl = nil;
                        viewer.title = @"Back";
                        tableviewRemove = TRUE;
                    }
                }
                else
                {
                    cameraAlbumTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 44, 1024,724) style:UITableViewStyleGrouped];
                    cameraAlbumTableView.dataSource = self;
                    cameraAlbumTableView.delegate = self;
                    cameraAlbumTableView.tag = 6;
                    cameraAlbumTableView.rowHeight = 50.f;
                    [cameraAlbumTableView setBackgroundColor:[UIColor grayColor]];
                    [viewer setEnabled:YES];
                    [self.view addSubview: cameraAlbumTableView];
                    cameraControl = nil;
                    viewer.title = @"Back";
                    tableviewRemove = TRUE;
                }
            }
                break;
            case 2:
            {
                cameraControl = nil;
            }
                break;
            default:
                break;
        }
        showCameraAlert = FALSE;
    }
    //---------------------------Long Press Action For Album you can't Edit-------------------------//
    else if (noEdit)
    {
        switch (buttonIndex)
        {
            case 0:
            {
                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                {
                    //for iPhone5
                    if([[UIScreen mainScreen]bounds].size.height == 568)
                    {
                        changeThemeTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 568,288)
                                                                            style:UITableViewStyleGrouped];
                        changeThemeTableView.dataSource = self;
                        changeThemeTableView.delegate = self;
                        changeThemeTableView.tag = 2;
                        [self.view addSubview: changeThemeTableView];
                        [viewer setEnabled:YES];
                        viewer.title = @"Back";
                        tableviewRemove = TRUE;
                        back = TRUE;

                    }
                    else
                    {
                        changeThemeTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 480,288)
                                                                            style:UITableViewStyleGrouped];
                        changeThemeTableView.dataSource = self;
                        changeThemeTableView.delegate = self;
                        changeThemeTableView.tag = 2;
                        [self.view addSubview: changeThemeTableView];
                        [viewer setEnabled:YES];
                        viewer.title = @"Back";
                        tableviewRemove = TRUE;
                        back = TRUE;

                    }
                }
                else
                {
                    changeThemeTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 44, 1024,724)
                                                                        style:UITableViewStyleGrouped];
                    changeThemeTableView.dataSource = self;
                    changeThemeTableView.delegate = self;
                    changeThemeTableView.tag = 2;
                    [self.view addSubview: changeThemeTableView];
                    [viewer setEnabled:YES];
                    viewer.title = @"Back";
                    tableviewRemove = TRUE;
                    back = TRUE;
                }
            }
            noEditActionSheet = nil;
            Press = TRUE;
            noEdit = FALSE;
            break;
            case 1:
            {
                NSString *protectString;
                for(int k = 0; k<[databaseArray count];k++)
                {
                    if([passcodeAlbum isEqualToString:databaseArray[k]])
                    {
                        protectString = [NSString stringWithString:databaseArray[k]];
                        break;
                    }
                }
                if([passcodeAlbum isEqualToString:protectString])
                {
                    unEditUnProtect = TRUE;
                    dataBaseAlert = [[UIAlertView alloc] initWithTitle:@"This Album is already protected"
                                                               message:@"Do you want to unprotect it?"
                                                              delegate:self
                                                     cancelButtonTitle:@"No"
                                                     otherButtonTitles:@"Yes",nil];
                    [dataBaseAlert show];
                }
                else
                {
                    unEditProtect = TRUE;
                    dataBaseAlert = [[UIAlertView alloc] initWithTitle:nil
                                                               message:@"Do You Want to Protect This Album"
                                                              delegate:self
                                                     cancelButtonTitle:@"No"
                                                     otherButtonTitles:@"Yes",nil];
                     [dataBaseAlert show];
                }
                
            }
                noEditActionSheet = nil;
                Press  = TRUE;
                noEdit = FALSE;
                break;
            case 2:
                noEditActionSheet = nil;
                Press = TRUE;
                noEdit = FALSE;
                break;
                
            default:
                Press = TRUE;
                noEdit = FALSE;
                break;
                
            }
        
    }
    //-----------------------------Long Press Action Editable Album--------------------------------//
    else
    {
    switch (buttonIndex)
    {
        case 0:
        { 
                NSFileManager *filemgr;
                
                NSString *newDir;
                
                filemgr =[NSFileManager defaultManager];
                
                newDir = [NSString stringWithString:longPath];
                NSString *dir =[longPath stringByDeletingLastPathComponent];
                
                [filemgr removeItemAtPath:dir error: nil];
                
                
                NSError *error;
                if ([[filemgr contentsOfDirectoryAtPath:dir error:&error] count]==0)
                {
                    // check if number of files == 0 ==> empty directory
                    if (!error)
                    {
                        [filemgr removeItemAtPath:dir error:nil];
                    }
                    
                }
                dispatch_async(dispatch_get_main_queue(), ^{
                    loadingAlertView = [[UIAlertView alloc] initWithTitle:@"Please Wait Your Album is Being Loaded..."
                                                                  message:nil
                                                                 delegate:self
                                                        cancelButtonTitle:nil
                                                        otherButtonTitles:nil];
                    spinners = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
                    spinners.center = CGPointMake(139.5, 75.5);
                    [spinners setUserInteractionEnabled:YES];
                    [loadingAlertView addSubview:spinners];
                    [spinners startAnimating];
                    [loadingAlertView show];
                    [self updateUI];
                });
                NSArray *homeDomains = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
                NSString *documentsDirectory = [homeDomains objectAtIndex:0];
                databasePath = [documentsDirectory stringByAppendingPathComponent:@"album.db"];
                if(sqlite3_open([databasePath UTF8String], &albumDB)==SQLITE_OK)
                {
                    NSString *querySQL=[NSString stringWithFormat:@"delete from ALBUM where ALBUMNAME=\'%@\'",passcodeAlbum];
                    const char *query_stmt=[querySQL UTF8String];
                    
                    char *errMsg;
                    if (sqlite3_exec(albumDB, query_stmt, NULL, NULL, &errMsg) != SQLITE_OK)
                    {
                        status.text = @"Error";
                    }
                    else
                    {
                        status.text = @"sucess";
                    }
                }
                sqlite3_close(albumDB);
            }
            popupQuery = nil;
            Press = TRUE;
        break;
            
        case 1:
        {
            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
            {
                //for iPhone5
                if([[UIScreen mainScreen]bounds].size.height == 568)
                {
                    changeThemeTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 568,288)
                                                                        style:UITableViewStyleGrouped];
                    changeThemeTableView.dataSource = self;
                    changeThemeTableView.delegate = self;
                    changeThemeTableView.tag = 2;
                    [self.view addSubview: changeThemeTableView];
                    [viewer setEnabled:YES];
                    viewer.title = @"Back";
                    tableviewRemove = TRUE;
                    back = TRUE;
                }
                else
                {
                    changeThemeTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 480,288)
                                                                        style:UITableViewStyleGrouped];
                    changeThemeTableView.dataSource = self;
                    changeThemeTableView.delegate = self;
                    changeThemeTableView.tag = 2;
                    [self.view addSubview: changeThemeTableView];
                    [viewer setEnabled:YES];
                    viewer.title = @"Back";
                    tableviewRemove = TRUE;
                    back = TRUE;
                }
            }
            else
            {
                changeThemeTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 44, 1024,724)
                                                                    style:UITableViewStyleGrouped];
                changeThemeTableView.dataSource = self;
                changeThemeTableView.delegate = self;
                changeThemeTableView.tag = 2;
                [self.view addSubview: changeThemeTableView];
                [viewer setEnabled:YES];
                viewer.title = @"Back";
                tableviewRemove = TRUE;
                back = TRUE;
            }
            
        }
            popupQuery = nil;
            Press = TRUE;
            break;
            
        case 2:
        {
            NSString *protectString;
            for(int k = 0; k<[databaseArray count];k++)
            {
                if([passcodeAlbum isEqualToString:databaseArray[k]])
                {
                  protectString = [NSString stringWithString:databaseArray[k]];
                    break;
                }
            }
            if([passcodeAlbum isEqualToString:protectString])
            {
                editUnProtect = TRUE;
                dataBaseAlert = [[UIAlertView alloc] initWithTitle:@"This Album is already protected"
                                                           message:@"Do you want to unprotect it?"
                                                          delegate:self
                                                 cancelButtonTitle:@"No"
                                                 otherButtonTitles:@"Yes",nil];
                [dataBaseAlert show];
            }
            else
            {
                editProtect = TRUE;
                dataBaseAlert = [[UIAlertView alloc] initWithTitle:nil
                                                           message:@"Do You Want to Protect This Album"
                                                          delegate:self
                                                 cancelButtonTitle:@"No"
                                                 otherButtonTitles:@"Yes",nil];
                 [dataBaseAlert show];
            }

        }
            popupQuery = nil;
            Press  = TRUE;
            break;
        
        case 3:
        {
            [self builderClicked];
            test->editURL = TRUE;
            test->navigationedit = TRUE;
            test->final = TRUE;
            xmlParser = [[XMLParser alloc] loadXML:albumXmlPath];
            [self editAlbum];
        }
            popupQuery = nil;
            Press = TRUE;
            break;
        
        case 4:
            popupQuery = nil;
            Press = TRUE;
            break;

        default:
            Press = TRUE;
            break;
            
        }
    }
}
- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    NSString *title = [alertView buttonTitleAtIndex:buttonIndex];
    //---------------------------FOR CAMERA CREATE ALBUM-------------------------------//
    if(camera)
    {
        if([title isEqualToString:@"Create"])
        {
            cameraNewAlbumTextField = [newAlbumAlert textFieldAtIndex:0];
            if ([cameraNewAlbumTextField.text length] == 0)
            {
                albumProtected = [[UIAlertView alloc] initWithTitle:@"Sorry"
                                                            message:@"You are not Entering Album Name"
                                                           delegate:nil
                                                  cancelButtonTitle:nil
                                                  otherButtonTitles:nil];
                [albumProtected show];
                [self performSelector:@selector(protectedAlbumDissmiss:) withObject:albumProtected afterDelay:5];
            }
            else
            {
                dirName = [[newAlbumAlert textFieldAtIndex:0] text];
                NSArray *paths = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
                NSString *documentsDirectory = [paths objectAtIndex:0];
                NSString *userCreated =[ documentsDirectory stringByAppendingString: @"/User"];
                NSString *yourDirPath = [userCreated stringByAppendingPathComponent:dirName];
                NSFileManager *fileManager = [NSFileManager defaultManager];
                
                BOOL isDir = YES;
                BOOL isDirExists = [fileManager fileExistsAtPath:yourDirPath isDirectory:&isDir];
                if (!isDirExists) [fileManager createDirectoryAtPath:yourDirPath withIntermediateDirectories:YES attributes:nil error:nil];
                
                //putting XML File Into The User Created Directory
                CamerafinalPath = [yourDirPath stringByAppendingPathComponent:@"Pronto.xml"];
                NSError *error;
                if (![[NSFileManager defaultManager] fileExistsAtPath:yourDirPath])
                {
                    [[NSFileManager defaultManager] createFileAtPath:yourDirPath contents:nil attributes:nil];
                    
                    [CamerafinalPath writeToFile:yourDirPath atomically:YES encoding:NSUTF8StringEncoding error:&error];
                    
                }
                cameraImageURL = [[NSMutableArray alloc] init];
                [self takePicture];
            }
        }
        camera = FALSE;
        newAlbumAlert = nil;
    }
    
    //---------------------------FOR SHARING LOCALMEDIA----------------------------------//
    else if (faceBook)
    {
        if([title isEqualToString:@"Share"])
        {
            textField = [passcodeAlert textFieldAtIndex:0];
            NSString *myString = [passcodePref stringForKey:@"Sharing Locking"];
            if(myString)
            {
                if([textField.text isEqualToString:myString])
                {
                    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                    {
                        //for iPhone5
                        if([[UIScreen mainScreen]bounds].size.height == 568)
                        {
                            [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
                            UIGraphicsBeginImageContext(self.view.bounds.size);
                            [self.view.layer renderInContext:UIGraphicsGetCurrentContext()];
                            UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
                            UIGraphicsEndImageContext();
                            CGRect rect = CGRectMake(0,32,568,288);
                            CGImageRef imageRef = CGImageCreateWithImageInRect([image CGImage], rect);
                            UIImage *cropimage  = [UIImage imageWithCGImage:imageRef];
                            NSArray *postItems = [[NSArray alloc] initWithObjects:cropimage, nil];
                            UIActivityViewController *activityVC = [[UIActivityViewController alloc]initWithActivityItems:postItems applicationActivities:nil];
                            [self presentViewController:activityVC animated:YES completion:nil];

                        }
                        else
                        {
                            [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
                            UIGraphicsBeginImageContext(self.view.bounds.size);
                            [self.view.layer renderInContext:UIGraphicsGetCurrentContext()];
                            UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
                            UIGraphicsEndImageContext();
                            CGRect rect = CGRectMake(0,32,480,288);
                            CGImageRef imageRef = CGImageCreateWithImageInRect([image CGImage], rect);
                            UIImage *cropimage  = [UIImage imageWithCGImage:imageRef];
                            NSArray *postItems = [[NSArray alloc] initWithObjects:cropimage, nil];
                            UIActivityViewController *activityVC = [[UIActivityViewController alloc]initWithActivityItems:postItems applicationActivities:nil];
                            [self presentViewController:activityVC animated:YES completion:nil];

                        }
                    }
                    else
                    {
                        [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
                        UIGraphicsBeginImageContext(self.view.bounds.size);
                        [self.view.layer renderInContext:UIGraphicsGetCurrentContext()];
                        UIImage *image = UIGraphicsGetImageFromCurrentImageContext();
                        UIGraphicsEndImageContext();
                        CGRect rect = CGRectMake(0,44,1024,724);
                        CGImageRef imageRef = CGImageCreateWithImageInRect([image CGImage], rect);
                        UIImage *cropimage  = [UIImage imageWithCGImage:imageRef];
                        NSArray *postItems = [[NSArray alloc] initWithObjects:cropimage, nil];
                        UIActivityViewController *activityVC = [[UIActivityViewController alloc]initWithActivityItems:postItems applicationActivities:nil];
                        [self presentViewController:activityVC animated:YES completion:nil];
                    }
                }
                else
                {
                    [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
                    albumProtected = [[UIAlertView alloc] initWithTitle:@"Wrong Password Entered"
                                                                             message:nil
                                                                            delegate:nil
                                                                   cancelButtonTitle:nil
                                                                   otherButtonTitles:nil];
                    [albumProtected show];
                    [self performSelector:@selector(protectedAlbumDissmiss:) withObject:albumProtected afterDelay:2];
                    
                }
            }
            else
            {
                [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
                
                albumProtected = [[UIAlertView alloc] initWithTitle:@"Passcode Not Set"
                                                                         message:@"Set Passcode"
                                                                        delegate:nil
                                                               cancelButtonTitle:nil
                                                               otherButtonTitles:nil];
                [albumProtected show];
                [self performSelector:@selector(protectedAlbumDissmiss:) withObject:albumProtected afterDelay:2];
                [self settings:nil];
                settings.enabled = YES;
                
            }

        }
        passcodeAlert = nil;
        faceBook = FALSE;
    }
    //--------------------------------------FOR EDITALBUM CASE-------------------------------------//
    else if (editProtect)
    {
        if([title isEqualToString:@"Yes"])
        {
            [self yesClicked];
            dataBaseAlert = nil;
        }
        if([title isEqualToString:@"No"])
        {
            dataBaseAlert = nil;
            editProtect = FALSE;
        }
        if([title isEqualToString:@"Ok"])
        {
            [self okClicked];
            passcodeAlert = nil;
            editProtect = FALSE;
        }
    }
    else if (editUnProtect)
    {
        if([title isEqualToString:@"Yes"])
        {
            [self unProtectAlbum];
            dataBaseAlert = nil;
        }
        if([title isEqualToString:@"No"])
        {
             dataBaseAlert = nil;
            editUnProtect = FALSE;
        }
        if([title isEqualToString:@"Ok"])
        {
            [self albumUnprotectClicked];
             passcodeAlert = nil;
            editUnProtect = FALSE;
        }
        if([title isEqualToString:@"Cancel"])
        {
             passcodeAlert = nil;
            editUnProtect = FALSE;
        }
    }
    //-------------------------------------FOR UNEDITALBUM CASE--------------------------------//
    else if (unEditProtect)
    {
        if([title isEqualToString:@"Yes"])
        {
            [self yesClicked];
            dataBaseAlert = nil;
        }
        if([title isEqualToString:@"No"])
        {
             dataBaseAlert = nil;
            unEditProtect = FALSE;
        }
        if([title isEqualToString:@"Ok"])
        {
            [self okClicked];
             passcodeAlert = nil;
            unEditProtect = FALSE;
        }
    }
    else if (unEditUnProtect)
    {
        if([title isEqualToString:@"Yes"])
        {
            [self unProtectAlbum];
            dataBaseAlert = nil;
        }
        if([title isEqualToString:@"No"])
        {
             dataBaseAlert = nil;
            unEditUnProtect = FALSE;
        }
        if([title isEqualToString:@"Ok"])
        {
            [self albumUnprotectClicked];
             passcodeAlert = nil;
            unEditUnProtect = FALSE;
        }
        if([title isEqualToString:@"Cancel"])
        {
             passcodeAlert = nil;
            unEditUnProtect = FALSE;
        }
    }
    //-------------------------------------FOR SETTINGS CLICKED---------------------------------//
    else if (setting)
    {
        if([title isEqualToString:@"Ok"])
        {
            [self settingsClicked];
            settingsAlert = nil;
            setting = FALSE;
        }
        if([title isEqualToString:@"Cancel"])
        {
            settingsAlert = nil;
            setting = FALSE;
            settings.title = @"Settings";
        }
    }
    //----------------------------------FOR BUILDER BACK----------------------------------------//
    else if(backToAlbum)
    {
        if([title isEqualToString:@"Yes"])
        {
            clicked = test->clicked;
            [loadingAlertView dismissWithClickedButtonIndex:1 animated:YES];
            loadingAlertView = nil;
            self->topNavigationBar.topItem.title = @"Picvie Album";
            test->assets = NULL;
            test->pages = NULL;
            if(test->view1)
                test->view1 = nil;
            if(test->view2)
                test->view2 = nil;
            if(test->view3)
                test->view3 = nil;
            if(test->view4)
                test->view4 = nil;
            test->extraitem = NULL;
            test->titleLabel = nil;
            test->editArray1 = NULL;
            test->secondTitleLabel = nil;
            test->indicatorImageView = nil;
            test->navigationBar = nil;
            test->accordion = NULL;
            test->musicArray = NULL;
            test->musictitle = NULL;
            test->videoURL = NULL;
            test->Path = NULL;
            test->groups = NULL;
            test->assetsLibrary = NULL;
            test->assetsGroup = NULL;
            test->asset = NULL;
            test->leftView = nil;
            test->toprightView = nil;
            test->bottomrightView = nil;
            test->myScrollView = nil;
            test->audioScrollView = nil;
            test->videoScrollView = nil;
            test->activityIndicator = nil;
            test->pageCountLabel = nil;
            test->accordion = nil;
            test->replaceImage = FALSE;
            [test.view removeFromSuperview];
            test->pageCollection = NULL;
            test->imageURL = NULL;
            test->imageThumbnailArray = NULL;
            test->videoThumbnailArray = NULL;
            test->longPressGesture = nil;
            test->cell = nil;
            [test destroyImageView];
            test.view = nil;
            //Jyoti
            test->onelayOut = nil;
            test->twolayOut = nil;
            test->threelayOut = nil;
            test->fourlayOut = nil;
            test->ninelayOut = nil;
            test->nextButton = nil;
            test->saveButton = nil;
            test->nextPageButton = nil;
            test->previousPageButton = nil;
            test->accordianList = NULL;
            test->query = NULL;
            test->extraAudioItem = NULL;
            test->extraAudioTitle = NULL;
            test->extraVideoItem = NULL;
            test->extraWebItem = NULL;
            test->saveAlert = nil;
            test->themeImageList = NULL;
            test->themeList = NULL;
            test->tableView = nil;
            test->autoDissmissalertView = nil;
            test = NULL;
            [builderView removeFromSuperview];
            builderView = nil;
            [newView removeFromSuperview];
            newView = nil;
            if(settingsTableView)
                settingsTableView = nil;
            for (id subview in self.view.subviews)
            {
                if([subview isKindOfClass:[UIButton class]])
                {
                    [subview removeFromSuperview];
                }
            }
            [self builderButton];
            [self cameraButton];
            previousPage=0;
            currentPage=0;
            [oneFingerSwipeLeft setEnabled:YES];
            [oneFingerSwipeRight setEnabled:YES];
            settings.enabled = YES;
            dispatch_async(dispatch_get_main_queue(), ^{
                
                loadingAlertView = [[UIAlertView alloc] initWithTitle:@"Please Wait Your Albums are Being Loaded..."
                                                              message:nil
                                                             delegate:self
                                                    cancelButtonTitle:nil
                                                    otherButtonTitles:nil];
                spinners = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
                spinners.center = CGPointMake(139.5, 75.5);
                [spinners setUserInteractionEnabled:YES];
                [loadingAlertView addSubview:spinners];
                [spinners startAnimating];
                [loadingAlertView show];
                [self displayDirectory];
            });
            viewer.title = @"Album";
            [viewer setEnabled:NO];
        }
    }
    
    //--------------------------------FOR FAQBUTTON----------------------------------------//
    else if (callFaq)
    {
        if([title isEqualToString:@"Continue"])
        {
            [self faqClicked:nil];
            faqAlert = nil;
            callFaq = FALSE;
        }
        if([title isEqualToString:@"Skip"])
        {
            [self skipClicked];
            faqAlert = nil;
            callFaq = FALSE;
        }
    }
    //-----------------------------FOR NO IMAGES AND VIDEOS-------------------------------//
    else if (noimagesandvideos)
    {
        if([title isEqualToString:@"Ok"])
        {
           
            noImagesView = nil;
            noimagesandvideos = FALSE;
            [self callFaqMethod];
        }
    }
    //----------------------------------FOR PROTECT ALBUM SHOW------------------------------------//
    else
    {
        if([title isEqualToString:@"Ok"])
        {
            [self viewClicked];
            passcodeAlert = nil;
        }
        if([title isEqualToString:@"Cancel"])
        {
            passcodeAlert = nil;
        }
    }
    
}
-(void)takePicture
{
    UIImagePickerController *picker = [[UIImagePickerController alloc] init];
    picker.delegate = self;
    picker.allowsEditing = YES;
    picker.sourceType = UIImagePickerControllerSourceTypeCamera;
    [self presentViewController:picker animated:YES completion:NULL];
    
}
- (void)imagePickerController:(UIImagePickerController *)picker didFinishPickingMediaWithInfo:(NSDictionary *)info
{
    [picker dismissViewControllerAnimated:NO completion:NULL];
    //adding a view to self.view
    UIImage *cameraImage = [UIImage imageNamed:@"photo.png"];
    UIImageView *cameraImageView = [[UIImageView alloc]initWithImage:cameraImage];
    [cameraView addSubview:cameraImageView];
    [self.view addSubview:cameraView];
    if(existingAlbum)
    {
        //FOr Existing Album
        [assetsLibrary writeImageToSavedPhotosAlbum:((UIImage *)[info objectForKey: UIImagePickerControllerOriginalImage]).CGImage
                                           metadata:[info objectForKey:UIImagePickerControllerMediaMetadata]
                                    completionBlock:^(NSURL *assetURL, NSError *error)
            {
                [cameraImageURL addObject:assetURL];
                [self takePicture];
            }
        ];
    }
    else
    {
        //For New Album
        [assetsLibrary writeImageToSavedPhotosAlbum:((UIImage *)[info objectForKey: UIImagePickerControllerOriginalImage]).CGImage
                                               metadata:[info objectForKey:UIImagePickerControllerMediaMetadata]
                                        completionBlock:^(NSURL *assetURL, NSError *error)
            {
                [cameraImageURL addObject:assetURL];
                [self takePicture];
            }
        ];
            
    }
    
    
       
}

-(void)imagePickerControllerDidCancel:(UIImagePickerController *)picker
{
    NSError *error;
    [filemanager removeItemAtPath:CamerafinalPath error:&error];
    [picker dismissViewControllerAnimated:YES completion:NULL];
    [cameraView setHidden:YES];
    if(existingAlbum)
    {
        //XML FOR EXISTING ALBUM
        for(int i=0;i<[cameraImageURL count];i++)
        {
            page = [[pagesViewController alloc] init];
            page->imageURL = [[NSMutableArray alloc]init];
            page->layoutused = 1;
            [page->imageURL addObject:cameraImageURL[i]];
            [test.pageCollection addObject:page];
        }
        //Writing XML
        XMLWriter* xmlWriter = [[XMLWriter alloc]init];
        [xmlWriter writeStartDocumentWithEncodingAndVersion:@"UTF-8" version:@"1.0"];
        
        // start writing XML elements
        [xmlWriter writeStartElement:@"Album"];
        [xmlWriter writeAttribute:@"name" value:albumExists];
        NSString *string = [NSString stringWithFormat:@"%d",[test.pageCollection count]];
        [xmlWriter writeAttribute:@"TotalPages" value:string];
        [xmlWriter writeAttribute:@"theme" value:themeName];
        NSString *xmlString = [[NSString alloc] init];
        for(int i=0;i<[test.pageCollection count];i++)
        {
            switch( ((pagesViewController *) test.pageCollection[i])->layoutused)
            {
                case 1:
                {
                    for(int j=0;j<1;j++)
                    {
                        [xmlWriter writeStartElement:@"page"];
                        [xmlWriter writeStartElement:@"LU"];
                        [xmlWriter writeCharacters:@"1"];
                        [xmlWriter writeEndElement];
                        [xmlWriter writeStartElement:@"MainImages"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->imageURL[j] description];
                        if([xmlString hasPrefix:@"A"])
                        {
                            xmlString = [xmlString substringFromIndex:27];
                        }
                        xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"MainImages"];
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->extraImage count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->extraImage count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"ExtraImages"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->extraImage[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"ExtraImages"];
                            
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->videoArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->videoArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Videos"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->videoArray[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Videos"];
                            
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->musicArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->musicArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Audios"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->musicArray[k] description];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Audios"];
                            
                        }
                        
                    }
                    
                    if(((pagesViewController*) test.pageCollection[i])->webLink)
                    {
                        [xmlWriter writeStartElement:@"WebLink"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->webLink description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"WebLink"];
                    }
                    if(((pagesViewController*) test.pageCollection[i])->comment)
                    {
                        [xmlWriter writeStartElement:@"Comment"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->comment description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"Comment"];
                    }
                    
                    NSString *intString = [NSString  stringWithFormat:@"%d",i];
                    
                    [xmlWriter writeStartElement:@"CP"];
                    [xmlWriter writeCharacters:intString];
                    [xmlWriter writeEndElement];
                    
                    [xmlWriter writeEndElement];
                }
                    break;
                case 2:
                {
                    [xmlWriter writeStartElement:@"page"];
                    [xmlWriter writeStartElement:@"LU"];
                    [xmlWriter writeCharacters:@"2"];
                    [xmlWriter writeEndElement];
                    
                    for(int j=0;j<2;j++)
                    {
                        
                        [xmlWriter writeStartElement:@"MainImages"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->imageURL[j] description];
                        if([xmlString hasPrefix:@"A"])
                        {
                            xmlString = [xmlString substringFromIndex:27];
                        }
                        xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"MainImages"];
                        
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->extraImage count])
                    {
                        for(int k=0;k<[((pagesViewController*) test.pageCollection[i])->extraImage count];k++)
                        {
                            [xmlWriter writeStartElement:@"ExtraImages"];
                            xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->extraImage[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"ExtraImages"];
                        }
                    }
                    if([((pagesViewController*) test.pageCollection[i])->videoArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->videoArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Videos"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->videoArray[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Videos"];
                            
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->musicArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->musicArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Audios"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->musicArray[k] description];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Audios"];
                            
                        }
                        
                    }
                    
                    if(((pagesViewController*) test.pageCollection[i])->webLink)
                    {
                        [xmlWriter writeStartElement:@"WebLink"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->webLink description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"WebLink"];
                    }
                    
                    if(((pagesViewController*) test.pageCollection[i])->comment)
                    {
                        [xmlWriter writeStartElement:@"Comment"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->comment description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"Comment"];
                    }
                    
                    NSString *intString4 = [NSString stringWithFormat:@"%d", i];
                    
                    [xmlWriter writeStartElement:@"CP"];
                    [xmlWriter writeCharacters:intString4];
                    [xmlWriter writeEndElement];
                    
                    [xmlWriter writeEndElement];
                    break;
                }
                    
                case 3:
                {
                    [xmlWriter writeStartElement:@"page"];
                    [xmlWriter writeStartElement:@"LU"];
                    [xmlWriter writeCharacters:@"3"];
                    [xmlWriter writeEndElement];
                    
                    for(int j=0;j<3;j++)
                    {
                        
                        [xmlWriter writeStartElement:@"MainImages"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->imageURL[j] description];
                        if([xmlString hasPrefix:@"A"])
                        {
                            xmlString = [xmlString substringFromIndex:27];
                        }
                        xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"MainImages"];
                        
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->extraImage count])
                    {
                        for(int k=0;k<[((pagesViewController*) test.pageCollection[i])->extraImage count];k++)
                        {
                            [xmlWriter writeStartElement:@"ExtraImages"];
                            xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->extraImage[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"ExtraImages"];
                        }
                    }
                    if([((pagesViewController*) test.pageCollection[i])->videoArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->videoArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Videos"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->videoArray[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Videos"];
                            
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->musicArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->musicArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Audios"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->musicArray[k] description];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Audios"];
                            
                        }
                        
                    }
                    
                    if(((pagesViewController*) test.pageCollection[i])->webLink)
                    {
                        [xmlWriter writeStartElement:@"WebLink"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->webLink description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"WebLink"];
                    }
                    if(((pagesViewController*) test.pageCollection[i])->comment)
                    {
                        [xmlWriter writeStartElement:@"Comment"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->comment description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"Comment"];
                    }
                    
                    NSString *intString1 = [NSString stringWithFormat:@"%d", i];
                    
                    [xmlWriter writeStartElement:@"CP"];
                    [xmlWriter writeCharacters:intString1];
                    [xmlWriter writeEndElement];
                    
                    [xmlWriter writeEndElement];
                    break;
                }
                                    
                case 4:
                {
                    [xmlWriter writeStartElement:@"page"];
                    [xmlWriter writeStartElement:@"LU"];
                    [xmlWriter writeCharacters:@"4"];
                    [xmlWriter writeEndElement];
                    
                    for(int j=0;j<4;j++)
                    {
                        
                        [xmlWriter writeStartElement:@"MainImages"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->imageURL[j] description];
                        if([xmlString hasPrefix:@"A"])
                        {
                            xmlString = [xmlString substringFromIndex:27];
                        }
                        xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"MainImages"];
                        
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->extraImage count])
                    {
                        for(int k=0;k<[((pagesViewController*) test.pageCollection[i])->extraImage count];k++)
                        {
                            [xmlWriter writeStartElement:@"ExtraImages"];
                            xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->extraImage[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"ExtraImages"];
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->videoArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->videoArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Videos"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->videoArray[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Videos"];
                            
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->musicArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->musicArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Audios"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->musicArray[k] description];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Audios"];
                            
                        }
                        
                    }
                    if(((pagesViewController*) test.pageCollection[i])->webLink)
                    {
                        [xmlWriter writeStartElement:@"WebLink"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->webLink description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"WebLink"];
                    }
                    
                    if(((pagesViewController*) test.pageCollection[i])->comment)
                    {
                        [xmlWriter writeStartElement:@"Comment"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->comment description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"Comment"];
                    }
                    NSString *intString2 = [NSString stringWithFormat:@"%d", i];
                    
                    [xmlWriter writeStartElement:@"CP"];
                    [xmlWriter writeCharacters:intString2];
                    [xmlWriter writeEndElement];
                    
                    [xmlWriter writeEndElement];
                    break;
                }
                    
                case 9:
                {
                    [xmlWriter writeStartElement:@"page"];
                    [xmlWriter writeStartElement:@"LU"];
                    [xmlWriter writeCharacters:@"9"];
                    [xmlWriter writeEndElement];
                    for(int j=0;j<9;j++)
                    {
                        
                        [xmlWriter writeStartElement:@"MainImages"];
                        
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->imageURL[j] description];
                        if([xmlString hasPrefix:@"A"])
                        {
                            xmlString = [xmlString substringFromIndex:27];
                        }
                        xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"MainImages"];
                        
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->extraImage count])
                    {
                        for(int k=0;k<[((pagesViewController*) test.pageCollection[i])->extraImage count];k++)
                        {
                            [xmlWriter writeStartElement:@"ExtraImages"];
                            xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->extraImage[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"ExtraImages"];
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->videoArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->videoArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Videos"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->videoArray[k] description];
                            if([xmlString hasPrefix:@"A"])
                            {
                                xmlString = [xmlString substringFromIndex:27];
                            }
                            
                            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Videos"];
                            
                        }
                        
                    }
                    if([((pagesViewController*) test.pageCollection[i])->musicArray count])
                    {
                        for(int k=0;k <[((pagesViewController*) test.pageCollection[i])->musicArray count];k++)
                        {
                            
                            [xmlWriter writeStartElement:@"Audios"];
                            xmlString = (NSString*) [((pagesViewController*) test.pageCollection[i])->musicArray[k] description];
                            [xmlWriter writeCData:xmlString];
                            [xmlWriter writeEndElement:@"Audios"];
                            
                        }
                        
                    }
                    if(((pagesViewController*) test.pageCollection[i])->webLink)
                    {
                        [xmlWriter writeStartElement:@"WebLink"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->webLink description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"WebLink"];
                    }
                    if(((pagesViewController*) test.pageCollection[i])->comment)
                    {
                        [xmlWriter writeStartElement:@"Comment"];
                        xmlString = (NSString*) [ ((pagesViewController*) test.pageCollection[i])->comment description];
                        [xmlWriter writeCData:xmlString];
                        [xmlWriter writeEndElement:@"Comment"];
                    }
                    
                    NSString *intString3 = [NSString stringWithFormat:@"%d",i];
                    
                    [xmlWriter writeStartElement:@"CP"];
                    [xmlWriter writeCharacters:intString3];
                    [xmlWriter writeEndElement];
                    
                    [xmlWriter writeEndElement];
                    break;
                }
                default:
                    break;
            }
            
        }
        page->imageURL = NULL;
        page->extraImage = NULL;
        page->videoArray = NULL;
        page->musicArray = NULL;
        page->webLink = NULL;
        page->comment = NULL;
        page->layoutused = 0;
        page = NULL;
        test->pageCollection = NULL;
        test = NULL;
        cameraAlbumTableView = nil;
        cameraView = nil;
        picker = NULL;
        [xmlWriter writeEndElement:@"Album"];
        // get the resulting XML string
        NSString *xml= [xmlWriter toString];
        NSData *data = [xml dataUsingEncoding:NSUTF8StringEncoding];
        [[NSFileManager defaultManager] createFileAtPath:CamerafinalPath contents:data attributes:nil];
    
    }

    //------------------------------XML FOR NEW CAMERA ALBUM------------------------------------//
    else
    {
        //Writing XML
        XMLWriter* xmlWriter = [[XMLWriter alloc]init];
        [xmlWriter writeStartDocumentWithEncodingAndVersion:@"UTF-8" version:@"1.0"];
    
        // start writing XML elements
        [xmlWriter writeStartElement:@"Album"];
        [xmlWriter writeAttribute:@"name" value:dirName];
        NSString *string = [NSString stringWithFormat:@"%d",[cameraImageURL count]];
        [xmlWriter writeAttribute:@"TotalPages" value:string];
        [xmlWriter writeAttribute:@"theme" value:@"iOS Theme"];
    
        NSString *xmlString = [[NSString alloc] init];
        //main Xml Writing
        for(int i=0;i<[cameraImageURL count];i++)
        {
       
            [xmlWriter writeStartElement:@"page"];
            [xmlWriter writeStartElement:@"LU"];
            [xmlWriter writeCharacters:@"1"];
            [xmlWriter writeEndElement];
            [xmlWriter writeStartElement:@"MainImages"];
            xmlString = (NSString*) [ cameraImageURL[i] description];
            xmlString= [xmlString stringByReplacingOccurrencesOfString:@"&" withString:@"'amp'"];
            [xmlWriter writeCData:xmlString];
            [xmlWriter writeEndElement:@"MainImages"];
            NSString *intString = [NSString  stringWithFormat:@"%d",i];
            [xmlWriter writeStartElement:@"CP"];
            [xmlWriter writeCharacters:intString];
            [xmlWriter writeEndElement];
            [xmlWriter writeEndElement];
        }
        [xmlWriter writeEndElement:@"Album"];
        // get the resulting XML string
        NSString *xml= [xmlWriter toString];
        NSData *data = [xml dataUsingEncoding:NSUTF8StringEncoding];
        [[NSFileManager defaultManager] createFileAtPath:CamerafinalPath contents:data attributes:nil];
        //cameraImageURL = NULL;
        cameraView = nil;
        picker = NULL;
    }
       //Common For All Camera Album
        dispatch_async(dispatch_get_main_queue(), ^{
            loadingAlertView = [[UIAlertView alloc] initWithTitle:@"Please Wait Your Album is Being Loaded..."
                                                          message:nil
                                                         delegate:self
                                                cancelButtonTitle:nil
                                                otherButtonTitles:nil];
            spinners = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
            spinners.center = CGPointMake(139.5, 75.5);
            [spinners setUserInteractionEnabled:YES];
            [loadingAlertView addSubview:spinners];
            [spinners startAnimating];
            [loadingAlertView show];
            [self displayDirectory];
        });
        viewer.title = @"Album";
        [viewer setEnabled: NO];
        
        tableviewRemove = FALSE;
}

//EDIT EXISTING ALBUM
- (void)editAlbum
{
    test->pageDiscard = FALSE;
    test->omitPage = TRUE;
    test->editClicked = FALSE;
    test->editOpen = TRUE;
    test->enterEditAlbum = TRUE;
    test->pageFill = TRUE;
    test->buildingAlbum = FALSE;
    test->editAccordianOpen = TRUE;
    test->editWeb = TRUE;
    test->currentCP = 0;
    test->CurrentPP =0;
    test->mainMusic = TRUE;
    test->NewPageEditACase = FALSE;
    //test->isalbumFinished = TRUE;
    int pageCount =[ xmlParser->albumname count];
    if((pageCount == 1)&&(currentPage == previousPage))
    {
        [test->previousPageButton setEnabled:NO];
        [test->nextPageButton setEnabled:NO];

    }
    if(currentPage == 0)
       [test->previousPageButton setEnabled:NO];
    
    
    for(int i=0;i<pageCount;i++)
    {
        page = [[pagesViewController alloc] init];
        page->layoutused = ((Album *) xmlParser->albumname[i])->layOut;
        page->imageURL = [[NSMutableArray alloc]init];
        page->extraImage = [[NSMutableArray alloc]init];
        page->videoArray = [[NSMutableArray alloc]init];
        page->musicArray = [[NSMutableArray alloc]init];
        page->finalMusicTitle = [[NSMutableArray alloc]init];
        page->webLink = [[NSMutableArray alloc]init];
        
        switch (page->layoutused)
        {
            case 12:
                //Store Main Images
                [page->imageURL addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[0]];
                
                //Store Extra Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                {
                    [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                }
                //Store Extra Videos
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                {
                    [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                }
                //Store Extra Audios
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                {
                    [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                }
                //Store Extra Audios Title
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                {
                    [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                }
                //Store Weblink
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->webLink count];j++)
                {
                    [page->webLink addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->webLink[j]];
                }
                
                [test.pageCollection addObject:page];
                
                break;

            case 1:
                //Store Main Images
                [page->imageURL addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[0]];
                
                //Store Extra Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                {
                    [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                }
                //Store Extra Videos
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                {
                   [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                }
                //Store Extra Audios
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                {
                    [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                }
                //Store Extra Audios Title
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                {
                    [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                }
                //Store Weblink
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->webLink count];j++)
                {
                    [page->webLink addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->webLink[j]];
                }
                
                [test.pageCollection addObject:page];
            
                break;
                
            case 2:
                //Store Main Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                {
                    [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                }
                //Store Extra Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                {
                    [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                }
                //Store Extra Videos
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                {
                    [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                }
                //Store Extra Audios
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                {
                    [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                }
                //Store Extra Audios Title
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                {
                    [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                }
                //Store Weblink
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->webLink count];j++)
                {
                    [page->webLink addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->webLink[j]];
                }
                
                [test.pageCollection addObject:page];
                
                break;
                
            case 3:
                
                //Store Main Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                {
                    [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                }
                //Store Extra Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                {
                    [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                }
                //Store Extra Videos
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                {
                    [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                }
                //Store Extra Audios
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                {
                    [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                }
                //Store Extra Audios Title
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                {
                    [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                }
                //Store Weblink
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->webLink count];j++)
                {
                    [page->webLink addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->webLink[j]];
                }
                
                [test.pageCollection addObject:page];
                
                break;
                
            case 4:
                
                //Store Main Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                {
                    [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                }
                //Store Extra Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                {
                    [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                }
                //Store Extra Videos
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                {
                    [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                }
                //Store Extra Audios
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                {
                    [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                }
                //Store Extra Audios Title
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                {
                    [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                }
                //Store Weblink
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->webLink count];j++)
                {
                    [page->webLink addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->webLink[j]];
                }
                
                [test.pageCollection addObject:page];
                break;
                
            case 9:
                
                //Store Main Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage count];j++)
                {
                    [page->imageURL addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->mainImage[j]];
                }
                //Store Extra Images
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage count];j++)
                {
                    [page->extraImage addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->extraImage[j]];
                }
                //Store Extra Videos
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->videos count];j++)
                {
                    [page->videoArray addObject: ((Album*) [xmlParser->albumname objectAtIndex:i])->videos[j]];
                }
                //Store Extra Audios
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audios count];j++)
                {
                    [page->musicArray addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audios[j]];
                }
                //Store Extra Audios Title
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle count];j++)
                {
                    [page->finalMusicTitle addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->audioTitle[j]];
                }
                //Store Weblink
                for(int j=0;j<[((Album*) [xmlParser->albumname objectAtIndex:i])->webLink count];j++)
                {
                    [page->webLink addObject:((Album*) [xmlParser->albumname objectAtIndex:i])->webLink[j]];
                }
                
                [test.pageCollection addObject:page];
                
                break;

                
            default:
                break;
        }
    }
        switch(((pagesViewController *) test.pageCollection[0])->layoutused)
        {
            case 12:
            {
                test->oneImageCounter =1;
                test->oneFilled = 1;
                test->oneNextClicked = 1;
                test->firstPageVideo = TRUE;
                NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[0];
                loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                
                ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                {
                    
                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                    CGImageRef iref = [rep fullScreenImage];
                    temp = [UIImage imageWithCGImage:iref];
                    
                    if (iref)
                    {
                        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                        {
                            //for iPhone5
                            if([[UIScreen mainScreen]bounds].size.height == 568)
                            {
                                one->firstImageView.image = temp;
                                [UIView commitAnimations];
                            }
                            else
                            {
                                one->firstImageView.image = temp;
                                [UIView commitAnimations];
                            }
                            
                        }
                        else
                        {
                            one->firstImageView.image = temp;
                            [UIView commitAnimations];
                        }
                    }
                    
                };
                
                
                ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                {
                    NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                };
                
                if(loadImage && [loadImage length])
                {
                    
                    NSURL *asseturl = [NSURL URLWithString:loadImage];
                    [assetsLibrary assetForURL:asseturl
                                   resultBlock:resultblock
                                  failureBlock:failureblock];
                }
                
                break;
            }
            case 1:
            {
                test->oneImageCounter =1;
                test->oneFilled = 1;
                test->oneNextClicked = 1;
                NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[0];
                loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];

                ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                {
                    
                    ALAssetRepresentation *rep = [myasset defaultRepresentation];
                    CGImageRef iref = [rep fullScreenImage];
                    temp = [UIImage imageWithCGImage:iref];
                    
                    if (iref)
                    {
                        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                        {
                            //for iPhone5
                            if([[UIScreen mainScreen]bounds].size.height == 568)
                            {
                                one->firstImageView.image = temp;
                                [UIView commitAnimations];
                            }
                            else
                            {
                                one->firstImageView.image = temp;
                                [UIView commitAnimations];
                            }
                            
                        }
                        else
                        {
                            one->firstImageView.image = temp;
                            [UIView commitAnimations];
                        }
                    }

                };
                
                
                ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                {
                    NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                };
                
                if(loadImage && [loadImage length])
                {
                    
                    NSURL *asseturl = [NSURL URLWithString:loadImage];
                    [assetsLibrary assetForURL:asseturl
                                   resultBlock:resultblock
                                  failureBlock:failureblock];
                }
                
            break;
            }
    case 2:
        {
            
            [test twoClicked];
            test->twoImageCounter =2;
            test->twoFilled = 2;
            test->twoNextClicked = 2;
            for(int j=0;j<2;j++)
            {
                switch (j)
                {
                    case 0:
                    {
                         NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[j];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                        ALAssetRepresentation *rep = [myasset defaultRepresentation];
                        CGImageRef iref = [rep fullScreenImage];
                        temp = [UIImage imageWithCGImage:iref];
                        
                        if (iref)
                        {
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    two->twofirstImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                                else
                                {
                                    two->twofirstImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            else
                            {
                                two->twofirstImageView.image = temp;
                                [UIView commitAnimations];
                            }
                            
                        }
                        
                        
                    };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                    {
                        NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                    };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;

               
                    }
                case 1:
                {
                    NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[j];
                    loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                    
                    ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                    {
                        ALAssetRepresentation *rep = [myasset defaultRepresentation];
                        CGImageRef iref = [rep fullScreenImage];
                        temp = [UIImage imageWithCGImage:iref];
                        
                        if (iref)
                        {
                            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                            {
                                //for iPhone5
                                if([[UIScreen mainScreen]bounds].size.height == 568)
                                {
                                    two->twosecondImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                                else
                                {
                                    two->twosecondImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            else
                            {
                                two->twosecondImageView.image = temp;
                                [UIView commitAnimations];
                            }
                        }
                        
                        
                    };
                    
                    
                    ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                    {
                        NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                    };
                    
                    if(loadImage && [loadImage length])
                    {
                        
                        NSURL *asseturl = [NSURL URLWithString:loadImage];
                        [assetsLibrary assetForURL:asseturl
                                       resultBlock:resultblock
                                      failureBlock:failureblock];
                    }
                    break;
                }

                default:
                    break;
            }
            }
            
        break;
        }
                
        case 3:
        {
            
            [test threeClicked];
            test->threeImageCounter =3;
            test->threeFilled = 3;
            test->threeNextClicked = 3;
            for(int i=0;i<3;i++)
            {
                switch (i)
                {
                    case 0:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        three->threefirstImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        three->threefirstImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    three->threefirstImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                        
                        
                    }
                    case 1:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        three->threesecondImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        three->threesecondImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    three->threesecondImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        three->threethirdImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        three->threethirdImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    three->threethirdImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    default:
                        break;
                }
            }
            break;
            
        }
                
    case 4:
        {
            
            [test fourClicked];
            test->fourImageCounter =4;
            test->fourFilled = 4;
            test->fourNextClicked = 4;
            for(int i=0;i<4;i++)
            {
                switch (i)
                {
                    case 0:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        four->fourfirstImageView.image = temp;
                                        [UIView commitAnimations];

                                    }
                                    else
                                    {
                                        four->fourfirstImageView.image = temp;
                                        [UIView commitAnimations];

                                    }
                                }
                                else
                                {
                                    four->fourfirstImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                                
                                
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                        
                        
                    }
                    case 1:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        four->foursecondImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        four->foursecondImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    four->foursecondImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        four->fourthirdImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        four->fourthirdImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    four->fourthirdImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 3:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        four->fourfourImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        four->fourfourImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    four->fourfourImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    default:
                        break;
                }
            }
            break;
            
        }
                
    case 9:
        {
            
            [test nineClicked];
            test->nineImageCounter =9;
            test->nineFilled = 9;
            test->nineNextClicked = 9;
            for(int i=0;i<9;i++)
            {
                switch (i)
                {
                    case 0:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninefirstImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninefirstImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninefirstImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 1:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];

                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninesecondImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninesecondImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninesecondImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 2:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninethirdImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninethirdImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninethirdImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                                
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 3:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninefourImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninefourImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninefourImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                                
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 4:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninefiveImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninefiveImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninefiveImageView.image = temp;
                                    [UIView commitAnimations];
                                }


                                
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 5:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninesixImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninesixImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninesixImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                                
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 6:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninesevenImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninesevenImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninesevenImageView.image = temp;
                                    [UIView commitAnimations];
                                }

                                
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                    case 7:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                    
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->nineeightImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->nineeightImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->nineeightImageView.image = temp;
                                    [UIView commitAnimations];
                                }

                                
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                    case 8:
                    {
                        NSString *loadImage = ((pagesViewController *) test.pageCollection[0])->imageURL[i];
                        loadImage= [loadImage stringByReplacingOccurrencesOfString:@"'amp'" withString:@"&"];
                        
                        ALAssetsLibraryAssetForURLResultBlock resultblock = ^(ALAsset *myasset)
                        {
                            ALAssetRepresentation *rep = [myasset defaultRepresentation];
                            CGImageRef iref = [rep fullScreenImage];
                            temp = [UIImage imageWithCGImage:iref];
                            
                            if (iref)
                            {
                                if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
                                {
                                    //for iPhone5
                                    if([[UIScreen mainScreen]bounds].size.height == 568)
                                    {
                                        nine->ninenineImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                    else
                                    {
                                        nine->ninenineImageView.image = temp;
                                        [UIView commitAnimations];
                                    }
                                }
                                else
                                {
                                    nine->ninenineImageView.image = temp;
                                    [UIView commitAnimations];
                                }
                            }
                            
                            
                        };
                        
                        
                        ALAssetsLibraryAccessFailureBlock failureblock  = ^(NSError *myerror)
                        {
                            NSLog(@"booya, cant get image - %@",[myerror localizedDescription]);
                        };
                        
                        if(loadImage && [loadImage length])
                        {
                            
                            NSURL *asseturl = [NSURL URLWithString:loadImage];
                            [assetsLibrary assetForURL:asseturl
                                           resultBlock:resultblock
                                          failureBlock:failureblock];
                        }
                        break;
                    }
                        
                        
                    default:
                        break;
                }
            }
            break;
        }
        default:
        break;
    }
    test->pageDiscard = FALSE;
}
- (void)yesClicked
{
        passcodeAlert = [[UIAlertView alloc] initWithTitle:nil
                                                   message:@"please enter passcode for locking Album "
                                                  delegate:self
                                         cancelButtonTitle:nil
                                         otherButtonTitles:@"Ok",nil];
        passcodeAlert.alertViewStyle = UIAlertViewStylePlainTextInput;
        [passcodeAlert show];
        [dataBaseAlert dismissWithClickedButtonIndex:0 animated:YES];
        dataBaseAlert = nil;
    
}
-(void)unProtectAlbum
{
    [dataBaseAlert dismissWithClickedButtonIndex:0 animated:YES];
    dataBaseAlert = nil;
    //delete AlbumName From Database
    passcodeAlert = [[UIAlertView alloc] initWithTitle:nil
                                            message:@"please enter passcode for Unlocking Album "
                                            delegate:self
                                            cancelButtonTitle:@"Cancel"
                                            otherButtonTitles:@"Ok",nil];
    passcodeAlert.alertViewStyle = UIAlertViewStylePlainTextInput;
    [passcodeAlert show];
    //[dataBaseAlert dismissWithClickedButtonIndex:0 animated:YES];

}
//-------------------------------------FOR UNPROTECT ALBUM-----------------------------------//
-(void)albumUnprotectClicked
{
    [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
    NSArray *homeDomains = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [homeDomains objectAtIndex:0];
    databasePath = [documentsDirectory stringByAppendingPathComponent:@"album.db"];
    if(sqlite3_open([databasePath UTF8String], &albumDB)==SQLITE_OK)
    {
        const char *sqlStatement ="select * from ALBUM";
        sqlite3_stmt *compiledStatement;
        if(sqlite3_prepare_v2(albumDB, sqlStatement,-1, &compiledStatement , NULL)== SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                aPassword =[NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement,1)];
            }
        }
        sqlite3_finalize(compiledStatement);
    }
    sqlite3_close(albumDB);
    
    NSString *text1 = [[passcodeAlert textFieldAtIndex:0]text];
    
    if([text1 isEqualToString:aPassword])
    {
        if(sqlite3_open([databasePath UTF8String], &albumDB)==SQLITE_OK)
        {
            
            NSString *querySQL=[NSString stringWithFormat:@"delete from ALBUM where ALBUMNAME=\'%@\'",passcodeAlbum];
            const char *query_stmt=[querySQL UTF8String];
            
            char *errMsg;
            if (sqlite3_exec(albumDB, query_stmt, NULL, NULL, &errMsg) != SQLITE_OK)
            {
                
                status.text = @"Error";
            }
            else
            {
                
                status.text = @"sucess";
                [databaseArray removeObject:passcodeAlbum];
            }
            
        }
        sqlite3_close(albumDB);
        dispatch_async(dispatch_get_main_queue(), ^{
            
            loadingAlertView = [[UIAlertView alloc] initWithTitle:passcodeAlbum
                                                          message:@"has been UnLocked"
                                                         delegate:nil
                                                cancelButtonTitle:nil
                                                otherButtonTitles:nil];
            
            spinners = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
            spinners.center = CGPointMake(139.5, 85.5);
            [spinners setUserInteractionEnabled:YES];
            [loadingAlertView addSubview:spinners];
            [spinners startAnimating];
            [loadingAlertView show];
            backToAlbum = TRUE;
            [self displayDirectory];
        });
    }
    else
    {
        passcodeAlert = [[UIAlertView alloc] initWithTitle:@"wrong Passcode entered "
                                                   message:nil
                                                  delegate:nil
                                         cancelButtonTitle:@"Ok"
                                         otherButtonTitles:nil];
        
        [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
        [passcodeAlert show];
        
    }

    
}

-(void)okClicked
{
    textField = [passcodeAlert textFieldAtIndex:0];
    [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
    NSString *myString = [passcodePref stringForKey:@"Album Locking"];
    if(myString)
    {
        if([textField.text isEqualToString:myString])
        {
            sqlite3_stmt    *statement;
            
            const char *dbpath = [databasePath UTF8String];
            
            if (sqlite3_open(dbpath, & albumDB) == SQLITE_OK)
            {
                
                NSString *insertSQL = [NSString stringWithFormat:
                                       @"INSERT INTO ALBUM (albumName, passCode) VALUES (\"%@\", \"%@\")",
                                       passcodeAlbum, textField.text];
                
                const char *insert_stmt = [insertSQL UTF8String];
                sqlite3_prepare_v2(albumDB, insert_stmt, -1, &statement, NULL);
                sqlite3_bind_text(statement, 1, [passcodeAlbum UTF8String], -1, SQLITE_TRANSIENT);
                sqlite3_bind_text(statement, 1, [textField.text UTF8String], -1, SQLITE_TRANSIENT);
                if (sqlite3_step(statement) == SQLITE_DONE)
                {
                    
                    self.status.text = @"data added";
                    albumName = [NSString stringWithString:passcodeAlbum];
                    passCode = textField.text;
                    
                }
                else
                {
                    self.status.text = @"Failed to add into database";
                }
                sqlite3_finalize(statement);
                sqlite3_close(albumDB);
            }
            dispatch_async(dispatch_get_main_queue(), ^{
                backToAlbum = TRUE;
                [self displayDirectory];
                albumProtected = [[UIAlertView alloc] initWithTitle:albumName
                                                                         message:@"Password Protected"
                                                                        delegate:nil
                                                               cancelButtonTitle:nil
                                                               otherButtonTitles:nil];
                spinners = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhiteLarge];
                spinners.center = CGPointMake(139.5, 85.5);
                [spinners setUserInteractionEnabled:YES];
                [albumProtected addSubview:spinners];
                [spinners startAnimating];
                [albumProtected show];
                [self performSelector:@selector(protectedAlbumDissmiss:) withObject:albumProtected afterDelay:7];
            });
        }
        else
        {
            [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
            albumProtected = [[UIAlertView alloc] initWithTitle:@"Wrong Password Entered"
                                                                     message:nil
                                                                    delegate:nil
                                                           cancelButtonTitle:nil
                                                           otherButtonTitles:nil];
            [albumProtected show];
            [self performSelector:@selector(protectedAlbumDissmiss:) withObject:albumProtected afterDelay:2];
        }
    }
    else
    {
        [passcodeAlert dismissWithClickedButtonIndex:0 animated:YES];
        albumProtected = [[UIAlertView alloc] initWithTitle:@"Passcode Not Set"
                                                                 message:nil
                                                                delegate:nil
                                                       cancelButtonTitle:nil
                                                       otherButtonTitles:nil];
        [albumProtected show];
        [self performSelector:@selector(protectedAlbumDissmiss:) withObject:albumProtected afterDelay:2];
        [self settings:nil];
    }
}

-(void)protectedAlbumDissmiss :(UIAlertView*)alert
{
    [alert dismissWithClickedButtonIndex:0 animated:YES];
    spinners = nil;
    albumProtected = nil;
}

- (void)builderButton
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            UIImage *builderimage = [UIImage imageNamed:@"builderclicked.png"];
            UIButton *builderBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            builderBtn.frame = CGRectMake(0.0, 120.0, 38.0, 38.0 );
            [builderBtn setBackgroundImage:builderimage forState:UIControlStateNormal];
            [builderBtn addTarget:self action:@selector(builderClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:builderBtn];
        }
        else
        {
            UIImage *builderimage = [UIImage imageNamed:@"builderclicked.png"];
            UIButton *builderBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            builderBtn.frame = CGRectMake(0.0, 120.0, 38.0, 38.0 );
            [builderBtn setBackgroundImage:builderimage forState:UIControlStateNormal];
            [builderBtn addTarget:self action:@selector(builderClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:builderBtn];
        }
     
    }
    else
    {
        //ipad
        UIImage *builderimage = [UIImage imageNamed:@"builderclicked.png"];
        UIButton *builderBtn = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        builderBtn.frame = CGRectMake(0.0, 340.0, 60.0,60.0 );
        [builderBtn setBackgroundImage:builderimage forState:UIControlStateNormal];
        [builderBtn addTarget:self action:@selector(builderClicked) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:builderBtn];
    }
    
}

- (void) builderClicked
{
    counter = 0;
    self->topNavigationBar.topItem.title = @"Picvie Builder";
    viewer.enabled = YES;
    viewer.title = @"Back to Album";
    [self helpButton];
    [faqButton setHidden:YES];
    [settings setEnabled:NO];
    [faqButton removeFromSuperview];
    databaseArray = NULL;
    finalArray = NULL;
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            test = [[testClasViewController alloc] initWithNibName:@"testClasViewController_iPhone5" bundle:nil];
            [UIView setAnimationTransition:UIViewAnimationTransitionFlipFromRight forView:self.view cache:YES];
            builderView = [[UIView alloc]initWithFrame:CGRectMake(0, 32, 568, 288)];
            [self.view addSubview:builderView];
            [builderView addSubview:test.view];
            test->buildingAlbum = TRUE;
            [UIView commitAnimations];
        }
        else
        {
            test = [[testClasViewController alloc] initWithNibName:@"testClasViewController_iPhone" bundle:nil];
            [UIView setAnimationTransition:UIViewAnimationTransitionFlipFromRight forView:self.view cache:YES];
            builderView = [[UIView alloc]initWithFrame:CGRectMake(0, 32, 480, 288)];
            [self.view addSubview:builderView];
            [builderView addSubview:test.view];
            test->buildingAlbum = TRUE;
            [UIView commitAnimations];
        }
    }
    else
    {
        test = [[testClasViewController alloc] initWithNibName:@"testClasViewController_iPad" bundle:nil];
        [UIView setAnimationTransition:UIViewAnimationTransitionCurlUp forView:self.view cache:YES];
        builderView = [[UIView alloc]initWithFrame:CGRectMake(0, 44, 1024, 724)];
        [self.view addSubview:builderView];
        [builderView addSubview:test.view];
        test->buildingAlbum = TRUE;
        [UIView commitAnimations];
    }

}

- (void)helpButton
{
    
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            UIImage *faqimage = [UIImage imageNamed:@"help.png"];
            faqButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            faqButton.frame = CGRectMake(461.0, 5, 25.0, 22.0 );
            [faqButton setBackgroundImage:faqimage forState:UIControlStateNormal];
            [faqButton setTitle:@"Help" forState:UIControlStateNormal];
            [faqButton setBackgroundColor:[UIColor clearColor]];
            [faqButton addTarget:self action:@selector(faqClicked:) forControlEvents:UIControlEventTouchUpInside];
            [topNavigationBar addSubview:faqButton];
        }
        else
        {
            UIImage *faqimage = [UIImage imageNamed:@"help.png"];
            faqButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            faqButton.frame = CGRectMake(373.0, 5, 25.0, 22.0 );
            [[faqButton layer] setCornerRadius:15.0f];
            [faqButton setBackgroundImage:faqimage forState:UIControlStateNormal];
            [faqButton setBackgroundColor:[UIColor clearColor]];
            [faqButton addTarget:self action:@selector(faqClicked:) forControlEvents:UIControlEventTouchUpInside];
            [topNavigationBar addSubview:faqButton];
        }
    }
    else
    {
        //ipad
        UIImage *faqimage = [UIImage imageNamed:@"help.png"];
        faqButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        faqButton.frame = CGRectMake(890, 6, 35.0,32.0 );
        [[faqButton layer] setCornerRadius:18.0f];
        [faqButton setBackgroundImage:faqimage forState:UIControlStateNormal];
        [faqButton setBackgroundColor:[UIColor clearColor]];
        [faqButton addTarget:self action:@selector(faqClicked:) forControlEvents:UIControlEventTouchUpInside];
        [topNavigationBar addSubview:faqButton];
    }

}

-(void)callFaqMethod
{
    NSString *checkDBValue;
    NSArray *homeDomains = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [homeDomains objectAtIndex:0];
    databasePath = [documentsDirectory stringByAppendingPathComponent:@"album.db"];
    if(sqlite3_open([databasePath UTF8String], &albumDB)==SQLITE_OK)
    {
        const char *sqlStatement ="select * from TUTORIAL";
        sqlite3_stmt *compiledStatement;
        if(sqlite3_prepare_v2(albumDB, sqlStatement,-1, &compiledStatement , NULL)== SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                checkDBValue =[NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement,0)];
            }
        }
        sqlite3_finalize(compiledStatement);
    }
    sqlite3_close(albumDB);
    if(checkDBValue == nil || [checkDBValue isEqualToString:@"False"])
    {
    callFaq = TRUE;
    faqAlert = [[UIAlertView alloc]initWithTitle:nil message:@"Watch Picvie Tutorial" delegate:self cancelButtonTitle:@"Skip" otherButtonTitles:@"Continue", nil];
    [faqAlert show];
    }
}
-(void)faqNext
{
    //---------------------------Adding Next Button to the View---------------------------------//
    
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            nextImage = [UIImage imageNamed:@"next_s.png"];
            nextHelpButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            nextHelpButton.frame = CGRectMake(474, 280, 50.0, 30.0 );
            [nextHelpButton setBackgroundImage:nextImage  forState:UIControlStateNormal];
            [nextHelpButton addTarget:self action:@selector(nextHelpClicked) forControlEvents:UIControlEventTouchUpInside];
            [helpView addSubview:nextHelpButton];
        }
        else
        {
            nextImage = [UIImage imageNamed:@"next_s.png"];
            nextHelpButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            nextHelpButton.frame = CGRectMake(390, 280, 50.0, 30.0 );
            [nextHelpButton setBackgroundImage:nextImage  forState:UIControlStateNormal];
            [nextHelpButton addTarget:self action:@selector(nextHelpClicked) forControlEvents:UIControlEventTouchUpInside];
            [helpView addSubview:nextHelpButton];
        }
        
    }
    else
    {
        nextImage = [UIImage imageNamed:@"next_s.png"];
        nextHelpButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        nextHelpButton.frame = CGRectMake(892.0, 700.0, 70.0, 50.0 );
        [nextHelpButton setBackgroundImage:nextImage  forState:UIControlStateNormal];
        [nextHelpButton addTarget:self action:@selector(nextHelpClicked) forControlEvents:UIControlEventTouchUpInside];
        [helpView addSubview:nextHelpButton];
    }

}
-(void)faqPrevious
{
    //---------------------------Adding Prev Button to the View-------------------------------//
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            oneLayOutImage = [UIImage imageNamed:@"previous.png"];
            prevHelpButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevHelpButton.frame = CGRectMake(44, 280, 50.0, 30.0 );
            [prevHelpButton setBackgroundImage:oneLayOutImage  forState:UIControlStateNormal];
            [prevHelpButton addTarget:self action:@selector(prevHelpClicked) forControlEvents:UIControlEventTouchUpInside];
            [helpView addSubview:prevHelpButton];
        }
        else
        {
            oneLayOutImage = [UIImage imageNamed:@"previous.png"];
            prevHelpButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            prevHelpButton.frame = CGRectMake(40, 280, 50.0, 30.0 );
            [prevHelpButton setBackgroundImage:oneLayOutImage  forState:UIControlStateNormal];
            [prevHelpButton addTarget:self action:@selector(prevHelpClicked) forControlEvents:UIControlEventTouchUpInside];
            [helpView addSubview:prevHelpButton];
        }
        
    }
    else
    {
        oneLayOutImage = [UIImage imageNamed:@"previous.png"];
        prevHelpButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        prevHelpButton.frame = CGRectMake(62.0, 700.0, 70.0, 50.0 );
        [prevHelpButton setBackgroundImage:oneLayOutImage  forState:UIControlStateNormal];
        [prevHelpButton addTarget:self action:@selector(prevHelpClicked) forControlEvents:UIControlEventTouchUpInside];
        [helpView addSubview:prevHelpButton];
    }

}

-(void)faqSkip
{
    //---------------------------------------Add Skip Button---------------------------------------//
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            skipButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            skipButton.frame = CGRectMake(259, 280, 50.0, 30.0 );
            [skipButton setTitle:@"skip" forState:UIControlStateNormal];
            [skipButton addTarget:self action:@selector(skipClicked) forControlEvents:UIControlEventTouchUpInside];
            [helpView addSubview:skipButton];
        }
        else
        {
            skipButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            skipButton.frame = CGRectMake(215, 280, 50.0, 30.0 );
            [skipButton setTitle:@"skip" forState:UIControlStateNormal];
            [skipButton addTarget:self action:@selector(skipClicked) forControlEvents:UIControlEventTouchUpInside];
            [helpView addSubview:skipButton];
        }
        
    }
    else
    {
        skipButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        skipButton.frame = CGRectMake(477.0, 700.0, 70.0, 50.0 );
        [skipButton setTitle:@"skip" forState:UIControlStateNormal];
        [skipButton addTarget:self action:@selector(skipClicked) forControlEvents:UIControlEventTouchUpInside];
        [helpView addSubview:skipButton];
    }

}

-(void)createCheckBox
{
    NSString *checkDBValue;
    NSArray *homeDomains = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES);
    NSString *documentsDirectory = [homeDomains objectAtIndex:0];
    databasePath = [documentsDirectory stringByAppendingPathComponent:@"album.db"];
    if(sqlite3_open([databasePath UTF8String], &albumDB)==SQLITE_OK)
    {
        const char *sqlStatement ="select * from TUTORIAL";
        sqlite3_stmt *compiledStatement;
        if(sqlite3_prepare_v2(albumDB, sqlStatement,-1, &compiledStatement , NULL)== SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                checkDBValue =[NSString stringWithUTF8String:(char *)sqlite3_column_text(compiledStatement,0)];
            }
        }
        sqlite3_finalize(compiledStatement);
    }
    sqlite3_close(albumDB);
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            checkBox = [[UIButton alloc] initWithFrame:CGRectMake(44,310,20,18)];
        }
        else
        {
            checkBox = [[UIButton alloc] initWithFrame:CGRectMake(40,310,20,18)];
        }
    }
    else
    {
        checkBox = [[UIButton alloc] initWithFrame:CGRectMake(62,750,20,18)];
    }
    
    [checkBox setBackgroundImage:[UIImage imageNamed:@"notselectedcheckbox.jpeg"]
                        forState:UIControlStateNormal];
    [checkBox setBackgroundImage:[UIImage imageNamed:@"selectedcheckbox.jpeg"]
                        forState:UIControlStateSelected];
    if([checkDBValue isEqualToString:@"False"])
    {
        checkBoxSelected = false;
        [checkBox setSelected:false];
    }
    else
    {
        checkBoxSelected = true;
        [checkBox setSelected:true];
    }
    checkBox.adjustsImageWhenHighlighted=YES;
    [checkBox addTarget:self action:@selector(checkboxSelected:) forControlEvents:UIControlEventTouchUpInside];
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
           checkLabel = [[UILabel alloc]initWithFrame:CGRectMake(60, 310, 300, 18)];
        }
        else
        {
            checkLabel = [[UILabel alloc]initWithFrame:CGRectMake(55, 310, 300, 18)];
        }
    }
    else
    {
        checkLabel = [[UILabel alloc]initWithFrame:CGRectMake(85, 750, 300, 18)];
    }
    [checkLabel setText:@"Do not Show at startup"];
    [helpView addSubview:checkLabel];
    [checkLabel setBackgroundColor:[UIColor blackColor]];
    [checkLabel setTextColor:[UIColor whiteColor]];
    [helpView addSubview:checkBox];
}
-(void)checkboxSelected:(id)sender
{
    checkBoxSelected = !checkBoxSelected;
    [checkBox setSelected:checkBoxSelected];
    Boolean hasRecord = false;
    const char *dbpath = [databasePath UTF8String];
    NSString *checkValue = (checkBoxSelected) ? @"True" : @"False";
    if (sqlite3_open(dbpath, & albumDB) == SQLITE_OK)
    {
        
        const char *sqlStatement ="select * from TUTORIAL";
        sqlite3_stmt *compiledStatement;
        if(sqlite3_prepare_v2(albumDB, sqlStatement,-1, &compiledStatement , NULL)== SQLITE_OK)
        {
            while (sqlite3_step(compiledStatement)==SQLITE_ROW)
            {
                hasRecord = true;
            }
        }

        
        sqlite3_stmt    *statement;
        NSString *insertSQL;
        if(hasRecord)
            insertSQL = [NSString stringWithFormat:
                               @"UPDATE TUTORIAL set DONOTSHOW=\"%@\"",
                               checkValue];
        else
            insertSQL = [NSString stringWithFormat:@"INSERT INTO TUTORIAL (DONOTSHOW) VALUES(\"TRUE\")"];
        const char *insert_stmt = [insertSQL UTF8String];
        sqlite3_prepare_v2(albumDB, insert_stmt, -1, &statement, NULL);
        //sqlite3_bind_text(statement, 1, [checkValue UTF8String], -1, SQLITE_TRANSIENT);
        if (sqlite3_step(statement) == SQLITE_DONE)
        {
            checkValue = (checkBoxSelected) ? @"True" : @"False";
        }
        else
        {
            self.status.text = @"Failed to add into database";
        }
        sqlite3_finalize(statement);
        sqlite3_close(albumDB);
    }

}
- (void)faqClicked:(id)sender
{
    //-----------------Adding Help View on Main View-----------------//
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            helpView = [[UIView alloc]init];
            imageSwitcher = 1;
            helpView.frame = CGRectMake(0, 0, 568, 320);
            [helpView setBackgroundColor:[[UIColor clearColor]colorWithAlphaComponent:0.9]];
            helpView.opaque = NO;
            helpView.clearsContextBeforeDrawing=YES;
            imageSwitcher = 1;
            helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(44, 40, 480, 240)];
            nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
            nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
            UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
            [helpImageView setImage:helpImage];
            [helpView addSubview:helpImageView];
        }
        else
        {
            helpView = [[UIView alloc]init];
            imageSwitcher = 1;
            helpView.frame = CGRectMake(0, 0, 480, 320);
            [helpView setBackgroundColor:[[UIColor clearColor]colorWithAlphaComponent:0.9]];
            helpView.opaque = NO;
            helpView.clearsContextBeforeDrawing=YES;
            imageSwitcher = 1;
            helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(40, 40, 400, 240)];
            nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
            nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
            UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
            [helpImageView setImage:helpImage];
            [helpView addSubview:helpImageView];
        }

    }
    else
    {
        helpView = [[UIView alloc]init];
        helpView.frame = CGRectMake(0, 0, 1024, 768);
        [helpView setBackgroundColor:[[UIColor clearColor]colorWithAlphaComponent:0.9]];
        helpView.opaque = NO;
        helpView.clearsContextBeforeDrawing=YES;
        imageSwitcher = 1;
        helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(62, 50, 900, 650)];
        nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
        nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
        UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
        [helpImageView setImage:helpImage];
        [helpView addSubview:helpImageView];
    }
    [self faqNext];
    [self faqPrevious];
    [prevHelpButton setEnabled: NO];
    [self faqSkip];
    [self createCheckBox];
    //[self checkboxSelected:nil];
    [self.view addSubview:helpView];
}
-(void)skipClicked
{
    skip = TRUE;
    [self endClicked];
}
-(void)nextHelpClicked
{
    [prevHelpButton setEnabled:YES];
    if(imageSwitcher == 21)
    {
        [self endClicked];
    }
    else
    {
        if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
        {
            //for iPhone5
            if([[UIScreen mainScreen]bounds].size.height == 568)
            {
                imageSwitcher = imageSwitcher+1;
                nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
                nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
                UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
                helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(44, 40, 480, 240)];
                [helpImageView setImage:helpImage];
            }
            else
            {
                imageSwitcher = imageSwitcher+1;
                nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
                nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
                UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
                helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(40, 40, 400, 240)];
                [helpImageView setImage:helpImage];
            }
        }
        else
        {
            imageSwitcher = imageSwitcher+1;
            nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
            nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
            UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
            helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(62, 50, 900, 650)];
             [helpImageView setImage:helpImage];
        }
        [helpView addSubview:helpImageView];
        if(imageSwitcher == 21)
        {
            nextHelpButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
            {
                //for iPhone5
                if([[UIScreen mainScreen]bounds].size.height == 568)
                {
                    nextHelpButton.frame = CGRectMake(474, 280, 50.0, 30.0 );
                }
                else
                {
                    nextHelpButton.frame = CGRectMake(390, 280, 50.0, 30.0 );
                }
            }
            else
            {
                nextHelpButton.frame = CGRectMake(892.0, 700.0, 70.0, 50.0 );
            }
            [nextHelpButton setTitle:@"End" forState:UIControlStateNormal];
            [nextHelpButton addTarget:self action:@selector(endClicked) forControlEvents:UIControlEventTouchUpInside];
            [helpView addSubview:nextHelpButton];
        }

    }
}
-(void)endClicked
{
    if(skip)
    {
        [helpView removeFromSuperview];
        helpView = nil;
        helpImageView = nil;
        nextHelpButton = nil;
        prevHelpButton = nil;
        helpViewingALert = nil;
        faqStartButton = nil;
        skip = FALSE;
    }
    else
    {
        helpViewingALert = [[UIAlertView alloc] initWithTitle:nil
                                                      message:@"Thanks for Watching the Tutorial"
                                                     delegate:self
                                            cancelButtonTitle:nil
                                            otherButtonTitles: nil];
        
        
        [helpViewingALert show];
        [self autoDissmissAlert];
        [helpView removeFromSuperview];
        helpView = nil;
        helpImageView = nil;
        nextHelpButton = nil;
        prevHelpButton = nil;
        helpViewingALert = nil;
        faqStartButton = nil;
    }
}
-(void)prevHelpClicked
{
    [nextHelpButton setHidden:YES];
    [self faqNext];
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            imageSwitcher = imageSwitcher-1;
            nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
            nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
            UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
            helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(40, 40, 400, 240)];
            [helpImageView setImage:helpImage];
        }
        else
        {
            imageSwitcher = imageSwitcher-1;
            nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
            nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
            UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
            helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(44, 40, 480, 240)];
            [helpImageView setImage:helpImage];
            
        }
    }
    else
    {
        imageSwitcher = imageSwitcher-1;
        nextHelpImagePicture = [NSString stringWithFormat:@"%d", imageSwitcher];
        nextHelpImagePicture = [nextHelpImagePicture stringByAppendingString:@".png"];
        UIImage *helpImage = [UIImage imageNamed:nextHelpImagePicture];
        helpImageView = [[UIImageView alloc]initWithFrame:CGRectMake(62, 50, 900, 650)];
        [helpImageView setImage:helpImage];
    }
    [helpView addSubview:helpImageView];
    if(imageSwitcher == 1)
    {
        [prevHelpButton setEnabled:NO];
    }
    
}

-(void)autoDissmissAlert
{
    [self performSelector:@selector(dismissAlertView:) withObject:helpViewingALert afterDelay:3];
}
-(void)dismissAlertView:(UIAlertView *)alertView
{
    [alertView dismissWithClickedButtonIndex:0 animated:YES];
}
/*- (void)faqCancled
{
    [faqWebView removeFromSuperview];
    faqWebView= NULL;
}*/

-(IBAction)viewer:(id)sender
{
    if(tableviewRemove)
    {
        if(back)
        {
            [changeThemeTableView removeFromSuperview];
            changeThemeTableView = nil;
            viewer.title = @"Album";
            [viewer setEnabled:NO];
            back= FALSE;
            tableviewRemove = FALSE;
        }
        else
        {
            [cameraAlbumTableView removeFromSuperview];
            cameraControl = nil;
            cameraAlbumTableView=nil;
            viewer.title = @"Album";
            [viewer setEnabled:NO];
            tableviewRemove = FALSE;
        }
    }
    else
    {
        [topNavigationBar setTintColor:[UIColor blackColor]];
        self->topNavigationBar.topItem.title = @"Picvie Album";
        NSDictionary *textTitleOptions = [NSDictionary dictionaryWithObjectsAndKeys:[UIColor whiteColor], UITextAttributeTextColor, nil];
        topNavigationBar.titleTextAttributes = textTitleOptions;
        textTitleOptions = NULL;
        [faqButton setHidden:NO];
        /*[autoPlayStopButton setHidden:YES];
        [autoPlayButton setHidden:YES];*/
        [self helpButton];
        currentPage = 0;
        previousPage= 0;
        [player pause];
        //------------------------------------Coming From Viewing ALbum------------------------------------//
        if(buttonClicked)
        {
            for (id subview in self.view.subviews)
            {
                if([subview isKindOfClass:[UIButton class]])
                {
                    [subview removeFromSuperview];
                }
            }
            if(moviePlayerVC)
            {
                [moviePlayerVC.moviePlayer.view removeFromSuperview];
                videoShow = FALSE;
                videoAlbumShowing = FALSE;
                moviePlayerVC = nil;
               
            }
            [newView removeFromSuperview];
            swipeDownGestureRecognizer = nil;
            swipeUpGestureRecognizer = nil;
            [viewer setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor whiteColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
            [settings setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys: [UIColor whiteColor], UITextAttributeTextColor,nil] forState:UIControlStateNormal];
            thumbnailArray = NULL;
            audioStop = FALSE;
            thumbnailFinish = FALSE;
            oneFingerSwipeLeft = NULL;
            oneFingerSwipeRight = NULL;
            videoInFirstPage = FALSE;
            [self destroyThumbSlider];
            [autoPlayStopButton setHidden:YES];
            [autoPlayButton setHidden:YES];
            autoPlayStopButton = nil;
            autoPlayButton = nil;
            [self destroyMethod];
            [newView.layer removeAllAnimations];
            newView = nil;
            extraImageTableView = nil;
            videosTableView = nil;
            audiosTableView = Nil;
            webLinkTableVIew = nil;
            changeThemeTableView = nil;
            settingsTableView = nil;
            [self builderButton];
            [self cameraButton];
            buttonClicked = FALSE;
            viewer.title = @"Album";
            [viewer setEnabled:NO];
        }
    //----------------------------------------From Builder Back--------------------------------------------//
        else
        {
                backToAlbum = TRUE;
                loadingAlertView = [[UIAlertView alloc] initWithTitle:@"Do You Want to Exit?"
                                                          message:nil
                                                         delegate:self
                                                cancelButtonTitle:@"No"
                                                otherButtonTitles:@"Yes",nil];
                [loadingAlertView show];
            
        }
    }
}

-(IBAction)settings:(id)sender
{
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            if (!startStopButtonIsActive)
            {
                self.startStopButtonIsActive = !self.startStopButtonIsActive;
                settingsTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 568,288)
                                                                 style:UITableViewStyleGrouped];
                settingsTableView.dataSource = self;
                settingsTableView.delegate = self;
                settingsTableView.tag = 3;
                [self.view addSubview: settingsTableView];
                if(buttonClicked)
                    [viewer setEnabled:NO];
                settings.title = @"Done";
            }
            else
            {
                self.startStopButtonIsActive = !self.startStopButtonIsActive;
                [settingsTableView removeFromSuperview];
                if(buttonClicked)
                    [viewer setEnabled:YES];
                settings.title = @"Settings";
            }
        }
        else
        {
            if (!startStopButtonIsActive)
            {
                self.startStopButtonIsActive = !self.startStopButtonIsActive;
                settingsTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 32, 480,288)
                                                                 style:UITableViewStyleGrouped];
                settingsTableView.dataSource = self;
                settingsTableView.delegate = self;
                settingsTableView.tag = 3;
                [self.view addSubview: settingsTableView];
                if(buttonClicked)
                    [viewer setEnabled:NO];
                settings.title = @"Done";
            }
            else
            {
                self.startStopButtonIsActive = !self.startStopButtonIsActive;
                [settingsTableView removeFromSuperview];
                if(buttonClicked)
                    [viewer setEnabled:YES];
                settings.title = @"Settings";
            }
        }
    }
    else
    {
        if (!startStopButtonIsActive)
        {
            self.startStopButtonIsActive = !self.startStopButtonIsActive;
            settingsTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 44, 1024,724)
                                                             style:UITableViewStyleGrouped];
            settingsTableView.dataSource = self;
            settingsTableView.delegate = self;
            settingsTableView.tag = 3;
            [self.view addSubview: settingsTableView];
            if(buttonClicked)
                [viewer setEnabled:NO];
            settings.title = @"Done";
        }
        else
        {
            self.startStopButtonIsActive = !self.startStopButtonIsActive;
            [settingsTableView removeFromSuperview];
            if(buttonClicked)
                [viewer setEnabled:YES];
            settings.title = @"Settings";
        }
    }
     

}

//------------------------------Camera Thing Written Below----------------------------//
- (void)cameraButton
{
    //settings.enabled = NO;
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            UIImage *cameraBtn = [UIImage imageNamed:@"camera.png"];
            UIButton *cameraButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            cameraButton.frame = CGRectMake(0.0, 170.0, 38.0, 38.0 );
            [cameraButton setBackgroundImage:cameraBtn forState:UIControlStateNormal];
            [cameraButton addTarget:self action:@selector(cameraClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:cameraButton];
        }
        else
        {
            UIImage *cameraBtn = [UIImage imageNamed:@"camera.png"];
            UIButton *cameraButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
            cameraButton.frame = CGRectMake(0.0, 170.0, 38.0, 38.0 );
            [cameraButton setBackgroundImage:cameraBtn forState:UIControlStateNormal];
            [cameraButton addTarget:self action:@selector(cameraClicked) forControlEvents:UIControlEventTouchUpInside];
            [self.view addSubview:cameraButton];
        }
        
    }
    else
    {
        //ipad
        UIImage *cameraBtn = [UIImage imageNamed:@"camera.png"];
        UIButton *cameraButton = [UIButton buttonWithType:UIButtonTypeRoundedRect];
        cameraButton.frame = CGRectMake(0.0, 420.0, 60.0,60.0 );
        [cameraButton setBackgroundImage:cameraBtn forState:UIControlStateNormal];
        [cameraButton addTarget:self action:@selector(cameraClicked) forControlEvents:UIControlEventTouchUpInside];
        [self.view addSubview:cameraButton];
    }
}

- (void) cameraClicked
{
    camera = TRUE;
    counter = 0;
    //For Camera
    if ([[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPhone)
    {
        //for iPhone5
        if([[UIScreen mainScreen]bounds].size.height == 568)
        {
            cameraView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 568, 320)];
            [cameraView setBackgroundColor:[UIColor blackColor]];
        }
        else
        {
            cameraView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 480, 320)];
            [cameraView setBackgroundColor:[UIColor blackColor]];
        }
    }
    else
    {
        cameraView = [[UIView alloc]initWithFrame:CGRectMake(0, 0, 1024, 768)];
        [cameraView setBackgroundColor:[UIColor blackColor]];
    }
    
   cameraControl = [[UIActionSheet alloc] initWithTitle:@"Name your new Picvie album" delegate:self cancelButtonTitle:@"cancel" destructiveButtonTitle:nil otherButtonTitles:@"Create New Album",@"Add  Existing Album", nil];
    cameraControl.actionSheetStyle = UIActionSheetStyleDefault;
    [cameraControl showInView:self.view];
    showCameraAlert = TRUE;
    
}

- (void)viewDidAppear:(BOOL)animated
{
    [super viewDidAppear:animated];
    CGPoint centerPoint = CGPointMake(CGRectGetMidX( scrollView.bounds),
                                      CGRectGetMidY( scrollView.bounds));
    [imageView setCenter:centerPoint];
}

- (void)view:(UIView*)view setCenter:(CGPoint)centerPoint
{
    CGRect vf = view.frame;
    CGPoint co = scrollView.contentOffset;
    
    CGFloat x = centerPoint.x - vf.size.width / 2.0;
    CGFloat y = centerPoint.y - vf.size.height / 2.0;
    
    if(x < 0)
    {
        co.x = -x;
        vf.origin.x = 0.0;
    }
    else
    {
        vf.origin.x = x;
    }
    if(y < 0)
    {
        co.y = -y;
        vf.origin.y = 0.0;
    }
    else
    {
        vf.origin.y = y;
    }
    
    view.frame = vf;
    scrollView.contentOffset = co;
}

// MARK: - UIScrollViewDelegate
- (UIView*)viewForZoomingInScrollView:(UIScrollView *)scrollView
{
    return   imageView;
    
}

- (void)scrollViewDidZoom:(UIScrollView *)sv
{
    UIView* zoomView = [sv.delegate viewForZoomingInScrollView:sv];
    CGRect zvf = zoomView.frame;
    if(zvf.size.width < sv.bounds.size.width)
    {
        zvf.origin.x = (sv.bounds.size.width - zvf.size.width) / 2.0;
    }
    else
    {
        zvf.origin.x = 0.0;
    }
    if(zvf.size.height < sv.bounds.size.height)
    {
        zvf.origin.y = (sv.bounds.size.height - zvf.size.height) / 2.0;
    }
    else
    {
        zvf.origin.y = 0.0;
    }
    zoomView.frame = zvf;
}



- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    return NO;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview
    [super didReceiveMemoryWarning];
    passcodeAlert = nil;
    dataBaseAlert = nil;
}


@end
